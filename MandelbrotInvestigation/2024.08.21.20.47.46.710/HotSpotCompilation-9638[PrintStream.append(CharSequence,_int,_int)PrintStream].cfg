begin_compilation
  name " HotSpotCompilation-9638[java.io.PrintStream.append(CharSequence, int, int)]"
  method "HotSpotCompilation-9638[java.io.PrintStream.append(CharSequence, int, int)]"
  date 1724269759943
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?127 v25 ?141 ?141 ?20 ?262 v983 ?149 v991 ?160 v988 ?242 v987 ?246 v989 ?254 ?648 ?649 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v982 v1002 v980 a123 ?47 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v119 v36 v382 i48 v399 v60 v62 ?96 j870 i101 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v119 v40 ?47 i48 v62 v64 v84 ?96 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1505
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v657 v926 i928 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-151059|0xfffffffffffdb1ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1002 
lastLocationAccess: - 
=== Succesors ===
next: v548 
=== Usages ===
v924 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1002 lastLocationAccess: - #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 v908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v926 
y: v923 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v926 y: v923  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v545 #falseSuccessor: v547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a927 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a927  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a927 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
lastLocationAccess: - 
=== Succesors ===
next: i928 
=== Usages ===
a349 v981 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 lastLocationAccess: - #next: i928  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a927 
=== Succesors ===
=== Usages ===
i928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-89867|0xfffffffffffea0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v981 
lastLocationAccess: - 
=== Succesors ===
next: v597 
=== Usages ===
i58 v84 i101 v777 j795 i381 a748 
=== Predecessor ===
a927 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v981 lastLocationAccess: - #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 j656 j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v60 v67 v321 v231 v909 v378 v304 v191 v492 v492 v492 i413 v215 ?47 ?320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i35 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v596 
=== Usages ===
=== Predecessor ===
i928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v595 #falseSuccessor: v596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083]
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i3 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107]
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i929 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i929  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
i357 
=== Predecessor ===
v600 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v982 lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i929 
=== Succesors ===
=== Usages ===
i58 v67 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i929  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i928 
y: i357 
=== Succesors ===
=== Usages ===
v40 v64 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i928 y: i357  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i4 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
i929 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid i669 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -154131
stableDimension: 0
stamp: i32 [-154131]
stampKind: i32
value: int[-154131|0xfffffffffffda5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 v910 v857 v675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i35 
=== Succesors ===
=== Usages ===
v39 v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.6018906262441794
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 15]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i58 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i58  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.9663721533267153
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v45 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v44 #falseSuccessor: v45  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2836) [bci: 20]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v45 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v41 v43 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v41 v43 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.substring(String.java:2839) [bci: 28]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i35 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i357 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid a349 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a927 
=== Succesors ===
=== Usages ===
j789 v399 ?96 j869 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a927  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 24]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i3 
=== Succesors ===
=== Usages ===
v399 v856 v110 i111 v511 j800 a829 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i4 y: i3  <|@  <|@
tid ?127 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1506
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.subSequence(int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2872
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?127 
=== Succesors ===
=== Usages ===
?47 ?645 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?127  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 31]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.9999787285234901
stamp: void
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 34]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.00977198389730849
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v69 #falseSuccessor: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: ""
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:""]
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2839
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
=== Succesors ===
=== Usages ===
?73 ?112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120  <|@  <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.lang.String.hash int:12>, HotSpotResolvedJavaFieldImpl<java.lang.String.coder byte:16>, HotSpotResolvedJavaFieldImpl<java.lang.String.hashIsZero boolean:17>, HotSpotResolvedJavaFieldImpl<java.lang.String.flags byte:18>, HotSpotResolvedJavaFieldImpl<java.lang.String.value byte[]:20>]
hasIdentity: true
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
objectId: 0
stamp: a!# java.lang.String
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?112 ?112 ?340 ?73 ?73 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?340 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a339 
values: - - - - - 
=== Succesors ===
=== Usages ===
?73 ?96 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a339 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 v855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 v852 v905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a748 a829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j758 j836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j736 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j737 j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 1]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.7183219228648063
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v81 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 4]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i928 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i928  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.24957182022363364
stamp: void
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v88 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 17]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j732 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j732 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j770 
=== Usages ===
v1003 v1004 
=== Predecessor ===
v787 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j770  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j732 
index: - 
=== Succesors ===
=== Usages ===
j770 v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j732 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j770 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
=== Succesors ===
next: j771 
=== Usages ===
j738 v1005 v1006 a747 v1010 v1007 v1008 v1009 
=== Predecessor ===
j732 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - #next: j771  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j732 
index: - 
=== Succesors ===
=== Usages ===
j771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j732 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j771 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
v739 
=== Predecessor ===
j770 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 lastLocationAccess: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i928 
=== Succesors ===
=== Usages ===
v796 j758 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i928  <|@  <|@
f <@~|@floating>@ <|@
tid j758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j795 
y: j757 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j795 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j758 
y: j736 
=== Succesors ===
=== Usages ===
j738 v1007 v1008 v1009 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j758 y: j736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j737 
y: j770 
=== Succesors ===
=== Usages ===
v739 v772 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j737 y: j770  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j771 
y: j738 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j771 y: j738  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v739 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
j771 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v739 #trueSuccessor: v741 #falseSuccessor: v740  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a748 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a748  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_2
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2838
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a2 i35 i4 
=== Succesors ===
=== Usages ===
v963 a748 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a2 i35 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?47 
arguments: v731 i928 
=== Succesors ===
next: v963 
=== Usages ===
v963 a768 
=== Predecessor ===
v741 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?47 arguments: v731 i928 #next: v963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-200561|0xfffffffffffcf08f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?47 
object: a748 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
a748 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?47 object: a748 #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v963 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
value: j738 
stateAfter: - 
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - value: j738 stateAfter: - #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j770 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1007 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1007 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j770 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1008 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1008 #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j770 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1009 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1009 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
value: j743 
stateAfter: - 
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - value: j743 stateAfter: - #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
value: v925 
stateAfter: - 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - value: v925 stateAfter: - #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
value: i928 
stateAfter: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - value: i928 stateAfter: - #next: v746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j770 
=== Succesors ===
next: v750 
=== Usages ===
a768 
=== Predecessor ===
v746 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j770 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
a747 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v751 
values: a747 a748 
=== Succesors ===
=== Usages ===
j793 a365 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v751 values: a747 a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: j789 
=== Usages ===
a768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a349 
=== Succesors ===
next: j793 
=== Usages ===
v1011 
=== Predecessor ===
v751 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a349 #next: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a768 
=== Succesors ===
next: v796 
=== Usages ===
v1012 
=== Predecessor ===
j789 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a768 #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j789 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j789 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j793 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1011 v1012 j795 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
j793 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1011 v1012 j795 #next: v364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a365 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a!# byte[]
=== Inputs ===
object: a768 
=== Succesors ===
next: v115 
=== Usages ===
a116 
=== Predecessor ===
v364 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a768 #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
a365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v87 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v87 #next: v867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j797 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j849 
=== Usages ===
v1013 v1014 
=== Predecessor ===
v867 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j849  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j797 
index: - 
=== Succesors ===
=== Usages ===
j849 v851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
=== Succesors ===
next: j850 
=== Usages ===
j802 v1015 v1016 v1017 a828 v1018 v1022 v1019 v1020 v1021 
=== Predecessor ===
j797 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - #next: j850  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j797 
index: - 
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: v806 
=== Usages ===
v803 
=== Predecessor ===
j849 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i48 
=== Succesors ===
=== Usages ===
j836 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j800 
y: j757 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j800 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j836 
y: j736 
=== Succesors ===
=== Usages ===
j802 v817 j838 v1019 v1020 v1021 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j836 y: j736  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j801 
y: j849 
=== Succesors ===
=== Usages ===
v803 v851 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j849  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j850 
y: j802 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j850 y: j802  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: a339 a339 
=== Succesors ===
=== Usages ===
?96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a339 a339  <|@  <|@
tid ?96 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.copyOfRange(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3854
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?112 
values: a349 i3 i4 
virtualObjectMappings: ?340 
=== Succesors ===
=== Usages ===
v965 v675 a829 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?112 values: a349 i3 i4 virtualObjectMappings: ?340  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v803 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
j850 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v803 #trueSuccessor: v805 #falseSuccessor: v804  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?96 
arguments: v731 i48 
=== Succesors ===
next: v965 
=== Usages ===
v965 a847 
=== Predecessor ===
v805 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?96 arguments: v731 i48 #next: v965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-221041|0xfffffffffffca08f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?96 
object: a829 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
a829 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?96 object: a829 #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
v965 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
value: j802 
stateAfter: - 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - value: j802 stateAfter: - #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j801 
index: j849 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1019 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1019 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j801 
index: j849 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1020 
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v842 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1020 #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j801 
index: j849 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1021 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1021 #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
value: j743 
stateAfter: - 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - value: j743 stateAfter: - #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
lastLocationAccess: - 
value: v925 
stateAfter: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1022 lastLocationAccess: - value: v925 stateAfter: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
lastLocationAccess: - 
value: i48 
stateAfter: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 lastLocationAccess: - value: i48 stateAfter: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j801 
y: j837 
=== Succesors ===
=== Usages ===
v809 v813 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j837  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j839 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j838 y: j839  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v809 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v810 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v809 #trueSuccessor: v811 #falseSuccessor: v810  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j825 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 4]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v815 
values: j211 j825 
=== Succesors ===
=== Usages ===
v817 v1017 j825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v815 values: j211 j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v814 
=== Succesors ===
next: v823 
=== Usages ===
j816 v822 v826 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v814 #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j801 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j816 y: j801  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v818 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v818 #falseSuccessor: v822  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: j816 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: j816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
lastLocationAccess: - 
value: j196 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 lastLocationAccess: - value: j196 stateAfter: - #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j816 
y: j727 
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j816 y: j727  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v815 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v815  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v815 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v815 #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v822 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
lastLocationAccess: - 
length: j838 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1018 lastLocationAccess: - length: j838 #next: v819  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v813 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v819 v821 
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v819 v821 #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j849 
=== Succesors ===
next: v831 
=== Usages ===
a847 
=== Predecessor ===
v827 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j849 #next: v831  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
a828 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v832 
values: a828 a829 
=== Succesors ===
=== Usages ===
j874 a116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v832 values: a828 a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v831 v833 
=== Succesors ===
next: v636 
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v831 v833 #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 22]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
x: i928 
y: i3 
=== Succesors ===
=== Usages ===
v110 i111 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i928 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i101 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i48 y: i101  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
condition: v110 
trueValue: i48 
falseValue: i101 
=== Succesors ===
=== Usages ===
j876 v378 i381 v511 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v110 trueValue: i48 falseValue: i101  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i35 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v634 #falseSuccessor: v635  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -162073
stableDimension: 0
stamp: i32 [-162073]
stampKind: i32
value: int[-162073|0xfffffffffffd86e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
x: i928 
y: i111 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i928 y: i111  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i3 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i381 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v638 #falseSuccessor: v639  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -163097
stableDimension: 0
stamp: i32 [-163097]
stampKind: i32
value: int[-163097|0xfffffffffffd82e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i111 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i48 y: i111  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v642 #falseSuccessor: v643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -164121
stableDimension: 0
stamp: i32 [-164121]
stampKind: i32
value: int[-164121|0xfffffffffffd7ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32 [-164121 - -162073] bits:1...101xxxxxx1011100111
valueDescription: i32
=== Inputs ===
merge: v670 
values: i672 i677 i679 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v670 values: i672 i677 i679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v671 v676 v678 
=== Succesors ===
next: v675 
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v671 v676 v678 #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?96 
actionAndReason: i673 
speculation: j196 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?96 actionAndReason: i673 speculation: j196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j869 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a349 
=== Succesors ===
next: j874 
=== Usages ===
v1023 
=== Predecessor ===
v643 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a349 #next: j874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a847 
=== Succesors ===
next: v877 
=== Usages ===
v1024 
=== Predecessor ===
j869 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a847 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid j870 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j869 
index: j870 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j869 index: j870  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j876 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i111 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1023 v1024 j876 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
j874 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1023 v1024 j876 #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v877 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a116 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v114 
values: a365 a847 
=== Succesors ===
=== Usages ===
?73 a629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v114 values: a365 a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v115 v117 
=== Succesors ===
next: v920 
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v117 #next: v920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j878 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j902 
=== Usages ===
v1025 v1026 
=== Predecessor ===
v920 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j902  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j878 
index: - 
=== Succesors ===
=== Usages ===
j902 v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j878 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j902 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
=== Succesors ===
next: j903 
=== Usages ===
j881 v1027 v1028 a888 v1029 v1030 v1031 
=== Predecessor ===
j878 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - #next: j903  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j878 
index: - 
=== Succesors ===
=== Usages ===
j903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j878 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j903 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
lastLocationAccess: - 
=== Succesors ===
next: v885 
=== Usages ===
v882 
=== Predecessor ===
j902 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 lastLocationAccess: - #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j902 
y: j400 
=== Succesors ===
=== Usages ===
v882 v904 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j902 y: j400  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j903 
y: j881 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j903 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v882 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v883 
=== Usages ===
=== Predecessor ===
j903 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v882 #trueSuccessor: v884 #falseSuccessor: v883  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a889 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a889  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: a339 a339 a116 
virtualObjectMappings: ?340 
=== Succesors ===
=== Usages ===
v967 a889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a339 a339 a116 virtualObjectMappings: ?340  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a889 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v29 
=== Succesors ===
next: v967 
=== Usages ===
v967 a900 
=== Predecessor ===
v884 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v29 #next: v967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-234609|0xfffffffffffc6b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a889 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
a889 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a889 #next: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
value: j881 
stateAfter: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - value: j881 stateAfter: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1029 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1029 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1027 
lastLocationAccess: - 
value: j743 
stateAfter: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1027 lastLocationAccess: - value: j743 stateAfter: - #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
lastLocationAccess: - 
value: v923 
stateAfter: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1031 lastLocationAccess: - value: v923 stateAfter: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1028 
lastLocationAccess: - 
value: i35 
stateAfter: - 
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1028 lastLocationAccess: - value: i35 stateAfter: - #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1030 
lastLocationAccess: - 
value: j196 
stateAfter: - 
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1030 lastLocationAccess: - value: j196 stateAfter: - #next: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j902 
=== Succesors ===
next: v891 
=== Usages ===
a900 
=== Predecessor ===
v910 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j902 #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
a888 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v892 
values: a888 a889 
=== Succesors ===
=== Usages ===
v1001 a631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v892 values: a888 a889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v893 
=== Succesors ===
next: v630 
=== Usages ===
a900 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v893 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a900 
index: - 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a900 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a629 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a116 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
value: a629 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - value: a629 stateAfter: - #next: v632  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.io.PrintStream.append(CharSequence, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(CharSequence, int, int) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a900 
=== Succesors ===
next: v953 
=== Usages ===
a136 
=== Predecessor ===
v632 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a900 #next: v953  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
a631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 47]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a54 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a54  <|@  <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.newString(byte[], int, int)>
=== Inputs ===
arguments: a349 i3 i48 
=== Succesors ===
=== Usages ===
a54 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a349 i3 i48  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2840
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
=== Succesors ===
=== Usages ===
a54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
bci: 54
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#StringUTF16.newString
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v399 
stateDuring: ?645 
=== Succesors ===
next: v126 
=== Usages ===
a123 
=== Predecessor ===
v50 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v399 stateDuring: ?645 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
a54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
stamp: a# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v121 
values: a2 a54 
=== Succesors ===
=== Usages ===
v128 a136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v121 values: a2 a54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v126 
=== Succesors ===
next: v131 
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v126 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a123 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a123  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 8.586421690326418E-7
stamp: void
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v130 #falseSuccessor: v950  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: "null"
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:"null"]
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 10]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: a!# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v134 
values: a132 a123 a631 a71 
=== Succesors ===
=== Usages ===
?137 ?254 ?149 v424 ?242 ?246 ?648 ?649 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v134 values: a132 a123 a631 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v135 v953 v954 
=== Succesors ===
next: a930 
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v135 v953 v954 #next: a930  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a930 a941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a930 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
=== Succesors ===
next: a931 
=== Usages ===
a403 v984 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - #next: a931  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 1506
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?141 ?20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?15 
values: a1 a1 
=== Succesors ===
=== Usages ===
?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?15 values: a1 a1  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: areturn
code: ResolvedJavaMethodBytecode<String.valueOf(Object)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4465
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?141 
values: a136 
=== Succesors ===
=== Usages ===
v969 a931 a932 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?141 values: a136  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a930 
=== Succesors ===
=== Usages ===
a931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a931 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-155155|0xfffffffffffda1ed]
deoptSpeculation: long[2580|0xa14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v984 
lastLocationAccess: - 
=== Succesors ===
next: a932 
=== Usages ===
v985 
=== Predecessor ===
a930 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v984 lastLocationAccess: - #next: a932  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a931 
=== Succesors ===
=== Usages ===
a932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a932 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-104203|0xfffffffffffe68f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v985 
lastLocationAccess: - 
=== Succesors ===
next: v969 
=== Usages ===
a410 v986 v1000 v1033 
=== Predecessor ===
a931 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v985 lastLocationAccess: - #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?137 
object: v1033 
=== Succesors ===
next: j933 
=== Usages ===
=== Predecessor ===
a932 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: v1033 #next: j933  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
j933 j946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j933 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
lastLocationAccess: - 
=== Succesors ===
next: a934 
=== Usages ===
v978 
=== Predecessor ===
v969 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 lastLocationAccess: - #next: a934  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j933 
index: - 
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j933 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: i413 
=== Usages ===
v223 a493 v726 
=== Predecessor ===
j933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: i413  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
i413 i489 v490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i230 ?265 v272 ?646 v491 ?316 v492 i413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
expectedValue: i35 
newValue: i165 
stateAfter: - 
=== Succesors ===
next: v218 
=== Usages ===
v215 
=== Predecessor ===
a934 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - expectedValue: i35 newValue: i165 stateAfter: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i35 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i413 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid a410 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a932 
=== Succesors ===
=== Usages ===
v726 v491 ?189 ?646 v492 ?236 ?229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a932  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a935 v494 v724 v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?15 
values: a1 
=== Succesors ===
=== Usages ===
?338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?15 values: a1  <|@  <|@
tid ?338 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?20 
=== Succesors ===
=== Usages ===
?149 ?160 ?262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?20  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 788
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?338 
values: a1 a136 
=== Succesors ===
=== Usages ===
?154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?338 values: a1 a136  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a930 
=== Succesors ===
=== Usages ===
?154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a930  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?149 
values: a403 
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a403  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?154 
=== Succesors ===
=== Usages ===
?189 ?203 ?236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?154  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v215 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v215 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
a488 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid a488 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a935 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a935  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a488 
y: a934 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a488 y: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
a935 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v225 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i489 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
i230 ?229 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
=== Inputs ===
x: i489 
y: i165 
=== Succesors ===
=== Usages ===
v231 v490 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i489 y: i165  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i35 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i230 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v231 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
i489 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v231 #trueSuccessor: v624 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
values: a410 
=== Succesors ===
=== Usages ===
?229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238 values: a410  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?236 
values: i489 a410 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?236 values: i489 a410  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000000c94[index: 100, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?229 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
value: i230 
stateAfter: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - value: i230 stateAfter: - #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i188 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i188  <|@  <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a410 i165 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a410 i165  <|@  <|@
tid ?189 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
values: a410 
=== Succesors ===
=== Usages ===
?646 ?647 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238 values: a410  <|@  <|@
tid ?646 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?189 
values: a410 i165 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?189 values: a410 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v491 
stateDuring: ?646 
=== Succesors ===
next: v194 
=== Usages ===
v191 
=== Predecessor ===
v224 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v491 stateDuring: ?646 #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i35 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i188 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.7437536316095293
stamp: void
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
i188 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v193 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a410 a195 i165 i35 i35 i35 j196 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a410 a195 i165 i35 i35 i35 j196  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?189 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v492 
stateDuring: ?647 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v492 stateDuring: ?647 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
i198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
precise: true
stamp: void
=== Inputs ===
address: v1000 
value: - 
stateBefore: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1000 value: - stateBefore: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid a493 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
lastLocationAccess: - 
value: a493 
stateAfter: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 lastLocationAccess: - value: a493 stateAfter: - #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
precise: false
stamp: void
=== Inputs ===
address: v1000 
value: a934 
object: a410 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1000 value: a934 object: a410 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 v204 v237 
=== Succesors ===
next: a936 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 v204 v237 #next: a936  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a936 a938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
lastLocationAccess: - 
=== Succesors ===
next: v971 
=== Usages ===
a420 v1034 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 lastLocationAccess: - #next: v971  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
=== Succesors ===
=== Usages ===
v972 v971 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a936 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?203 
object: v1034 
=== Succesors ===
next: a937 
=== Usages ===
=== Predecessor ===
a936 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?203 object: v1034 #next: a937  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a937 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:809) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
lastLocationAccess: - 
=== Succesors ===
next: v972 
=== Usages ===
v972 
=== Predecessor ===
v971 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v987 lastLocationAccess: - #next: v972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-156179|0xfffffffffffd9ded]
deoptSpeculation: long[11540|0x2d14]
stamp: void
=== Inputs ===
stateBefore: ?203 
object: a937 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
a937 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?203 object: a937 #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a936 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a936  <|@  <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/Writer;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<Writer.write(String)>
=== Inputs ===
arguments: a420 a136 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a420 a136  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 790
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?338 
values: a1 
=== Succesors ===
=== Usages ===
?242 ?246 ?254 ?648 ?649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?338 values: a1  <|@  <|@
tid ?648 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 810
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#Writer.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v424 
stateDuring: ?648 
=== Succesors ===
next: a938 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v424 stateDuring: ?648 #next: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a938 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
lastLocationAccess: - 
=== Succesors ===
next: v957 
=== Usages ===
a426 v1032 
=== Predecessor ===
v241 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 lastLocationAccess: - #next: v957  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?242 
object: v1032 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
a938 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?242 object: v1032 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid a426 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a938 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a938  <|@  <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedWriter;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedWriter.flushBuffer()>
=== Inputs ===
arguments: a426 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a426  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedWriter.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v430 
stateDuring: ?649 
=== Succesors ===
next: a939 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v430 stateDuring: ?649 #next: a939  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a939 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.OutputStreamWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.charOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 20]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.io.OutputStreamWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
lastLocationAccess: - 
=== Succesors ===
next: a940 
=== Usages ===
v990 
=== Predecessor ===
v245 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v989 lastLocationAccess: - #next: a940  <|@  <|@
tid ?246 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v974 a940 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a939 
=== Succesors ===
=== Usages ===
a940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a940 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: int[-111371|0xfffffffffffe4cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?246 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v974 
=== Usages ===
a438 v1035 
=== Predecessor ===
a939 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?246 guard: - address: v990 lastLocationAccess: - #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a940 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?246 
object: v1035 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
a940 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?246 object: v1035 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a940 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a940  <|@  <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.flushBuffer()>
=== Inputs ===
arguments: a438 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a438  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
?255 ?650 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 192
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?254 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v442 
stateDuring: ?650 
=== Succesors ===
next: a941 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v442 stateDuring: ?650 #next: a941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a941 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
=== Succesors ===
next: a942 
=== Usages ===
a448 v992 
=== Predecessor ===
v253 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - #next: a942  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: return
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: OutputStreamWriter.java
sourceLine: 193
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?254 
=== Succesors ===
=== Usages ===
v1037 a942 a943 v976 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?254  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a941 
=== Succesors ===
=== Usages ===
a942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a942 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-114955|0xfffffffffffe3ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?255 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: a943 
=== Usages ===
a452 v993 
=== Predecessor ===
a941 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?255 guard: - address: v992 lastLocationAccess: - #next: a943  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a942 
=== Succesors ===
=== Usages ===
a943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a943 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-115979|0xfffffffffffe3af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?255 
guard: - 
address: v993 
lastLocationAccess: - 
=== Succesors ===
next: v976 
=== Usages ===
a456 v994 v995 v996 v1036 
=== Predecessor ===
a942 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?255 guard: - address: v993 lastLocationAccess: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?255 
object: v1036 
=== Succesors ===
next: i944 
=== Usages ===
=== Predecessor ===
a943 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?255 object: v1036 #next: i944  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 27]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
lastLocationAccess: - 
=== Succesors ===
next: v617 
=== Usages ===
v506 
=== Predecessor ===
v976 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 lastLocationAccess: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i944 
y: i505 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i944 y: i505  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i944 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:815) [bci: 49]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i459 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i459  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
i459 v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
=== Succesors ===
next: a945 
=== Usages ===
i288 v272 ?265 
=== Predecessor ===
v615 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - #next: a945  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
a945 v485 v723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a945 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
lastLocationAccess: - 
=== Succesors ===
next: j946 
=== Usages ===
a462 
=== Predecessor ===
i459 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v995 lastLocationAccess: - #next: j946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j946 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
lastLocationAccess: - 
=== Succesors ===
next: a947 
=== Usages ===
v979 
=== Predecessor ===
a945 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 lastLocationAccess: - #next: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j946 
index: - 
=== Succesors ===
=== Usages ===
a947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j946 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a947 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
v270 
=== Predecessor ===
j946 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v979 lastLocationAccess: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid a462 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a945 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a945  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a462 
y: a947 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a462 y: a947  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a942 
=== Succesors ===
=== Usages ===
?176 ?170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a942  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 792
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?338 
values: a1 
=== Succesors ===
=== Usages ===
?166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?338 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a941 
=== Succesors ===
=== Usages ===
?166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a941  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?160 
values: a448 
=== Succesors ===
=== Usages ===
?170 ?176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a448  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
a947 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v619 #falseSuccessor: v620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i165 
=== Succesors ===
=== Usages ===
v173 v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
precise: true
stamp: void
=== Inputs ===
address: v995 
value: - 
stateBefore: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v995 value: - stateBefore: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid a510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
lastLocationAccess: - 
value: a510 
stateAfter: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v995 lastLocationAccess: - value: a510 stateAfter: - #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v280 v282 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v280 v282 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
=== Inputs ===
x: i459 
y: i287 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i459 y: i287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i288 stateAfter: - #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.8679019522956164
stamp: void
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a465 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a465  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
a465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a465 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
lastLocationAccess: - 
=== Succesors ===
next: v293 
=== Usages ===
v997 v721 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 lastLocationAccess: - #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a465 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a465  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.999301444736255
stamp: void
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
a465 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v292 #falseSuccessor: v291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a470 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a470  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a465 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
a471 v722 v998 v999 
=== Predecessor ===
v291 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v997 lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a470 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a470  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.8992297525181168
stamp: void
=== Inputs ===
condition: v722 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
a470 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v722 #trueSuccessor: v299 #falseSuccessor: v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a470 
=== Succesors ===
=== Usages ===
i477 i478 i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
v304 
=== Predecessor ===
v298 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i475 
y: i35 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i475 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v306 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?166 
values: a452 
=== Succesors ===
=== Usages ===
?334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a452  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?176 
=== Succesors ===
=== Usages ===
?313 ?651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?176  <|@  <|@
f <@~|@floating>@ <|@
tid a471 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a470 
=== Succesors ===
=== Usages ===
?313 ?320 ?316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a470  <|@  <|@
tid ?313 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?334 
values: - a471 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?334 values: - a471  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?313 
values: a471 i165 
=== Succesors ===
=== Usages ===
?320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?313 values: a471 i165  <|@  <|@
f <@~|@floating>@ <|@
tid a310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?320 i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 207
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v314 
=== Succesors ===
next: i477 
=== Usages ===
v322 v326 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v314 #next: i477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
=== Succesors ===
next: i478 
=== Usages ===
i318 i478 ?320 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - #next: i478  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i477 
y: i312 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i477 y: i312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
expectedValue: i477 
newValue: i318 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
v321 
=== Predecessor ===
i477 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - expectedValue: i477 newValue: i318 stateAfter: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i478 
y: i35 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i478 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
i478 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v327 #falseSuccessor: v322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
values: i35 a310 a471 j311 - i312 i477 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316 values: i35 a310 a471 j311 - i312 i477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateBefore: ?320 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?320 #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v315 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v315 
=== Succesors ===
next: a948 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v315 #next: a948  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a470 
=== Succesors ===
=== Usages ===
a948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a948 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
a482 
=== Predecessor ===
v322 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v999 lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid a482 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a948 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a948  <|@  <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a482 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a482  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?334 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v483 
stateDuring: ?651 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
a948 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v483 stateDuring: ?651 #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v181 v335 v336 v337 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v181 v335 v336 v337 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?166 
values: a452 
=== Succesors ===
=== Usages ===
?289 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a452  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a943 
=== Succesors ===
=== Usages ===
?265 ?289 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a943  <|@  <|@
tid ?289 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?170 
values: a456 
=== Succesors ===
=== Usages ===
?265 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a456  <|@  <|@
tid ?265 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?289 
values: i459 a456 i165 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?289 values: i459 a456 i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000003494[index: 420, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?265 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 614
mayConvertToGuard: true
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000002a94[index: 340, len: 20, hash: 0x9c96d22a]: UnreachedCode@6[HotSpotMethod<PrintStream.implWrite(String)>, 33]}
stamp: void
=== Inputs ===
stateBefore: ?255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -88371
stableDimension: 0
stamp: i32 [-88371]
stampKind: i32
value: int[-88371|0xfffffffffffea6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: i32 [-154131 - -88371] bits:1...1xx1010xxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v652 
values: i661 i664 i667 i669 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: i661 i664 i667 i669  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v652 
values: j662 j665 j665 j665 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: j662 j665 j665 j665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v663 v666 v668 
=== Succesors ===
next: v657 
=== Usages ===
i655 j656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v663 v666 v668 #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i655 
speculation: j656 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i655 speculation: j656  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v926  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.PrintStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?127 v25 ?141 ?141 ?20 ?262 v983 ?149 v991 ?160 v988 ?242 v987 ?246 v989 ?254 ?648 ?649 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v982 v1002 v980 a123 ?47 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v119 v36 v382 i48 v399 v60 v62 ?96 j870 i101 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v119 v40 ?47 i48 v62 v64 v84 ?96 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1505
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v657 v926 i928 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-151059|0xfffffffffffdb1ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1002 
lastLocationAccess: - 
=== Succesors ===
next: v548 
=== Usages ===
v924 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1002 lastLocationAccess: - #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 v908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v926 
y: v923 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v926 y: v923  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v545 #falseSuccessor: v547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a927 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a927  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a927 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
lastLocationAccess: - 
=== Succesors ===
next: i928 
=== Usages ===
a349 v981 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 lastLocationAccess: - #next: i928  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a927 
=== Succesors ===
=== Usages ===
i928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i928 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-89867|0xfffffffffffea0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v981 
lastLocationAccess: - 
=== Succesors ===
next: v597 
=== Usages ===
i58 v84 i101 v777 j795 i381 a748 
=== Predecessor ===
a927 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v981 lastLocationAccess: - #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 j656 j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 v60 v67 v321 v231 v909 v378 v304 v191 v492 v492 v492 i413 v215 ?47 ?320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i35 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v596 
=== Usages ===
=== Predecessor ===
i928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v595 #falseSuccessor: v596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result int[-152083|0xfffffffffffdaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083]
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i3 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
result int[-153107|0xfffffffffffda9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107]
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: i929 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i929  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
lastLocationAccess: - 
=== Succesors ===
next: v605 
=== Usages ===
i357 
=== Predecessor ===
v600 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v982 lastLocationAccess: - #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i929 
=== Succesors ===
=== Usages ===
i58 v67 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i929  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i928 
y: i357 
=== Succesors ===
=== Usages ===
v40 v64 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i928 y: i357  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i4 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
i929 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid i669 <|@
result int[-154131|0xfffffffffffda5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -154131
stableDimension: 0
stamp: i32 [-154131]
stampKind: i32
value: int[-154131|0xfffffffffffda5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.String.checkBoundsBeginEnd(String.java:4865) [bci: 6]
at java.lang.String.substring(String.java:2834) [bci: 8]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 v910 v857 v675 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i35 
=== Succesors ===
=== Usages ===
v39 v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 12]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.6018906262441794
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 15]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i58 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i58  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2835) [bci: 17]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.9663721533267153
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v44 
falseSuccessor: v45 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v44 #falseSuccessor: v45  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2836) [bci: 20]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v45 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 22]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v41 v43 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v41 v43 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.substring(String.java:2839) [bci: 28]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i35 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i357 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid a349 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.String.substring(String.java:2833) [bci: 1]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a927 
=== Succesors ===
=== Usages ===
j789 v399 ?96 j869 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a927  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2838) [bci: 24]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i3 
=== Succesors ===
=== Usages ===
v399 v856 v110 i111 v511 j800 a829 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i4 y: i3  <|@  <|@
tid ?127 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1506
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?120 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.subSequence(int, int)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2872
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?127 
=== Succesors ===
=== Usages ===
?47 ?645 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?127  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 31]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.9999787285234901
stamp: void
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 34]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:749) [bci: 1]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.00977198389730849
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v69 #falseSuccessor: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:750) [bci: 4]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: ""
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:""]
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2839
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
=== Succesors ===
=== Usages ===
?73 ?112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120  <|@  <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.lang.String.hash int:12>, HotSpotResolvedJavaFieldImpl<java.lang.String.coder byte:16>, HotSpotResolvedJavaFieldImpl<java.lang.String.hashIsZero boolean:17>, HotSpotResolvedJavaFieldImpl<java.lang.String.flags byte:18>, HotSpotResolvedJavaFieldImpl<java.lang.String.value byte[]:20>]
hasIdentity: true
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
objectId: 0
stamp: a!# java.lang.String
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?112 ?112 ?340 ?73 ?73 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?340 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a339 
values: - - - - - 
=== Succesors ===
=== Usages ===
?73 ?96 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a339 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 v855 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 v852 v905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a748 a829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j757 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j758 j836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j736 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j737 j801 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 1]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.7183219228648063
stamp: void
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v81 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 4]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i928 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i928  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: PROFILED designatedSuccessorProbability: 0.24957182022363364
stamp: void
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v88 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 17]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v787 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j732 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j732 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j770 
=== Usages ===
v1003 v1004 
=== Predecessor ===
v787 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j770  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j732 
index: - 
=== Succesors ===
=== Usages ===
j770 v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j732 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j770 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
=== Succesors ===
next: j771 
=== Usages ===
j738 v1005 v1006 a747 v1010 v1007 v1008 v1009 
=== Predecessor ===
j732 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - #next: j771  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j732 
index: - 
=== Succesors ===
=== Usages ===
j771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j732 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j771 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
v739 
=== Predecessor ===
j770 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 lastLocationAccess: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i928 
=== Succesors ===
=== Usages ===
v796 j758 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i928  <|@  <|@
f <@~|@floating>@ <|@
tid j758 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j795 
y: j757 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j795 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j758 
y: j736 
=== Succesors ===
=== Usages ===
j738 v1007 v1008 v1009 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j758 y: j736  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j737 
y: j770 
=== Succesors ===
=== Usages ===
v739 v772 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j737 y: j770  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j771 
y: j738 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j771 y: j738  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v739 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
j771 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v739 #trueSuccessor: v741 #falseSuccessor: v740  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a748 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a748  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: iload_2
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2838
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
values: a2 i35 i4 
=== Succesors ===
=== Usages ===
v963 a748 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120 values: a2 i35 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?47 
arguments: v731 i928 
=== Succesors ===
next: v963 
=== Usages ===
v963 a768 
=== Predecessor ===
v741 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?47 arguments: v731 i928 #next: v963  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-200561|0xfffffffffffcf08f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?47 
object: a748 
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
a748 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?47 object: a748 #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
v963 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
lastLocationAccess: - 
value: j738 
stateAfter: - 
=== Succesors ===
next: v760 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1003 lastLocationAccess: - value: j738 stateAfter: - #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [v16|QWORD + v13|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j770 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1007 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1007 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v16|QWORD + v13|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j770 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1008 
=== Succesors ===
next: v766 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1008 #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v16|QWORD + v13|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j737 
index: j770 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1009 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1009 #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v13|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
lastLocationAccess: - 
value: j743 
stateAfter: - 
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1005 lastLocationAccess: - value: j743 stateAfter: - #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v13|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
lastLocationAccess: - 
value: v925 
stateAfter: - 
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 lastLocationAccess: - value: v925 stateAfter: - #next: v777  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [v13|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
lastLocationAccess: - 
value: i928 
stateAfter: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 lastLocationAccess: - value: i928 stateAfter: - #next: v746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j770 
=== Succesors ===
next: v750 
=== Usages ===
a768 
=== Predecessor ===
v746 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j770 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
a747 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a768 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v751 
values: a747 a748 
=== Succesors ===
=== Usages ===
j793 a365 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v751 values: a747 a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v750 v752 
=== Succesors ===
next: j789 
=== Usages ===
a768 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v750 v752 #next: j789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j789 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a349 
=== Succesors ===
next: j793 
=== Usages ===
v1011 
=== Predecessor ===
v751 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a349 #next: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j793 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a768 
=== Succesors ===
next: v796 
=== Usages ===
v1012 
=== Predecessor ===
j789 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a768 #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result [v22|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j789 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j789 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
result [v23|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j793 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1011 v1012 j795 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
j793 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1011 v1012 j795 #next: v364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a365 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a365 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a!# byte[]
=== Inputs ===
object: a768 
=== Succesors ===
next: v115 
=== Usages ===
a116 
=== Predecessor ===
v364 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a768 #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
a365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v87 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v87 #next: v867  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j797 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j797 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j849 
=== Usages ===
v1013 v1014 
=== Predecessor ===
v867 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j849  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j797 
index: - 
=== Succesors ===
=== Usages ===
j849 v851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j849 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
=== Succesors ===
next: j850 
=== Usages ===
j802 v1015 v1016 v1017 a828 v1018 v1022 v1019 v1020 v1021 
=== Predecessor ===
j797 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - #next: j850  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j797 
index: - 
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
lastLocationAccess: - 
=== Succesors ===
next: v806 
=== Usages ===
v803 
=== Predecessor ===
j849 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 lastLocationAccess: - #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i48 
=== Succesors ===
=== Usages ===
j836 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i48  <|@  <|@
f <@~|@floating>@ <|@
tid j836 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j800 
y: j757 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j800 y: j757  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j836 
y: j736 
=== Succesors ===
=== Usages ===
j802 v817 j838 v1019 v1020 v1021 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j836 y: j736  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j801 
y: j849 
=== Succesors ===
=== Usages ===
v803 v851 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j849  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j850 
y: j802 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j850 y: j802  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: a339 a339 
=== Succesors ===
=== Usages ===
?96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a339 a339  <|@  <|@
tid ?96 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.copyOfRange(byte[], int, int)>
localsSize: 3
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3854
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?112 
values: a349 i3 i4 
virtualObjectMappings: ?340 
=== Succesors ===
=== Usages ===
v965 v675 a829 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?112 values: a349 i3 i4 virtualObjectMappings: ?340  <|@  <|@
f <@*|@fixed>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v803 
=== Succesors ===
trueSuccessor: v805 
falseSuccessor: v804 
=== Usages ===
=== Predecessor ===
j850 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v803 #trueSuccessor: v805 #falseSuccessor: v804  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a829 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?96 
arguments: v731 i48 
=== Succesors ===
next: v965 
=== Usages ===
v965 a847 
=== Predecessor ===
v805 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?96 arguments: v731 i48 #next: v965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-221041|0xfffffffffffca08f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?96 
object: a829 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
a829 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?96 object: a829 #next: v833  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
v965 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
lastLocationAccess: - 
value: j802 
stateAfter: - 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v804 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 lastLocationAccess: - value: j802 stateAfter: - #next: v842  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
result [v27|QWORD + v24|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j801 
index: j849 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1019 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1019 #next: v844  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
result [v27|QWORD + v24|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j801 
index: j849 
=== Succesors ===
=== Usages ===
v844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1020 
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v842 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1020 #next: v846  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
result [v27|QWORD + v24|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j801 
index: j849 
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j801 index: j849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1021 
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v844 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1021 #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
result [v24|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
lastLocationAccess: - 
value: j743 
stateAfter: - 
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1015 lastLocationAccess: - value: j743 stateAfter: - #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
result [v24|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1022 
lastLocationAccess: - 
value: v925 
stateAfter: - 
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1022 lastLocationAccess: - value: v925 stateAfter: - #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
result [v24|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
lastLocationAccess: - 
value: i48 
stateAfter: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 lastLocationAccess: - value: i48 stateAfter: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j801 
y: j837 
=== Succesors ===
=== Usages ===
v809 v813 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j801 y: j837  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j839 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j838 y: j839  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v809 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v810 
=== Usages ===
=== Predecessor ===
v856 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v809 #trueSuccessor: v811 #falseSuccessor: v810  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j825 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j211 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 4]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j816 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v815 
values: j211 j825 
=== Succesors ===
=== Usages ===
v817 v1017 j825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v815 values: j211 j825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v814 
=== Succesors ===
next: v823 
=== Usages ===
j816 v822 v826 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v814 #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j801 
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j816 y: j801  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v818 
falseSuccessor: v822 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v818 #falseSuccessor: v822  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
result [v24|QWORD + v31|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: j816 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: j816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
lastLocationAccess: - 
value: j196 
stateAfter: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 lastLocationAccess: - value: j196 stateAfter: - #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j816 
y: j727 
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j816 y: j727  <|@  <|@
f <@*|@fixed>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v815 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v815  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v815 
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v823 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v815 #next: v821  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v822 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
result [v24|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j849 
index: - 
=== Succesors ===
=== Usages ===
v813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j849 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
lastLocationAccess: - 
length: j838 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1018 lastLocationAccess: - length: j838 #next: v819  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
v813 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v819 v821 
=== Succesors ===
next: v827 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v819 v821 #next: v827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a828 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a828  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a828 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j849 
=== Succesors ===
next: v831 
=== Usages ===
a847 
=== Predecessor ===
v827 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j849 #next: v831  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
a828 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a847 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v832 
values: a828 a829 
=== Succesors ===
=== Usages ===
j874 a116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v832 values: a828 a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v831 v833 
=== Succesors ===
next: v636 
=== Usages ===
a847 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v831 v833 #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid i101 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 22]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
x: i928 
y: i3 
=== Succesors ===
=== Usages ===
v110 i111 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i928 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i101 
=== Succesors ===
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i48 y: i101  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
condition: v110 
trueValue: i48 
falseValue: i101 
=== Succesors ===
=== Usages ===
j876 v378 i381 v511 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v110 trueValue: i48 falseValue: i101  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i35 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i111 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
v832 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v634 #falseSuccessor: v635  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result int[-162073|0xfffffffffffd86e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -162073
stableDimension: 0
stamp: i32 [-162073]
stampKind: i32
value: int[-162073|0xfffffffffffd86e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32
=== Inputs ===
x: i928 
y: i111 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i928 y: i111  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i381 
y: i3 
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i381 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v639 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v638 #falseSuccessor: v639  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result int[-163097|0xfffffffffffd82e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -163097
stableDimension: 0
stamp: i32 [-163097]
stampKind: i32
value: int[-163097|0xfffffffffffd82e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i111 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i48 y: i111  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v642 #falseSuccessor: v643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result int[-164121|0xfffffffffffd7ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: -164121
stableDimension: 0
stamp: i32 [-164121]
stampKind: i32
value: int[-164121|0xfffffffffffd7ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i673 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i32 [-164121 - -162073] bits:1...101xxxxxx1011100111
valueDescription: i32
=== Inputs ===
merge: v670 
values: i672 i677 i679 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v670 values: i672 i677 i679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v671 v676 v678 
=== Succesors ===
next: v675 
=== Usages ===
i673 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v671 v676 v678 #next: v675  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?96 
actionAndReason: i673 
speculation: j196 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?96 actionAndReason: i673 speculation: j196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j869 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j869 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a349 
=== Succesors ===
next: j874 
=== Usages ===
v1023 
=== Predecessor ===
v643 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a349 #next: j874  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j874 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
object: a847 
=== Succesors ===
next: v877 
=== Usages ===
v1024 
=== Predecessor ===
j869 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a847 #next: v877  <|@  <|@
f <@~|@floating>@ <|@
tid j870 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
result [v40|QWORD[*] + v42|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j869 
index: j870 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j869 index: j870  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v41|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j876 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i111 
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1023 v1024 j876 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
j874 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1023 v1024 j876 #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
v877 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a116 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v114 
values: a365 a847 
=== Succesors ===
=== Usages ===
?73 a629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v114 values: a365 a847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v115 v117 
=== Succesors ===
next: v920 
=== Usages ===
a116 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v115 v117 #next: v920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j878 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j878 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j902 
=== Usages ===
v1025 v1026 
=== Predecessor ===
v920 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j902  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j878 
index: - 
=== Succesors ===
=== Usages ===
j902 v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j878 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j902 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
=== Succesors ===
next: j903 
=== Usages ===
j881 v1027 v1028 a888 v1029 v1030 v1031 
=== Predecessor ===
j878 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - #next: j903  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j878 
index: - 
=== Succesors ===
=== Usages ===
j903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j878 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j903 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
lastLocationAccess: - 
=== Succesors ===
next: v885 
=== Usages ===
v882 
=== Predecessor ===
j902 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1026 lastLocationAccess: - #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid j400 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j881 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: i64
=== Inputs ===
x: j902 
y: j400 
=== Succesors ===
=== Usages ===
v882 v904 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j902 y: j400  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j903 
y: j881 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j903 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v882 
=== Succesors ===
trueSuccessor: v884 
falseSuccessor: v883 
=== Usages ===
=== Predecessor ===
j903 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v882 #trueSuccessor: v884 #falseSuccessor: v883  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a889 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a889  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.newString(byte[], int, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
sourceFile: StringLatin1.java
sourceLine: 752
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: a339 a339 a116 
virtualObjectMappings: ?340 
=== Succesors ===
=== Usages ===
v967 a889 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: a339 a339 a116 virtualObjectMappings: ?340  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a889 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a889 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v29 
=== Succesors ===
next: v967 
=== Usages ===
v967 a900 
=== Predecessor ===
v884 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v29 #next: v967  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-234609|0xfffffffffffc6b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?73 
object: a889 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
a889 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?73 object: a889 #next: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v904 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
lastLocationAccess: - 
value: j881 
stateAfter: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v883 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1025 lastLocationAccess: - value: j881 stateAfter: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v45|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
address: v1029 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v904 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1029 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [v45|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1027 
lastLocationAccess: - 
value: j743 
stateAfter: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1027 lastLocationAccess: - value: j743 stateAfter: - #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v45|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
lastLocationAccess: - 
value: v923 
stateAfter: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1031 lastLocationAccess: - value: v923 stateAfter: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v45|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1028 
lastLocationAccess: - 
value: i35 
stateAfter: - 
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1028 lastLocationAccess: - value: i35 stateAfter: - #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v45|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j902 
index: - 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j902 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1030 
lastLocationAccess: - 
value: j196 
stateAfter: - 
=== Succesors ===
next: a888 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1030 lastLocationAccess: - value: j196 stateAfter: - #next: a888  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a888 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j902 
=== Succesors ===
next: v891 
=== Usages ===
a900 
=== Predecessor ===
v910 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j902 #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
a888 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a900 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v892 
values: a888 a889 
=== Succesors ===
=== Usages ===
v1001 a631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v892 values: a888 a889  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v891 v893 
=== Succesors ===
next: v630 
=== Usages ===
a900 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v891 v893 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v51|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a900 
index: - 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a900 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a629 <|@
result v52|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a116 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 7]
at java.lang.String.substring(String.java:2839) [bci: 41]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
lastLocationAccess: - 
value: a629 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 lastLocationAccess: - value: a629 stateAfter: - #next: v632  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.io.PrintStream.append(CharSequence, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a631 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a631 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(CharSequence, int, int) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a900 
=== Succesors ===
next: v953 
=== Usages ===
a136 
=== Predecessor ===
v632 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a900 #next: v953  <|@  <|@
f <@*|@fixed>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
a631 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 47]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a54 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a54  <|@  <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.newString(byte[], int, int)>
=== Inputs ===
arguments: a349 i3 i48 
=== Succesors ===
=== Usages ===
a54 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a349 i3 i48  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.substring(int, int)>
localsSize: 5
locksSize: 0
sourceFile: String.java
sourceLine: 2840
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?120 
=== Succesors ===
=== Usages ===
a54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a54 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 54
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.substring(String.java:2840) [bci: 54]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#StringUTF16.newString
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v399 
stateDuring: ?645 
=== Succesors ===
next: v126 
=== Usages ===
a123 
=== Predecessor ===
v50 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v399 stateDuring: ?645 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.substring(String.java:2839) [bci: 57]
at java.lang.String.subSequence(String.java:2872) [bci: 3]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
a54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a123 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v121 
values: a2 a54 
=== Succesors ===
=== Usages ===
v128 a136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v121 values: a2 a54  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v126 
=== Succesors ===
next: v131 
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v126 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a123 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a123  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 1]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 8.586421690326418E-7
stamp: void
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v130 #falseSuccessor: v950  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 4]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: "null"
stableDimension: 0
stamp: a!# java.lang.String
stampKind: a java.lang.Object
value: Object[String:"null"]
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v130 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 10]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a136 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: a!# java.lang.String
valueDescription: a java.lang.Object
=== Inputs ===
merge: v134 
values: a132 a123 a631 a71 
=== Succesors ===
=== Usages ===
?137 ?254 ?149 v424 ?242 ?246 ?648 ?649 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v134 values: a132 a123 a631 a71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.valueOf(String.java:4465) [bci: 14]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v133 v135 v953 v954 
=== Succesors ===
next: a930 
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v133 v135 v953 v954 #next: a930  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a930 a941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a930 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
=== Succesors ===
next: a931 
=== Usages ===
a403 v984 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - #next: a931  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 1506
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?141 ?20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?15 
values: a1 a1 
=== Succesors ===
=== Usages ===
?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?15 values: a1 a1  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: areturn
code: ResolvedJavaMethodBytecode<String.valueOf(Object)>
localsSize: 1
locksSize: 0
sourceFile: String.java
sourceLine: 4465
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?141 
values: a136 
=== Succesors ===
=== Usages ===
v969 a931 a932 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?141 values: a136  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v58|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a930 
=== Succesors ===
=== Usages ===
a931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a930  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a931 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-155155|0xfffffffffffda1ed]
deoptSpeculation: long[2580|0xa14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v984 
lastLocationAccess: - 
=== Succesors ===
next: a932 
=== Usages ===
v985 
=== Predecessor ===
a930 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v984 lastLocationAccess: - #next: a932  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v59|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a931 
=== Succesors ===
=== Usages ===
a932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a932 <|@
result v60|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-104203|0xfffffffffffe68f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?137 
guard: - 
address: v985 
lastLocationAccess: - 
=== Succesors ===
next: v969 
=== Usages ===
a410 v986 v1000 v1033 
=== Predecessor ===
a931 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?137 guard: - address: v985 lastLocationAccess: - #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result [v60|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?137 
object: v1033 
=== Succesors ===
next: j933 
=== Usages ===
=== Predecessor ===
a932 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?137 object: v1033 #next: j933  <|@  <|@
f <@~|@floating>@ <|@
tid j205 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j205 
index: - 
=== Succesors ===
=== Usages ===
j933 j946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j205 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j933 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
lastLocationAccess: - 
=== Succesors ===
next: a934 
=== Usages ===
v978 
=== Predecessor ===
v969 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 lastLocationAccess: - #next: a934  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v61|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j933 
index: - 
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j933 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
lastLocationAccess: - 
=== Succesors ===
next: i413 
=== Usages ===
v223 a493 v726 
=== Predecessor ===
j933 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v978 lastLocationAccess: - #next: i413  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v60|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
i413 i489 v490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i230 ?265 v272 ?646 v491 ?316 v492 i413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
expectedValue: i35 
newValue: i165 
stateAfter: - 
=== Succesors ===
next: v218 
=== Usages ===
v215 
=== Predecessor ===
a934 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - expectedValue: i35 newValue: i165 stateAfter: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i413 
y: i35 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i413 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid a410 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a932 
=== Succesors ===
=== Usages ===
v726 v491 ?189 ?646 v492 ?236 ?229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a932  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v60|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a932 
=== Succesors ===
=== Usages ===
a935 v494 v724 v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a932  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?15 
values: a1 
=== Succesors ===
=== Usages ===
?338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?15 values: a1  <|@  <|@
tid ?338 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?20 
=== Succesors ===
=== Usages ===
?149 ?160 ?262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?20  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 788
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?338 
values: a1 a136 
=== Succesors ===
=== Usages ===
?154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?338 values: a1 a136  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:787) [bci: 1]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a930 
=== Succesors ===
=== Usages ===
?154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a930  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?149 
values: a403 
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?149 values: a403  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?154 
=== Succesors ===
=== Usages ===
?189 ?203 ?236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?154  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v215 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v215 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
result v66|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
lastLocationAccess: - 
=== Succesors ===
next: v226 
=== Usages ===
a488 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 lastLocationAccess: - #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid a488 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a935 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a935  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a488 
y: a934 
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a488 y: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
a935 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v225 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i489 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i489 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
i230 ?229 
=== Predecessor ===
v225 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
=== Inputs ===
x: i489 
y: i165 
=== Succesors ===
=== Usages ===
v231 v490 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i489 y: i165  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i35 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i230 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v231 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
i489 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v231 #trueSuccessor: v624 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
values: a410 
=== Succesors ===
=== Usages ===
?229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238 values: a410  <|@  <|@
tid ?229 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?236 
values: i489 a410 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?236 values: i489 a410  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000000c94[index: 100, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?229 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v490 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v490  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
lastLocationAccess: - 
value: i230 
stateAfter: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v986 lastLocationAccess: - value: i230 stateAfter: - #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v490 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i188 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i188  <|@  <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a410 i165 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a410 i165  <|@  <|@
tid ?189 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
values: a410 
=== Succesors ===
=== Usages ===
?646 ?647 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238 values: a410  <|@  <|@
tid ?646 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?189 
values: a410 i165 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?189 values: a410 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i188 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v491 
stateDuring: ?646 
=== Succesors ===
next: v194 
=== Usages ===
v191 
=== Predecessor ===
v224 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v491 stateDuring: ?646 #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i35 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i188 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.7437536316095293
stamp: void
=== Inputs ===
condition: v191 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
i188 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v191 #trueSuccessor: v193 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a410 a195 i165 i35 i35 i35 j196 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a410 a195 i165 i35 i35 i35 j196  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?189 
=== Succesors ===
=== Usages ===
i198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v492 
stateDuring: ?647 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v492 stateDuring: ?647 #next: v204  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
i198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
precise: true
stamp: void
=== Inputs ===
address: v1000 
value: - 
stateBefore: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1000 value: - stateBefore: - #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid a493 <|@
result v74|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
lastLocationAccess: - 
value: a493 
stateAfter: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 lastLocationAccess: - value: a493 stateAfter: - #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
precise: false
stamp: void
=== Inputs ===
address: v1000 
value: a934 
object: a410 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1000 value: a934 object: a410 #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v202 v204 v237 
=== Succesors ===
next: a936 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v202 v204 v237 #next: a936  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a936 a938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
result v77|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
lastLocationAccess: - 
=== Succesors ===
next: v971 
=== Usages ===
a420 v1034 
=== Predecessor ===
v201 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 lastLocationAccess: - #next: v971  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?238 
=== Succesors ===
=== Usages ===
v972 v971 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?238  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v77|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a936 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a936  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?203 
object: v1034 
=== Succesors ===
next: a937 
=== Usages ===
=== Predecessor ===
a936 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?203 object: v1034 #next: a937  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a937 <|@
result v78|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.ensureOpen(PrintStream.java:435) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:809) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
lastLocationAccess: - 
=== Succesors ===
next: v972 
=== Usages ===
v972 
=== Predecessor ===
v971 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v987 lastLocationAccess: - #next: v972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-156179|0xfffffffffffd9ded]
deoptSpeculation: long[11540|0x2d14]
stamp: void
=== Inputs ===
stateBefore: ?203 
object: a937 
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
a937 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?203 object: a937 #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 5]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a936 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a936  <|@  <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/Writer;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<Writer.write(String)>
=== Inputs ===
arguments: a420 a136 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a420 a136  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 790
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?338 
values: a1 
=== Succesors ===
=== Usages ===
?242 ?246 ?254 ?648 ?649 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?338 values: a1  <|@  <|@
tid ?648 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 810
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#Writer.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v424 
stateDuring: ?648 
=== Succesors ===
next: a938 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v424 stateDuring: ?648 #next: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a938 <|@
result v80|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.BufferedWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.textOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.io.BufferedWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
lastLocationAccess: - 
=== Succesors ===
next: v957 
=== Usages ===
a426 v1032 
=== Predecessor ===
v241 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 lastLocationAccess: - #next: v957  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v80|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?242 
object: v1032 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
a938 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?242 object: v1032 #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid a426 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 13]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.io.BufferedWriter
=== Inputs ===
value: a938 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a938  <|@  <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedWriter;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedWriter.flushBuffer()>
=== Inputs ===
arguments: a426 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a426  <|@  <|@
tid ?649 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
bci: 16
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedWriter.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v430 
stateDuring: ?649 
=== Succesors ===
next: a939 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v430 stateDuring: ?649 #next: a939  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a939 <|@
result v82|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.io.OutputStreamWriter
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.charOut
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 20]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.io.OutputStreamWriter
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
lastLocationAccess: - 
=== Succesors ===
next: a940 
=== Usages ===
v990 
=== Predecessor ===
v245 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v989 lastLocationAccess: - #next: a940  <|@  <|@
tid ?246 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: aload_0
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
v974 a940 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v82|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a939 
=== Succesors ===
=== Usages ===
a940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a940 <|@
result v83|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.StreamEncoder
barrierType: NONE
deoptReasonAndAction: int[-111371|0xfffffffffffe4cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OutputStreamWriter.se
memoryOrder: PLAIN
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# sun.nio.cs.StreamEncoder
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?246 
guard: - 
address: v990 
lastLocationAccess: - 
=== Succesors ===
next: v974 
=== Usages ===
a438 v1035 
=== Predecessor ===
a939 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?246 guard: - address: v990 lastLocationAccess: - #next: v974  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v83|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a940 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?246 
object: v1035 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
a940 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?246 object: v1035 #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid a438 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 1]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# sun.nio.cs.StreamEncoder
=== Inputs ===
value: a940 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a940  <|@  <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.flushBuffer()>
=== Inputs ===
arguments: a438 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a438  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.implWrite(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 812
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?262 
values: a1 a136 
=== Succesors ===
=== Usages ===
?255 ?650 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?262 values: a1 a136  <|@  <|@
tid ?650 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
sourceFile: OutputStreamWriter.java
sourceLine: 192
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?254 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v442 
stateDuring: ?650 
=== Succesors ===
next: a941 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v442 stateDuring: ?650 #next: a941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a941 <|@
result v85|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
lastLocationAccess: - 
=== Succesors ===
next: a942 
=== Usages ===
a448 v992 
=== Predecessor ===
v253 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 lastLocationAccess: - #next: a942  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: return
code: ResolvedJavaMethodBytecode<OutputStreamWriter.flushBuffer()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: OutputStreamWriter.java
sourceLine: 193
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?254 
=== Succesors ===
=== Usages ===
v1037 a942 a943 v976 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?254  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v85|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a941 
=== Succesors ===
=== Usages ===
a942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a942 <|@
result v86|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-114955|0xfffffffffffe3ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?255 
guard: - 
address: v992 
lastLocationAccess: - 
=== Succesors ===
next: a943 
=== Usages ===
a452 v993 
=== Predecessor ===
a941 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?255 guard: - address: v992 lastLocationAccess: - #next: a943  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v86|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a942 
=== Succesors ===
=== Usages ===
a943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a943 <|@
result v87|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-115979|0xfffffffffffe3af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?255 
guard: - 
address: v993 
lastLocationAccess: - 
=== Succesors ===
next: v976 
=== Usages ===
a456 v994 v995 v996 v1036 
=== Predecessor ===
a942 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?255 guard: - address: v993 lastLocationAccess: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v1036 <|@
result [v87|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?255 
object: v1036 
=== Succesors ===
next: i944 
=== Usages ===
=== Predecessor ===
a943 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?255 object: v1036 #next: i944  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v0|QWORD[.] + 13] <|@
d <@d|@=== Debug Properties ===
displacement: 13
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i944 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrintStream.autoFlush
memoryOrder: PLAIN
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 27]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
lastLocationAccess: - 
=== Succesors ===
next: v617 
=== Usages ===
v506 
=== Predecessor ===
v976 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 lastLocationAccess: - #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i944 
y: i505 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i944 y: i505  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
i944 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:815) [bci: 49]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i459 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i459  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v87|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
i459 v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i459 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
=== Succesors ===
next: a945 
=== Usages ===
i288 v272 ?265 
=== Predecessor ===
v615 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - #next: a945  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v87|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
a945 v485 v723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a945 <|@
result v89|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
lastLocationAccess: - 
=== Succesors ===
next: j946 
=== Usages ===
a462 
=== Predecessor ===
i459 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v995 lastLocationAccess: - #next: j946  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j946 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
lastLocationAccess: - 
=== Succesors ===
next: a947 
=== Usages ===
v979 
=== Predecessor ===
a945 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 lastLocationAccess: - #next: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v90|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j946 
index: - 
=== Succesors ===
=== Usages ===
a947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j946 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a947 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
v270 
=== Predecessor ===
j946 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v979 lastLocationAccess: - #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid a462 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a945 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a945  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a462 
y: a947 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a462 y: a947  <|@  <|@
f <@~|@floating>@ <|@
tid a452 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a942 
=== Succesors ===
=== Usages ===
?176 ?170 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a942  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 23
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.write(String)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: PrintStream.java
sourceLine: 792
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?338 
values: a1 
=== Succesors ===
=== Usages ===
?166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?338 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a448 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 20]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a941 
=== Succesors ===
=== Usages ===
?166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a941  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?160 
values: a448 
=== Succesors ===
=== Usages ===
?170 ?176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a448  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
a947 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v619 #falseSuccessor: v620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i459 
y: i165 
=== Succesors ===
=== Usages ===
v173 v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i459 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
precise: true
stamp: void
=== Inputs ===
address: v995 
value: - 
stateBefore: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v995 value: - stateBefore: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid a510 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
lastLocationAccess: - 
value: a510 
stateAfter: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v995 lastLocationAccess: - value: a510 stateAfter: - #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v280 v282 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v280 v282 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i287 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
=== Inputs ===
x: i459 
y: i287 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i459 y: i287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 lastLocationAccess: - value: i288 stateAfter: - #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.8679019522956164
stamp: void
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a465 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a465  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v87|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a943 
=== Succesors ===
=== Usages ===
a465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a465 <|@
result v97|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
lastLocationAccess: - 
=== Succesors ===
next: v293 
=== Usages ===
v997 v721 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 lastLocationAccess: - #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a465 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a465  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.999301444736255
stamp: void
=== Inputs ===
condition: v721 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v291 
=== Usages ===
=== Predecessor ===
a465 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v721 #trueSuccessor: v292 #falseSuccessor: v291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: a470 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a470  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v97|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a465 
=== Succesors ===
=== Usages ===
a470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a470 <|@
result v98|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
a471 v722 v998 v999 
=== Predecessor ===
v291 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v997 lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a470 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a470  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.8992297525181168
stamp: void
=== Inputs ===
condition: v722 
=== Succesors ===
trueSuccessor: v299 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
a470 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v722 #trueSuccessor: v299 #falseSuccessor: v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v98|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a470 
=== Succesors ===
=== Usages ===
i477 i478 i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
=== Succesors ===
next: v307 
=== Usages ===
v304 
=== Predecessor ===
v298 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i475 
y: i35 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i475 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v306 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?166 
values: a452 
=== Succesors ===
=== Usages ===
?334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a452  <|@  <|@
tid ?334 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?176 
=== Succesors ===
=== Usages ===
?313 ?651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?176  <|@  <|@
f <@~|@floating>@ <|@
tid a471 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a470 
=== Succesors ===
=== Usages ===
?313 ?320 ?316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a470  <|@  <|@
tid ?313 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?334 
values: - a471 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?334 values: - a471  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?313 
values: a471 i165 
=== Succesors ===
=== Usages ===
?320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?313 values: a471 i165  <|@  <|@
f <@~|@floating>@ <|@
tid a310 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?320 i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v305 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 207
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v314 
=== Succesors ===
next: i477 
=== Usages ===
v322 v326 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v314 #next: i477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i477 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
=== Succesors ===
next: i478 
=== Usages ===
i318 i478 ?320 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - #next: i478  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i477 
y: i312 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i477 y: i312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
lastLocationAccess: - 
expectedValue: i477 
newValue: i318 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
v321 
=== Predecessor ===
i477 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v998 lastLocationAccess: - expectedValue: i477 newValue: i318 stateAfter: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i478 
y: i35 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i478 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v322 
=== Usages ===
=== Predecessor ===
i478 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v327 #falseSuccessor: v322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
values: i35 a310 a471 j311 - i312 i477 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316 values: i35 a310 a471 j311 - i312 i477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateBefore: ?320 
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?320 #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v315 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v315 
=== Succesors ===
next: a948 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v315 #next: a948  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v98|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a470 
=== Succesors ===
=== Usages ===
a948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a948 <|@
result v103|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
a482 
=== Predecessor ===
v322 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v999 lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid a482 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a948 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a948  <|@  <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a482 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a482  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?334 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v483 
stateDuring: ?651 
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
a948 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v483 stateDuring: ?651 #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v172 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v179 v181 v335 v336 v337 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v179 v181 v335 v336 v337 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
tid ?170 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?166 
values: a452 
=== Succesors ===
=== Usages ===
?289 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?166 values: a452  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
result v105|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a943 
=== Succesors ===
=== Usages ===
?265 ?289 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a943  <|@  <|@
tid ?289 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?170 
values: a456 
=== Succesors ===
=== Usages ===
?265 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?170 values: a456  <|@  <|@
tid ?265 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?289 
values: i459 a456 i165 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?289 values: i459 a456 i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000003494[index: 420, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?265 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.implWrite(PrintStream.java:813) [bci: 30]
at java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1037 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1037  <|@  <|@
f <@*|@fixed>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 614
mayConvertToGuard: true
nodeSourcePosition: at java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000002a94[index: 340, len: 20, hash: 0x9c96d22a]: UnreachedCode@6[HotSpotMethod<PrintStream.implWrite(String)>, 33]}
stamp: void
=== Inputs ===
stateBefore: ?255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-88371|0xfffffffffffea6cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
rawvalue: -88371
stableDimension: 0
stamp: i32 [-88371]
stampKind: i32
value: int[-88371|0xfffffffffffea6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i655 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: i32 [-154131 - -88371] bits:1...1xx1010xxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v652 
values: i661 i664 i667 i669 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: i661 i664 i667 i669  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: i64 [660 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v652 
values: j662 j665 j665 j665 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v652 values: j662 j665 j665 j665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v663 v666 v668 
=== Succesors ===
next: v657 
=== Usages ===
i655 j656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v663 v666 v668 #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1505) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i655 
speculation: j656 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i655 speculation: j656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1036  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1046  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1058  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1292  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr 1312  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1344  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1404  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1486  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1536  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr 1580  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1696  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1036  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1046  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1058  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1292  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr 1312  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1344  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1404  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1486  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1536  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr 1580  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1696  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v0|q [0, 1[[490, 491[[612, 613[[754, 759[[1034, 1035[[1044, 1045[[1056, 1057[[1252, 1254[[1290, 1292[[1342, 1344[[1372, 1373[[1402, 1404[[1484, 1486[[1534, 1536[[1578, 1580[[1628, 1631[[1678, 1679[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 30[[86, 89[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1370, 1373[[1484, 1485[[1524, 1535[[1576, 1579[[1678, 1679[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 28[[488, 491[[610, 613[[1032, 1035[[1044, 1045[[1056, 1057[[1340, 1342[[1400, 1402[[1482, 1485[[1522, 1535[[1574, 1579[[1678, 1679[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v79|q [0, 26[[486, 491[[608, 613[[1030, 1035[[1042, 1045[[1054, 1057[[1288, 1290[[1338, 1342[[1398, 1402[[1480, 1485[[1520, 1535[[1572, 1579[[1676, 1679[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[484, 491[[606, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1372, 1373[[1484, 1485[[1530, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 32[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1526, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1528, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [26, 1252[[1256, 1751[[1752, 1803[[1804, 1825[[1826, 1853[[1854, 1885[26 MustHaveRegister 738 MustHaveRegister 1020 MustHaveRegister 1024 MustHaveRegister 1036 MustHaveRegister 1046 MustHaveRegister 1058 MustHaveRegister 1066 MustHaveRegister 1252 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [28, 125[[148, 218[[494, 530[[1256, 1266[[1376, 1407[[1710, 1730[[1752, 1762[[1854, 1885[28 MustHaveRegister 34 MustHaveRegister 50 MustHaveRegister 84 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [30, 116[[148, 480[[1256, 1266[[1316, 1376[[1550, 1574[[1700, 1730[[1752, 1803[[1854, 1885[30 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister 102 MustHaveRegister 176 ShouldHaveRegister 190 ShouldHaveRegister 204 MustHaveRegister 406 ShouldHaveRegister 428 MustHaveRegister 480 ShouldHaveRegister 1574 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [32, 116[[148, 442[[494, 530[[1256, 1266[[1316, 1407[[1700, 1730[[1752, 1803[[1854, 1885[32 MustHaveRegister 66 ShouldHaveRegister 90 MustHaveRegister 114 ShouldHaveRegister 176 MustHaveRegister 190 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [50, 116[[148, 174[[1256, 1266[50 MustHaveRegister 52 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [52, 116[[148, 426[[494, 566[[1256, 1266[[1316, 1400[52 MustHaveRegister 88 ShouldHaveRegister 216 MustHaveRegister 406 MustHaveRegister 426 MustHaveRegister 520 ShouldHaveRegister 566 MustHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [84, 116[[148, 178[[1256, 1266[84 MustHaveRegister 86 ShouldHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v5|d [88, 114[88 MustHaveRegister 90 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v4|d [174, 476[[494, 602[[1316, 1410[[1550, 1572[[1700, 1710[[1762, 1803[174 MustHaveRegister 476 ShouldHaveRegister 602 ShouldHaveRegister 1572 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v3|d [176, 440[[1316, 1376[[1550, 1576[176 MustHaveRegister 264 ShouldHaveRegister 316 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 440 ShouldHaveRegister 1340 ShouldHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [1310, 1312[1310 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [1312, 1315[1312 MustHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [518, 568[518 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister 564 MustHaveRegister 566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v5|d [520, 610[[1376, 1410[520 MustHaveRegister 522 MustHaveRegister 610 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [522, 524[522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [524, 561[524 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|q [526, 554[526 MustHaveRegister 528 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q rax|- [1404, 1409[1404 MustHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v13|q [568, 571[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [572, 615[604 ShouldHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v8|q [602, 606[602 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v21|q [604, 608[604 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [262, 386[[1350, 1376[262 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 360 MustHaveRegister 365 LiveAtLoopEnd 386 ShouldHaveRegister 1372 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v9|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [268, 366[268 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 318 MustHaveRegister 342 MustHaveRegister 365 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [270, 304[270 MustHaveRegister 272 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q rax|- [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [318, 322[[1350, 1370[318 MustHaveRegister 320 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v32|q [332, 362[342 ShouldHaveRegister 360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v24|q [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|q [390, 493[478 ShouldHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v5|d [406, 410[406 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v36|d [410, 482[410 MustHaveRegister 412 MustHaveRegister 426 ShouldHaveRegister 440 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v5|d [426, 428[426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [1782, 1798[1798 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v8|q [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v35|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v37|d [482, 488[482 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v35|q [616, 690[[1266, 1298[690 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [634, 674[634 MustHaveRegister 636 MustHaveRegister 664 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister 670 MustHaveRegister 672 MustHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [636, 662[636 MustHaveRegister 638 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [1286, 1288[1286 MustHaveRegister 1288 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q rax|- [1292, 1297[1292 MustHaveRegister 1294 MustHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v45|q [674, 677[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|q [678, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v44|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q rax|- [1580, 1583[1580 MustHaveRegister 1582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v1|q [126, 147[136 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [1694, 1696[1694 MustHaveRegister 1696 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v55|q [1696, 1699[1696 MustHaveRegister 1698 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v54|q [696, 1068[[1458, 1550[[1730, 1751[[1804, 1825[1032 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [738, 752[738 MustHaveRegister 740 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d -1 [742, 880[[886, 940[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister 758 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 902 MustHaveRegister 922 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [748, 883[[886, 906[748 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v60|d [750, 883[[886, 928[[1458, 1535[[1804, 1825[750 MustHaveRegister 882 MustHaveRegister 1480 ShouldHaveRegister 1520 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v58|d [752, 1027[[1458, 1550[[1804, 1825[752 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d -1 [902, 904[902 MustHaveRegister 904 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v66|d [904, 906[904 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [922, 928[[1804, 1825[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v68|d [924, 940[924 MustHaveRegister 926 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d rax|- [1486, 1488[1486 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d rax|- [1536, 1537[1536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v73|q QWORD "[v73|q]" v73|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v74|d DWORD "[v74|d]" v74|d v62|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v76|q QWORD "[v76|q]" v76|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v77|d DWORD "[v77|d]" v77|d -1 [1020, 1028[1020 MustHaveRegister 1022 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q v77|d [1028, 1030[1028 MustHaveRegister 1030 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [1036, 1040[1036 MustHaveRegister 1038 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|d [1040, 1042[1040 MustHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [1048, 1052[1048 MustHaveRegister 1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v83|d [1052, 1054[1052 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [1058, 1106[1058 MustHaveRegister 1060 MustHaveRegister 1106 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [1060, 1104[1060 MustHaveRegister 1062 MustHaveRegister 1104 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [1062, 1210[[1826, 1846[1062 MustHaveRegister 1064 MustHaveRegister 1096 MustHaveRegister 1098 MustHaveRegister 1158 MustHaveRegister 1160 MustHaveRegister 1192 MustHaveRegister 1210 MustHaveRegister 1846 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [1096, 1196[[1826, 1853[1096 MustHaveRegister 1120 ShouldHaveRegister 1190 ShouldHaveRegister 1196 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [1098, 1102[1098 MustHaveRegister 1102 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [1100, 1108[1100 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q v89|d [1102, 1108[1102 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q v86|d [1104, 1214[[1410, 1426[[1436, 1448[[1584, 1679[[1826, 1853[1104 MustHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q v85|d [1106, 1214[[1410, 1426[[1436, 1448[[1584, 1679[[1826, 1853[1106 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[v95|q]" v95|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v96|d DWORD "[v96|d]" v96|d v88|d [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d -1 [1210, 1214[[1410, 1422[1210 MustHaveRegister 1212 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d -1 [1422, 1426[[1436, 1448[[1584, 1672[1422 MustHaveRegister 1424 MustHaveRegister 1446 MustHaveRegister 1596 MustHaveRegister 1624 MustHaveRegister 1630 MustHaveRegister 1649 LiveAtLoopEnd 1672 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q v98|d [1596, 1650[1596 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d -1 [1624, 1647[1624 MustHaveRegister 1626 MustHaveRegister 1628 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v100|d [1626, 1630[1626 MustHaveRegister 1630 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[v102|q]" v102|q -1 [1646, 1647[1646 MustHaveRegister  "NoDefinitionFound"
  v103|d DWORD "[v103|d]" v103|d -1 [1672, 1674[1672 MustHaveRegister 1674 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q v103|d [1674, 1676[1674 MustHaveRegister 1676 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q v87|d [1846, 1853[1846 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [1864, 1880[1880 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [1864, 1882[1882 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [1378, 1398[1378 MustHaveRegister 1398 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v0|q [0, 1[[490, 491[[612, 613[[754, 759[[1034, 1035[[1044, 1045[[1056, 1057[[1252, 1254[[1290, 1292[[1342, 1344[[1372, 1373[[1402, 1404[[1484, 1486[[1534, 1536[[1578, 1580[[1628, 1631[[1678, 1679[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 30[[86, 89[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1370, 1373[[1484, 1485[[1524, 1535[[1576, 1579[[1678, 1679[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 28[[488, 491[[610, 613[[1032, 1035[[1044, 1045[[1056, 1057[[1340, 1342[[1400, 1402[[1482, 1485[[1522, 1535[[1574, 1579[[1678, 1679[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v79|q [0, 26[[486, 491[[608, 613[[1030, 1035[[1042, 1045[[1054, 1057[[1288, 1290[[1338, 1342[[1398, 1402[[1480, 1485[[1520, 1535[[1572, 1579[[1676, 1679[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[484, 491[[606, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1372, 1373[[1484, 1485[[1530, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 32[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1526, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1528, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 442[26 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[r10|q]" v1|q rdx|- [28, 125[[148, 218[[494, 530[[1256, 1266[[1376, 1407[[1710, 1730[[1752, 1762[[1854, 1885[28 MustHaveRegister 34 MustHaveRegister 50 MustHaveRegister 84 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d rcx|- [30, 116[[148, 480[[1256, 1266[[1316, 1376[[1550, 1574[[1700, 1730[[1752, 1803[[1854, 1885[30 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister 102 MustHaveRegister 176 ShouldHaveRegister 190 ShouldHaveRegister 204 MustHaveRegister 406 ShouldHaveRegister 428 MustHaveRegister 480 ShouldHaveRegister 1574 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [32, 116[[148, 442[[494, 530[[1256, 1266[[1316, 1407[[1700, 1730[[1752, 1803[[1854, 1885[32 MustHaveRegister 66 ShouldHaveRegister 90 MustHaveRegister 114 ShouldHaveRegister 176 MustHaveRegister 190 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [50, 116[[148, 174[[1256, 1266[50 MustHaveRegister 52 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [52, 116[[148, 426[[494, 566[[1256, 1266[[1316, 1400[52 MustHaveRegister 88 ShouldHaveRegister 216 MustHaveRegister 406 MustHaveRegister 426 MustHaveRegister 520 ShouldHaveRegister 566 MustHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [84, 116[[148, 178[[1256, 1266[84 MustHaveRegister 86 ShouldHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdx|d]" v7|d v5|d [88, 114[88 MustHaveRegister 90 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r9|q]" v8|q v4|d [174, 476[[494, 602[[1316, 1410[[1550, 1572[[1700, 1710[[1762, 1803[174 MustHaveRegister 476 ShouldHaveRegister 602 ShouldHaveRegister 1572 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v3|d [176, 440[[1316, 1376[[1550, 1576[176 MustHaveRegister 264 ShouldHaveRegister 316 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 440 ShouldHaveRegister 1340 ShouldHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [1310, 1312[1310 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q v10|q [1312, 1315[1312 MustHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [518, 568[518 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister 564 MustHaveRegister 566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v5|d [520, 610[[1376, 1410[520 MustHaveRegister 522 MustHaveRegister 610 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [522, 524[522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v15|q [524, 561[524 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v16|q [526, 554[526 MustHaveRegister 528 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|- [1404, 1409[1404 MustHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v13|q [568, 571[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v20|q [572, 605[604 ShouldHaveRegister  "OneSpillStore"
  v22|q QWORD "[r9|q]" v22|q v8|q [602, 606[602 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|q [604, 608[604 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [262, 386[[1350, 1376[262 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 360 MustHaveRegister 365 LiveAtLoopEnd 386 ShouldHaveRegister 1372 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v9|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [268, 366[268 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 318 MustHaveRegister 342 MustHaveRegister 365 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q v27|q [270, 304[270 MustHaveRegister 272 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|- [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [318, 322[[1350, 1370[318 MustHaveRegister 320 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v32|q [332, 362[342 ShouldHaveRegister 360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v24|q [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v34|q [390, 489[478 ShouldHaveRegister  "OneSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v5|d [406, 410[406 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d v36|d [410, 482[410 MustHaveRegister 412 MustHaveRegister 426 ShouldHaveRegister 440 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v5|d [426, 428[426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [1782, 1798[1798 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v8|q [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v35|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q v37|d [482, 488[482 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v35|q [616, 690[[1266, 1298[690 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [634, 674[634 MustHaveRegister 636 MustHaveRegister 664 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister 670 MustHaveRegister 672 MustHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [636, 662[636 MustHaveRegister 638 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q -1 [1286, 1288[1286 MustHaveRegister 1288 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q rax|- [1292, 1297[1292 MustHaveRegister 1294 MustHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v45|q [674, 677[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|q [678, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d v44|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|- [1580, 1583[1580 MustHaveRegister 1582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v1|q [126, 147[136 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q -1 [1694, 1696[1694 MustHaveRegister 1696 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r10|q]" v56|q v55|q [1696, 1699[1696 MustHaveRegister 1698 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q v54|q [696, 1033[1032 ShouldHaveRegister  "OneSpillStore"
  v58|d DWORD "[rax|d]" v58|d -1 [738, 752[738 MustHaveRegister 740 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdx|d]" v59|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rdx|d]" v60|d -1 [742, 880[[886, 940[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister 758 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 902 MustHaveRegister 922 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r11|q]" v62|q -1 [748, 883[[886, 906[748 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q v60|d [750, 883[[886, 928[[1458, 1483[750 MustHaveRegister 882 MustHaveRegister 1480 ShouldHaveRegister  "OneSpillStore"
  v64|q QWORD "[rax|q]" v64|q v58|d [752, 753[752 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rcx|d]" v65|d -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rcx|d]" v66|d -1 [902, 904[902 MustHaveRegister 904 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q v66|d [904, 906[904 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[r11|d]" v68|d -1 [922, 928[[1804, 1825[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d v68|d [924, 940[924 MustHaveRegister 926 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d rax|- [1486, 1488[1486 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rax|d]" v71|d rax|- [1536, 1537[1536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rcx|q]" v72|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v73|q QWORD "[rbx|q]" v73|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v74|d DWORD "[rcx|d]" v74|d v62|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v76|q QWORD "[rcx|q]" v76|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v77|d DWORD "[rdx|d]" v77|d -1 [1020, 1028[1020 MustHaveRegister 1022 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r11|d]" v78|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdx|q]" v79|q v77|d [1028, 1030[1028 MustHaveRegister 1030 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[r10|d]" v80|d -1 [1036, 1040[1036 MustHaveRegister 1038 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r10|q]" v81|q v80|d [1040, 1042[1040 MustHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[r10|d]" v82|d -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r10|d]" v83|d -1 [1048, 1052[1048 MustHaveRegister 1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r10|q]" v84|q v83|d [1052, 1054[1052 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rax|d]" v85|d -1 [1058, 1106[1058 MustHaveRegister 1060 MustHaveRegister 1106 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdx|d]" v86|d -1 [1060, 1104[1060 MustHaveRegister 1062 MustHaveRegister 1104 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r10|d]" v87|d -1 [1062, 1210[[1826, 1846[1062 MustHaveRegister 1064 MustHaveRegister 1096 MustHaveRegister 1098 MustHaveRegister 1158 MustHaveRegister 1160 MustHaveRegister 1192 MustHaveRegister 1210 MustHaveRegister 1846 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r11|d]" v88|d -1 [1096, 1196[[1826, 1853[1096 MustHaveRegister 1120 ShouldHaveRegister 1190 ShouldHaveRegister 1196 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rcx|d]" v89|d -1 [1098, 1102[1098 MustHaveRegister 1102 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rdi|q]" v90|q -1 [1100, 1108[1100 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rcx|q]" v91|q v89|d [1102, 1108[1102 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rdx|q]" v92|q v86|d [1104, 1214[[1410, 1426[[1436, 1448[[1584, 1650[1104 MustHaveRegister  "OneSpillStore"
  v93|q QWORD "[rax|q]" v93|q v85|d [1106, 1214[[1410, 1426[[1436, 1448[[1584, 1600[1106 MustHaveRegister  "OneSpillStore"
  v94|q QWORD "[rcx|q]" v94|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[rdi|q]" v95|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v96|d DWORD "[rcx|d]" v96|d v88|d [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[r10|d]" v97|d -1 [1210, 1214[[1410, 1422[1210 MustHaveRegister 1212 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r10|d]" v98|d -1 [1422, 1426[[1436, 1448[[1584, 1672[1422 MustHaveRegister 1424 MustHaveRegister 1446 MustHaveRegister 1596 MustHaveRegister 1624 MustHaveRegister 1630 MustHaveRegister 1649 LiveAtLoopEnd 1672 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q v98|d [1596, 1650[1596 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[r11|d]" v100|d -1 [1624, 1647[1624 MustHaveRegister 1626 MustHaveRegister 1628 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r8|d]" v101|d v100|d [1626, 1630[1626 MustHaveRegister 1630 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[r8|q]" v102|q -1 [1646, 1647[1646 MustHaveRegister  "NoDefinitionFound"
  v103|d DWORD "[rsi|d]" v103|d -1 [1672, 1674[1672 MustHaveRegister 1674 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q v103|d [1674, 1676[1674 MustHaveRegister 1676 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[r10|q]" v105|q v87|d [1846, 1853[1846 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d -1 [1864, 1880[1880 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rcx|q]" v107|q -1 [1864, 1882[1882 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [1378, 1398[1378 MustHaveRegister 1398 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[vstack:1|q]" v0|q v0|q [442, 485[ "SpillInDominator"
  v111|q QWORD "[vstack:0|q]" v35|q v35|q [489, 493[492 ShouldHaveRegister  "OneSpillStore"
  v112|q QWORD "[vstack:1|q]" v0|q v0|q [485, 489[ "SpillInDominator"
  v113|q QWORD "[vstack:1|q]" v0|q v0|q [489, 696[ "SpillInDominator"
  v114|q QWORD "[rsi|q]" v0|q v0|q [696, 1029[738 MustHaveRegister 1020 MustHaveRegister 1024 MustHaveRegister  "SpillInDominator"
  v115|q QWORD "[vstack:3|q]" v21|q v21|q [605, 611[ "OneSpillStore"
  v116|q QWORD "[vstack:3|q]" v21|q v21|q [611, 615[614 ShouldHaveRegister  "OneSpillStore"
  v117|q QWORD "[vstack:1|q]" v0|q v0|q [1029, 1033[ "SpillInDominator"
  v118|q QWORD "[vstack:4|q]" v57|q v57|q [1033, 1068[[1458, 1550[[1730, 1751[ "OneSpillStore"
  v119|q QWORD "[vstack:5|q]" v63|q v63|q [1483, 1535[1520 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[vstack:6|q]" v64|q v64|q [753, 1027[ "OneSpillStore"
  v121|q QWORD "[vstack:6|q]" v64|q v64|q [1458, 1483[ "OneSpillStore"
  v122|q QWORD "[vstack:1|q]" v0|q v0|q [1033, 1035[ "SpillInDominator"
  v123|q QWORD "[rsi|q]" v0|q v0|q [1035, 1041[1036 MustHaveRegister  "SpillInDominator"
  v124|q QWORD "[r10|q]" v57|q v57|q [1804, 1825[ "OneSpillStore"
  v125|q QWORD "[vstack:1|q]" v0|q v0|q [1041, 1045[ "SpillInDominator"
  v126|q QWORD "[rsi|q]" v0|q v0|q [1045, 1053[1046 MustHaveRegister  "SpillInDominator"
  v127|q QWORD "[vstack:1|q]" v0|q v0|q [1053, 1057[ "SpillInDominator"
  v128|q QWORD "[rsi|q]" v0|q v0|q [1057, 1252[[1256, 1266[1058 MustHaveRegister 1066 MustHaveRegister 1252 ShouldHaveRegister  "SpillInDominator"
  v129|q QWORD "[vstack:1|q]" v0|q v0|q [1266, 1287[ "SpillInDominator"
  v130|q QWORD "[vstack:7|q]" v92|q v92|q [1650, 1677[ "OneSpillStore"
  v131|q QWORD "[vstack:8|q]" v93|q v93|q [1600, 1627[ "OneSpillStore"
  v132|q QWORD "[vstack:1|q]" v0|q v0|q [1287, 1458[ "SpillInDominator"
  v133|q QWORD "[vstack:1|q]" v0|q v0|q [1458, 1479[ "SpillInDominator"
  v134|q QWORD "[vstack:1|q]" v0|q v0|q [1479, 1483[ "SpillInDominator"
  v135|q QWORD "[vstack:6|q]" v64|q v64|q [1483, 1550[ "OneSpillStore"
  v136|q QWORD "[vstack:1|q]" v0|q v0|q [1483, 1751[[1752, 1803[[1804, 1825[[1826, 1853[[1854, 1864[ "SpillInDominator"
  v137|q QWORD "[r8|q]" v63|q v63|q [1804, 1825[ "OneSpillStore"
  v138|q QWORD "[rsi|q]" v0|q v0|q [1864, 1885[ "SpillInDominator"
  v139|q QWORD "[rax|q]" v64|q v64|q [1804, 1825[ "OneSpillStore"
  v140|q QWORD "[vstack:8|q]" v93|q v93|q [1627, 1650[ "OneSpillStore"
  v141|q QWORD "[vstack:8|q]" v93|q v93|q [1650, 1677[ "OneSpillStore"
  v142|q QWORD "[vstack:8|q]" v93|q v93|q [1677, 1679[ "OneSpillStore"
  v143|q QWORD "[vstack:7|q]" v92|q v92|q [1677, 1679[ "OneSpillStore"
  v144|q QWORD "[rdx|q]" v92|q v92|q [1826, 1853[ "OneSpillStore"
  v145|q QWORD "[rax|q]" v93|q v93|q [1826, 1853[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = STACKMOVE (input: v112|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1058  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1292  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr 1312  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1344  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1404  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1486  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1536  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr 1580  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = STACKMOVE (input: v141|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1696  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v0|q [0, 1[[490, 491[[612, 613[[754, 759[[1034, 1035[[1044, 1045[[1056, 1057[[1252, 1254[[1290, 1292[[1342, 1344[[1372, 1373[[1402, 1404[[1484, 1486[[1534, 1536[[1578, 1580[[1628, 1631[[1678, 1679[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 30[[86, 89[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1370, 1373[[1484, 1485[[1524, 1535[[1576, 1579[[1678, 1679[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 28[[488, 491[[610, 613[[1032, 1035[[1044, 1045[[1056, 1057[[1340, 1342[[1400, 1402[[1482, 1485[[1522, 1535[[1574, 1579[[1678, 1679[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v79|q [0, 26[[486, 491[[608, 613[[1030, 1035[[1042, 1045[[1054, 1057[[1288, 1290[[1338, 1342[[1398, 1402[[1480, 1485[[1520, 1535[[1572, 1579[[1676, 1679[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[484, 491[[606, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1372, 1373[[1484, 1485[[1530, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 32[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1526, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1528, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 442[26 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[r10|q]" v1|q rdx|- [28, 125[[148, 218[[494, 530[[1256, 1266[[1376, 1407[[1710, 1730[[1752, 1762[[1854, 1885[28 MustHaveRegister 34 MustHaveRegister 50 MustHaveRegister 84 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d rcx|- [30, 116[[148, 480[[1256, 1266[[1316, 1376[[1550, 1574[[1700, 1730[[1752, 1803[[1854, 1885[30 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister 102 MustHaveRegister 176 ShouldHaveRegister 190 ShouldHaveRegister 204 MustHaveRegister 406 ShouldHaveRegister 428 MustHaveRegister 480 ShouldHaveRegister 1574 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [32, 116[[148, 442[[494, 530[[1256, 1266[[1316, 1407[[1700, 1730[[1752, 1803[[1854, 1885[32 MustHaveRegister 66 ShouldHaveRegister 90 MustHaveRegister 114 ShouldHaveRegister 176 MustHaveRegister 190 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [50, 116[[148, 174[[1256, 1266[50 MustHaveRegister 52 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [52, 116[[148, 426[[494, 566[[1256, 1266[[1316, 1400[52 MustHaveRegister 88 ShouldHaveRegister 216 MustHaveRegister 406 MustHaveRegister 426 MustHaveRegister 520 ShouldHaveRegister 566 MustHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [84, 116[[148, 178[[1256, 1266[84 MustHaveRegister 86 ShouldHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdx|d]" v7|d v5|d [88, 114[88 MustHaveRegister 90 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r9|q]" v8|q v4|d [174, 476[[494, 602[[1316, 1410[[1550, 1572[[1700, 1710[[1762, 1803[174 MustHaveRegister 476 ShouldHaveRegister 602 ShouldHaveRegister 1572 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v3|d [176, 440[[1316, 1376[[1550, 1576[176 MustHaveRegister 264 ShouldHaveRegister 316 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 440 ShouldHaveRegister 1340 ShouldHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [1310, 1312[1310 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q v10|q [1312, 1315[1312 MustHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [518, 568[518 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister 564 MustHaveRegister 566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v5|d [520, 610[[1376, 1410[520 MustHaveRegister 522 MustHaveRegister 610 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [522, 524[522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v15|q [524, 561[524 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v16|q [526, 554[526 MustHaveRegister 528 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|- [1404, 1409[1404 MustHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v13|q [568, 571[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v20|q [572, 605[604 ShouldHaveRegister  "OneSpillStore"
  v22|q QWORD "[r9|q]" v22|q v8|q [602, 606[602 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|q [604, 608[604 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [262, 386[[1350, 1376[262 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 360 MustHaveRegister 365 LiveAtLoopEnd 386 ShouldHaveRegister 1372 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v9|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [268, 366[268 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 318 MustHaveRegister 342 MustHaveRegister 365 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q v27|q [270, 304[270 MustHaveRegister 272 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|- [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [318, 322[[1350, 1370[318 MustHaveRegister 320 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v32|q [332, 362[342 ShouldHaveRegister 360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v24|q [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v34|q [390, 489[478 ShouldHaveRegister  "OneSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v5|d [406, 410[406 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d v36|d [410, 482[410 MustHaveRegister 412 MustHaveRegister 426 ShouldHaveRegister 440 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v5|d [426, 428[426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [1782, 1798[1798 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v8|q [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v35|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q v37|d [482, 488[482 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v35|q [616, 690[[1266, 1298[690 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [634, 674[634 MustHaveRegister 636 MustHaveRegister 664 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister 670 MustHaveRegister 672 MustHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [636, 662[636 MustHaveRegister 638 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q -1 [1286, 1288[1286 MustHaveRegister 1288 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q rax|- [1292, 1297[1292 MustHaveRegister 1294 MustHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v45|q [674, 677[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|q [678, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d v44|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|- [1580, 1583[1580 MustHaveRegister 1582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v1|q [126, 147[136 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q -1 [1694, 1696[1694 MustHaveRegister 1696 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r10|q]" v56|q v55|q [1696, 1699[1696 MustHaveRegister 1698 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q v54|q [696, 1033[1032 ShouldHaveRegister  "OneSpillStore"
  v58|d DWORD "[rax|d]" v58|d -1 [738, 752[738 MustHaveRegister 740 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdx|d]" v59|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rdx|d]" v60|d -1 [742, 880[[886, 940[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister 758 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 902 MustHaveRegister 922 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r11|q]" v62|q -1 [748, 883[[886, 906[748 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q v60|d [750, 883[[886, 928[[1458, 1483[750 MustHaveRegister 882 MustHaveRegister 1480 ShouldHaveRegister  "OneSpillStore"
  v64|q QWORD "[rax|q]" v64|q v58|d [752, 753[752 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rcx|d]" v65|d -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rcx|d]" v66|d -1 [902, 904[902 MustHaveRegister 904 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q v66|d [904, 906[904 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[r11|d]" v68|d -1 [922, 928[[1804, 1825[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d v68|d [924, 940[924 MustHaveRegister 926 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d rax|- [1486, 1488[1486 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rax|d]" v71|d rax|- [1536, 1537[1536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rcx|q]" v72|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v73|q QWORD "[rbx|q]" v73|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v74|d DWORD "[rcx|d]" v74|d v62|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v76|q QWORD "[rcx|q]" v76|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v77|d DWORD "[rdx|d]" v77|d -1 [1020, 1028[1020 MustHaveRegister 1022 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r11|d]" v78|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdx|q]" v79|q v77|d [1028, 1030[1028 MustHaveRegister 1030 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[r10|d]" v80|d -1 [1036, 1040[1036 MustHaveRegister 1038 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r10|q]" v81|q v80|d [1040, 1042[1040 MustHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[r10|d]" v82|d -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r10|d]" v83|d -1 [1048, 1052[1048 MustHaveRegister 1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r10|q]" v84|q v83|d [1052, 1054[1052 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rax|d]" v85|d -1 [1058, 1106[1058 MustHaveRegister 1060 MustHaveRegister 1106 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdx|d]" v86|d -1 [1060, 1104[1060 MustHaveRegister 1062 MustHaveRegister 1104 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r10|d]" v87|d -1 [1062, 1210[[1826, 1846[1062 MustHaveRegister 1064 MustHaveRegister 1096 MustHaveRegister 1098 MustHaveRegister 1158 MustHaveRegister 1160 MustHaveRegister 1192 MustHaveRegister 1210 MustHaveRegister 1846 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r11|d]" v88|d -1 [1096, 1196[[1826, 1853[1096 MustHaveRegister 1120 ShouldHaveRegister 1190 ShouldHaveRegister 1196 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rcx|d]" v89|d -1 [1098, 1102[1098 MustHaveRegister 1102 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rdi|q]" v90|q -1 [1100, 1108[1100 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rcx|q]" v91|q v89|d [1102, 1108[1102 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rdx|q]" v92|q v86|d [1104, 1214[[1410, 1426[[1436, 1448[[1584, 1650[1104 MustHaveRegister  "OneSpillStore"
  v93|q QWORD "[rax|q]" v93|q v85|d [1106, 1214[[1410, 1426[[1436, 1448[[1584, 1600[1106 MustHaveRegister  "OneSpillStore"
  v94|q QWORD "[rcx|q]" v94|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[rdi|q]" v95|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v96|d DWORD "[rcx|d]" v96|d v88|d [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[r10|d]" v97|d -1 [1210, 1214[[1410, 1422[1210 MustHaveRegister 1212 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r10|d]" v98|d -1 [1422, 1426[[1436, 1448[[1584, 1672[1422 MustHaveRegister 1424 MustHaveRegister 1446 MustHaveRegister 1596 MustHaveRegister 1624 MustHaveRegister 1630 MustHaveRegister 1649 LiveAtLoopEnd 1672 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q v98|d [1596, 1650[1596 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[r11|d]" v100|d -1 [1624, 1647[1624 MustHaveRegister 1626 MustHaveRegister 1628 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r8|d]" v101|d v100|d [1626, 1630[1626 MustHaveRegister 1630 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[r8|q]" v102|q -1 [1646, 1647[1646 MustHaveRegister  "NoDefinitionFound"
  v103|d DWORD "[rsi|d]" v103|d -1 [1672, 1674[1672 MustHaveRegister 1674 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q v103|d [1674, 1676[1674 MustHaveRegister 1676 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[r10|q]" v105|q v87|d [1846, 1853[1846 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d -1 [1864, 1880[1880 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rcx|q]" v107|q -1 [1864, 1882[1882 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [1378, 1398[1378 MustHaveRegister 1398 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[vstack:1|q]" v0|q v0|q [442, 485[ "StoreAtDefinition"
  v111|q QWORD "[vstack:0|q]" v35|q v35|q [489, 493[492 ShouldHaveRegister  "OneSpillStore"
  v112|q QWORD "[vstack:1|q]" v0|q v0|q [485, 489[ "StoreAtDefinition"
  v113|q QWORD "[vstack:1|q]" v0|q v0|q [489, 696[ "StoreAtDefinition"
  v114|q QWORD "[rsi|q]" v0|q v0|q [696, 1029[738 MustHaveRegister 1020 MustHaveRegister 1024 MustHaveRegister  "StoreAtDefinition"
  v115|q QWORD "[vstack:3|q]" v21|q v21|q [605, 611[ "OneSpillStore"
  v116|q QWORD "[vstack:3|q]" v21|q v21|q [611, 615[614 ShouldHaveRegister  "OneSpillStore"
  v117|q QWORD "[vstack:1|q]" v0|q v0|q [1029, 1033[ "StoreAtDefinition"
  v118|q QWORD "[vstack:4|q]" v57|q v57|q [1033, 1068[[1458, 1550[[1730, 1751[ "OneSpillStore"
  v119|q QWORD "[vstack:5|q]" v63|q v63|q [1483, 1535[1520 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[vstack:6|q]" v64|q v64|q [753, 1027[ "OneSpillStore"
  v121|q QWORD "[vstack:6|q]" v64|q v64|q [1458, 1483[ "OneSpillStore"
  v122|q QWORD "[vstack:1|q]" v0|q v0|q [1033, 1035[ "StoreAtDefinition"
  v123|q QWORD "[rsi|q]" v0|q v0|q [1035, 1041[1036 MustHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[r10|q]" v57|q v57|q [1804, 1825[ "OneSpillStore"
  v125|q QWORD "[vstack:1|q]" v0|q v0|q [1041, 1045[ "StoreAtDefinition"
  v126|q QWORD "[rsi|q]" v0|q v0|q [1045, 1053[1046 MustHaveRegister  "StoreAtDefinition"
  v127|q QWORD "[vstack:1|q]" v0|q v0|q [1053, 1057[ "StoreAtDefinition"
  v128|q QWORD "[rsi|q]" v0|q v0|q [1057, 1252[[1256, 1266[1058 MustHaveRegister 1066 MustHaveRegister 1252 ShouldHaveRegister  "StoreAtDefinition"
  v129|q QWORD "[vstack:1|q]" v0|q v0|q [1266, 1287[ "StoreAtDefinition"
  v130|q QWORD "[vstack:7|q]" v92|q v92|q [1650, 1677[ "OneSpillStore"
  v131|q QWORD "[vstack:8|q]" v93|q v93|q [1600, 1627[ "OneSpillStore"
  v132|q QWORD "[vstack:1|q]" v0|q v0|q [1287, 1458[ "StoreAtDefinition"
  v133|q QWORD "[vstack:1|q]" v0|q v0|q [1458, 1479[ "StoreAtDefinition"
  v134|q QWORD "[vstack:1|q]" v0|q v0|q [1479, 1483[ "StoreAtDefinition"
  v135|q QWORD "[vstack:6|q]" v64|q v64|q [1483, 1550[ "OneSpillStore"
  v136|q QWORD "[vstack:1|q]" v0|q v0|q [1483, 1751[[1752, 1803[[1804, 1825[[1826, 1853[[1854, 1864[ "StoreAtDefinition"
  v137|q QWORD "[r8|q]" v63|q v63|q [1804, 1825[ "OneSpillStore"
  v138|q QWORD "[rsi|q]" v0|q v0|q [1864, 1885[ "StoreAtDefinition"
  v139|q QWORD "[rax|q]" v64|q v64|q [1804, 1825[ "OneSpillStore"
  v140|q QWORD "[vstack:8|q]" v93|q v93|q [1627, 1650[ "OneSpillStore"
  v141|q QWORD "[vstack:8|q]" v93|q v93|q [1650, 1677[ "OneSpillStore"
  v142|q QWORD "[vstack:8|q]" v93|q v93|q [1677, 1679[ "OneSpillStore"
  v143|q QWORD "[vstack:7|q]" v92|q v92|q [1677, 1679[ "OneSpillStore"
  v144|q QWORD "[rdx|q]" v92|q v92|q [1826, 1853[ "OneSpillStore"
  v145|q QWORD "[rax|q]" v93|q v93|q [1826, 1853[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [v54|QWORD[.]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [v32|QWORD] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v34|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = STACKMOVE (input: v112|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v20|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [v50|QWORD[.]] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1058  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1292  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [v48|QWORD[.]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr 1312  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [v11|QWORD[.]] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1344  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1404  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1486  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1536  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr 1580  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = STACKMOVE (input: v141|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1696  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [v56|QWORD[.]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [int[-162073|0xfffffffffffd86e7]] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[1300|0x514]] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-88371|0xfffffffffffea6cd], long[660|0x294]] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[1300|0x514]] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-163097|0xfffffffffffd82e7]] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-164121|0xfffffffffffd7ee7]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[1300|0x514]] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v0|q [0, 1[[490, 491[[612, 613[[754, 759[[1034, 1035[[1044, 1045[[1056, 1057[[1252, 1254[[1290, 1292[[1342, 1344[[1372, 1373[[1402, 1404[[1484, 1486[[1534, 1536[[1578, 1580[[1628, 1631[[1678, 1679[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v6|d [0, 30[[86, 89[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1370, 1373[[1484, 1485[[1524, 1535[[1576, 1579[[1678, 1679[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v43|q [0, 28[[488, 491[[610, 613[[1032, 1035[[1044, 1045[[1056, 1057[[1340, 1342[[1400, 1402[[1482, 1485[[1522, 1535[[1574, 1579[[1678, 1679[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v79|q [0, 26[[486, 491[[608, 613[[1030, 1035[[1042, 1045[[1054, 1057[[1288, 1290[[1338, 1342[[1398, 1402[[1480, 1485[[1520, 1535[[1572, 1579[[1676, 1679[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[484, 491[[606, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1372, 1373[[1484, 1485[[1530, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 32[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1526, 1535[[1578, 1579[[1678, 1679[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1528, 1535[[1578, 1579[[1678, 1679[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[490, 491[[612, 613[[1034, 1035[[1044, 1045[[1056, 1057[[1484, 1485[[1534, 1535[[1578, 1579[[1678, 1679[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [26, 442[26 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[r10|q]" v1|q rdx|- [28, 125[[148, 218[[494, 530[[1256, 1266[[1376, 1407[[1710, 1730[[1752, 1762[[1854, 1885[28 MustHaveRegister 34 MustHaveRegister 50 MustHaveRegister 84 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d rcx|- [30, 116[[148, 480[[1256, 1266[[1316, 1376[[1550, 1574[[1700, 1730[[1752, 1803[[1854, 1885[30 MustHaveRegister 54 MustHaveRegister 66 MustHaveRegister 102 MustHaveRegister 176 ShouldHaveRegister 190 ShouldHaveRegister 204 MustHaveRegister 406 ShouldHaveRegister 428 MustHaveRegister 480 ShouldHaveRegister 1574 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [32, 116[[148, 442[[494, 530[[1256, 1266[[1316, 1407[[1700, 1730[[1752, 1803[[1854, 1885[32 MustHaveRegister 66 ShouldHaveRegister 90 MustHaveRegister 114 ShouldHaveRegister 176 MustHaveRegister 190 MustHaveRegister 216 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [50, 116[[148, 174[[1256, 1266[50 MustHaveRegister 52 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [52, 116[[148, 426[[494, 566[[1256, 1266[[1316, 1400[52 MustHaveRegister 88 ShouldHaveRegister 216 MustHaveRegister 406 MustHaveRegister 426 MustHaveRegister 520 ShouldHaveRegister 566 MustHaveRegister 1400 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [84, 116[[148, 178[[1256, 1266[84 MustHaveRegister 86 ShouldHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdx|d]" v7|d v5|d [88, 114[88 MustHaveRegister 90 ShouldHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r9|q]" v8|q v4|d [174, 476[[494, 602[[1316, 1410[[1550, 1572[[1700, 1710[[1762, 1803[174 MustHaveRegister 476 ShouldHaveRegister 602 ShouldHaveRegister 1572 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbp|d]" v9|d v3|d [176, 440[[1316, 1376[[1550, 1576[176 MustHaveRegister 264 ShouldHaveRegister 316 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 440 ShouldHaveRegister 1340 ShouldHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [1310, 1312[1310 MustHaveRegister 1312 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rsi|q]" v11|q v10|q [1312, 1315[1312 MustHaveRegister 1314 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [518, 568[518 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister 562 MustHaveRegister 564 MustHaveRegister 566 MustHaveRegister 568 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r11|q]" v14|q v5|d [520, 610[[1376, 1410[520 MustHaveRegister 522 MustHaveRegister 610 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [522, 524[522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v15|q [524, 561[524 MustHaveRegister 526 ShouldHaveRegister 556 MustHaveRegister 558 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v16|q [526, 554[526 MustHaveRegister 528 MustHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|- [1404, 1409[1404 MustHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v13|q [568, 571[568 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v20|q [572, 605[604 ShouldHaveRegister  "OneSpillStore"
  v22|q QWORD "[r9|q]" v22|q v8|q [602, 606[602 MustHaveRegister 606 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q v21|q [604, 608[604 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [262, 386[[1350, 1376[262 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 360 MustHaveRegister 365 LiveAtLoopEnd 386 ShouldHaveRegister 1372 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q v9|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [268, 366[268 MustHaveRegister 270 ShouldHaveRegister 306 MustHaveRegister 308 MustHaveRegister 310 MustHaveRegister 318 MustHaveRegister 342 MustHaveRegister 365 LiveAtLoopEnd  "NoSpillStore"
  v28|q QWORD "[rdx|q]" v28|q v27|q [270, 304[270 MustHaveRegister 272 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q rax|- [1344, 1349[1344 MustHaveRegister 1346 MustHaveRegister 1348 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q -1 [318, 322[[1350, 1370[318 MustHaveRegister 320 ShouldHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v32|q [332, 362[342 ShouldHaveRegister 360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v24|q [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v34|q [390, 489[478 ShouldHaveRegister  "OneSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v5|d [406, 410[406 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d v36|d [410, 482[410 MustHaveRegister 412 MustHaveRegister 426 ShouldHaveRegister 440 MustHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbx|d]" v38|d v5|d [426, 428[426 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [1782, 1798[1798 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r9|q]" v40|q v8|q [476, 484[476 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v35|q [478, 486[478 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q v37|d [482, 488[482 MustHaveRegister 488 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v35|q [616, 690[[1266, 1298[690 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [634, 674[634 MustHaveRegister 636 MustHaveRegister 664 MustHaveRegister 666 MustHaveRegister 668 MustHaveRegister 670 MustHaveRegister 672 MustHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [636, 662[636 MustHaveRegister 638 MustHaveRegister 662 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q -1 [1286, 1288[1286 MustHaveRegister 1288 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rax|q]" v48|q rax|- [1292, 1297[1292 MustHaveRegister 1294 MustHaveRegister 1296 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v45|q [674, 677[674 MustHaveRegister 676 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v50|q [678, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[r10|d]" v52|d v44|q [690, 692[690 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|- [1580, 1583[1580 MustHaveRegister 1582 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v1|q [126, 147[136 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q -1 [1694, 1696[1694 MustHaveRegister 1696 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[r10|q]" v56|q v55|q [1696, 1699[1696 MustHaveRegister 1698 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r10|q]" v57|q v54|q [696, 1033[1032 ShouldHaveRegister  "OneSpillStore"
  v58|d DWORD "[rax|d]" v58|d -1 [738, 752[738 MustHaveRegister 740 MustHaveRegister 752 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rdx|d]" v59|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v60|d DWORD "[rdx|d]" v60|d -1 [742, 880[[886, 940[742 MustHaveRegister 744 MustHaveRegister 750 MustHaveRegister 758 MustHaveRegister 876 MustHaveRegister 880 MustHaveRegister 902 MustHaveRegister 922 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q -1 [746, 748[746 MustHaveRegister 748 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r11|q]" v62|q -1 [748, 883[[886, 906[748 MustHaveRegister 878 MustHaveRegister 882 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q v60|d [750, 883[[886, 928[[1458, 1483[750 MustHaveRegister 882 MustHaveRegister 1480 ShouldHaveRegister  "OneSpillStore"
  v64|q QWORD "[rax|q]" v64|q v58|d [752, 753[752 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rcx|d]" v65|d -1 [756, 758[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rcx|d]" v66|d -1 [902, 904[902 MustHaveRegister 904 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rcx|q]" v67|q v66|d [904, 906[904 MustHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[r11|d]" v68|d -1 [922, 928[[1804, 1825[922 MustHaveRegister 924 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[rcx|d]" v69|d v68|d [924, 940[924 MustHaveRegister 926 MustHaveRegister 940 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[rax|d]" v70|d rax|- [1486, 1488[1486 MustHaveRegister 1488 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rax|d]" v71|d rax|- [1536, 1537[1536 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rcx|q]" v72|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v73|q QWORD "[rbx|q]" v73|q -1 [876, 877[876 MustHaveRegister  "NoDefinitionFound"
  v74|d DWORD "[rcx|d]" v74|d v62|q [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v76|q QWORD "[rcx|q]" v76|q -1 [882, 883[882 MustHaveRegister  "NoDefinitionFound"
  v77|d DWORD "[rdx|d]" v77|d -1 [1020, 1028[1020 MustHaveRegister 1022 MustHaveRegister 1028 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r11|d]" v78|d -1 [1024, 1026[1024 MustHaveRegister 1026 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdx|q]" v79|q v77|d [1028, 1030[1028 MustHaveRegister 1030 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[r10|d]" v80|d -1 [1036, 1040[1036 MustHaveRegister 1038 MustHaveRegister 1040 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[r10|q]" v81|q v80|d [1040, 1042[1040 MustHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[r10|d]" v82|d -1 [1046, 1048[1046 MustHaveRegister 1048 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r10|d]" v83|d -1 [1048, 1052[1048 MustHaveRegister 1050 MustHaveRegister 1052 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r10|q]" v84|q v83|d [1052, 1054[1052 MustHaveRegister 1054 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[rax|d]" v85|d -1 [1058, 1106[1058 MustHaveRegister 1060 MustHaveRegister 1106 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdx|d]" v86|d -1 [1060, 1104[1060 MustHaveRegister 1062 MustHaveRegister 1104 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r10|d]" v87|d -1 [1062, 1210[[1826, 1846[1062 MustHaveRegister 1064 MustHaveRegister 1096 MustHaveRegister 1098 MustHaveRegister 1158 MustHaveRegister 1160 MustHaveRegister 1192 MustHaveRegister 1210 MustHaveRegister 1846 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r11|d]" v88|d -1 [1096, 1196[[1826, 1853[1096 MustHaveRegister 1120 ShouldHaveRegister 1190 ShouldHaveRegister 1196 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[rcx|d]" v89|d -1 [1098, 1102[1098 MustHaveRegister 1102 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rdi|q]" v90|q -1 [1100, 1108[1100 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[rcx|q]" v91|q v89|d [1102, 1108[1102 MustHaveRegister 1108 MustHaveRegister  "NoSpillStore"
  v92|q QWORD "[rdx|q]" v92|q v86|d [1104, 1214[[1410, 1426[[1436, 1448[[1584, 1650[1104 MustHaveRegister  "OneSpillStore"
  v93|q QWORD "[rax|q]" v93|q v85|d [1106, 1214[[1410, 1426[[1436, 1448[[1584, 1600[1106 MustHaveRegister  "OneSpillStore"
  v94|q QWORD "[rcx|q]" v94|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v95|q QWORD "[rdi|q]" v95|q -1 [1158, 1159[1158 MustHaveRegister  "NoDefinitionFound"
  v96|d DWORD "[rcx|d]" v96|d v88|d [1190, 1192[1190 MustHaveRegister 1192 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[r10|d]" v97|d -1 [1210, 1214[[1410, 1422[1210 MustHaveRegister 1212 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v98|d DWORD "[r10|d]" v98|d -1 [1422, 1426[[1436, 1448[[1584, 1672[1422 MustHaveRegister 1424 MustHaveRegister 1446 MustHaveRegister 1596 MustHaveRegister 1624 MustHaveRegister 1630 MustHaveRegister 1649 LiveAtLoopEnd 1672 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rsi|q]" v99|q v98|d [1596, 1650[1596 MustHaveRegister  "NoSpillStore"
  v100|d DWORD "[r11|d]" v100|d -1 [1624, 1647[1624 MustHaveRegister 1626 MustHaveRegister 1628 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r8|d]" v101|d v100|d [1626, 1630[1626 MustHaveRegister 1630 MustHaveRegister  "NoSpillStore"
  v102|q QWORD "[r8|q]" v102|q -1 [1646, 1647[1646 MustHaveRegister  "NoDefinitionFound"
  v103|d DWORD "[rsi|d]" v103|d -1 [1672, 1674[1672 MustHaveRegister 1674 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rsi|q]" v104|q v103|d [1674, 1676[1674 MustHaveRegister 1676 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[r10|q]" v105|q v87|d [1846, 1853[1846 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d -1 [1864, 1880[1880 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rcx|q]" v107|q -1 [1864, 1882[1882 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[rsi|q]" v108|q -1 [1318, 1338[1318 MustHaveRegister 1338 ShouldHaveRegister  "NoSpillStore"
  v109|q QWORD "[rsi|q]" v109|q -1 [1378, 1398[1378 MustHaveRegister 1398 ShouldHaveRegister  "NoSpillStore"
  v110|q QWORD "[vstack:1|q]" v0|q v0|q [442, 485[ "StoreAtDefinition"
  v111|q QWORD "[vstack:0|q]" v35|q v35|q [489, 493[492 ShouldHaveRegister  "OneSpillStore"
  v112|q QWORD "[vstack:1|q]" v0|q v0|q [485, 489[ "StoreAtDefinition"
  v113|q QWORD "[vstack:1|q]" v0|q v0|q [489, 696[ "StoreAtDefinition"
  v114|q QWORD "[rsi|q]" v0|q v0|q [696, 1029[738 MustHaveRegister 1020 MustHaveRegister 1024 MustHaveRegister  "StoreAtDefinition"
  v115|q QWORD "[vstack:3|q]" v21|q v21|q [605, 611[ "OneSpillStore"
  v116|q QWORD "[vstack:3|q]" v21|q v21|q [611, 615[614 ShouldHaveRegister  "OneSpillStore"
  v117|q QWORD "[vstack:1|q]" v0|q v0|q [1029, 1033[ "StoreAtDefinition"
  v118|q QWORD "[vstack:4|q]" v57|q v57|q [1033, 1068[[1458, 1550[[1730, 1751[ "OneSpillStore"
  v119|q QWORD "[vstack:5|q]" v63|q v63|q [1483, 1535[1520 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[vstack:6|q]" v64|q v64|q [753, 1027[ "OneSpillStore"
  v121|q QWORD "[vstack:6|q]" v64|q v64|q [1458, 1483[ "OneSpillStore"
  v122|q QWORD "[vstack:1|q]" v0|q v0|q [1033, 1035[ "StoreAtDefinition"
  v123|q QWORD "[rsi|q]" v0|q v0|q [1035, 1041[1036 MustHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[r10|q]" v57|q v57|q [1804, 1825[ "OneSpillStore"
  v125|q QWORD "[vstack:1|q]" v0|q v0|q [1041, 1045[ "StoreAtDefinition"
  v126|q QWORD "[rsi|q]" v0|q v0|q [1045, 1053[1046 MustHaveRegister  "StoreAtDefinition"
  v127|q QWORD "[vstack:1|q]" v0|q v0|q [1053, 1057[ "StoreAtDefinition"
  v128|q QWORD "[rsi|q]" v0|q v0|q [1057, 1252[[1256, 1266[1058 MustHaveRegister 1066 MustHaveRegister 1252 ShouldHaveRegister  "StoreAtDefinition"
  v129|q QWORD "[vstack:1|q]" v0|q v0|q [1266, 1287[ "StoreAtDefinition"
  v130|q QWORD "[vstack:7|q]" v92|q v92|q [1650, 1677[ "OneSpillStore"
  v131|q QWORD "[vstack:8|q]" v93|q v93|q [1600, 1627[ "OneSpillStore"
  v132|q QWORD "[vstack:1|q]" v0|q v0|q [1287, 1458[ "StoreAtDefinition"
  v133|q QWORD "[vstack:1|q]" v0|q v0|q [1458, 1479[ "StoreAtDefinition"
  v134|q QWORD "[vstack:1|q]" v0|q v0|q [1479, 1483[ "StoreAtDefinition"
  v135|q QWORD "[vstack:6|q]" v64|q v64|q [1483, 1550[ "OneSpillStore"
  v136|q QWORD "[vstack:1|q]" v0|q v0|q [1483, 1751[[1752, 1803[[1804, 1825[[1826, 1853[[1854, 1864[ "StoreAtDefinition"
  v137|q QWORD "[r8|q]" v63|q v63|q [1804, 1825[ "OneSpillStore"
  v138|q QWORD "[rsi|q]" v0|q v0|q [1864, 1885[ "StoreAtDefinition"
  v139|q QWORD "[rax|q]" v64|q v64|q [1804, 1825[ "OneSpillStore"
  v140|q QWORD "[vstack:8|q]" v93|q v93|q [1627, 1650[ "OneSpillStore"
  v141|q QWORD "[vstack:8|q]" v93|q v93|q [1650, 1677[ "OneSpillStore"
  v142|q QWORD "[vstack:8|q]" v93|q v93|q [1677, 1679[ "OneSpillStore"
  v143|q QWORD "[vstack:7|q]" v92|q v92|q [1677, 1679[ "OneSpillStore"
  v144|q QWORD "[rdx|q]" v92|q v92|q [1826, 1853[ "OneSpillStore"
  v145|q QWORD "[rax|q]" v93|q v93|q [1826, 1853[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [v54|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [v31|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [v35|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = STACKMOVE (input: v112|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [v51|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [v57|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v117|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1058  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1292  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr 1312  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1318  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1344  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1404  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1486  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1536  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr 1580  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = STACKMOVE (input: v141|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1696  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] // MoveResolver resolve mapping <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [v39|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction v6|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction v7|DWORD = SHR (x: v5|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: v54|QWORD[.], y: v54|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v2|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v3|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v24|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction v25|QWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction v27|QWORD = AND x: v26|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v28|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: v28|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v27|QWORD + v24|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [v24|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v24|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [v24|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v30|QWORD = LEA address: [v27|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: v27|QWORD, y: v31|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [v24|QWORD + v31|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction v34|QWORD[.] = MOVE input: v24|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction v36|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: v36|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v37|DWORD = CMOVE (falseValue: v36|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v37|DWORD, y: v37|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction v38|DWORD = SUB (x: v5|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: v37|DWORD, y: v9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction v40|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction v41|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction v42|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction v43|QWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [v40|QWORD[*] + v42|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [v41|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction v13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction v14|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction v16|QWORD = AND x: v15|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction v17|QWORD = ADD (x: v16|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: v17|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: v17|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [v16|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction v20|QWORD[.] = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction v22|QWORD[*] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction v23|QWORD[*] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [v22|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [v23|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v45|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction v46|QWORD = LEA address: [v45|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v46|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: v46|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [v45|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [v45|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [v45|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [v45|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [v45|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction v50|QWORD[.] = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [v51|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v59|DWORD[_] = MOV input: [v58|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v60|DWORD[_] = MOV input: [v59|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: v57|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v60|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction v61|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction v62|QWORD[.] = MOV input: [v61|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction v64|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction v65|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [v60|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v65|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v60|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v72|QWORD, temp2: v73|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction v74|DWORD[_] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 12], y: v74|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v63|QWORD[.], ~newValue: v62|QWORD[.]) {temp: v75|QWORD, temp2: v76|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction v66|DWORD[_] = MOV input: [v60|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v66|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: v62|QWORD[.], y: v67|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction v68|DWORD = MOV input: [v60|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction v69|DWORD = INC value: v68|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [v60|DWORD[_] * 8 + 16], y: v69|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v77|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v77|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction v78|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + v78|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction v80|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v80|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction v82|DWORD[_] = MOV input: [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v83|DWORD[_] = MOV input: [v82|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v83|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1058  <|@ instruction v85|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v86|DWORD[_] = MOV input: [v85|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction v87|DWORD[_] = MOV input: [v86|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v87|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = MOV input: [v87|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction v90|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction v91|QWORD[.] = UNCOMPRESSPOINTER (input: v89|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v85|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: v91|QWORD[.], y: [v90|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v87|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v94|QWORD, temp2: v95|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [v87|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction v96|DWORD = DEC value: v88|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [v87|DWORD[_] * 8 + 16], y: v96|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: v88|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction v97|DWORD[_] = MOV input: [v87|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: v97|DWORD[_], y: v97|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1292  <|@ instruction v48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} v44|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v48|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr 1312  <|@ instruction v11|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1318  <|@ instruction v108|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction rsi|QWORD = MOVE input: v108|QWORD moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1344  <|@ instruction v29|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [v29|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction rcx|QWORD = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [v24|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction v109|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD = MOVE input: v109|QWORD moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1404  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: v1|QWORD[.] int[0|0x0] v3|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction v98|DWORD[_] = MOV input: [v97|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: v98|DWORD[_], y: v98|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [v98|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = STACKMOVE (input: v121|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v63|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1486  <|@ instruction v70|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: v70|DWORD, y: v70|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1536  <|@ instruction v71|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v118|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr 1580  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction v100|DWORD = MOV input: [v98|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction v101|DWORD = AND x: v100|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: v100|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [v98|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v101|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v99|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v100|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v99|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v99|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v102|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction v103|DWORD[_] = MOV input: [v98|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction v104|QWORD[.] = UNCOMPRESSPOINTER (input: v103|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1676  <|@ instruction rsi|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = STACKMOVE (input: v141|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1696  <|@ instruction v56|QWORD[.] = MOVE input: v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] // MoveResolver resolve mapping <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: v0|QWORD[.] v57|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v39|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: v8|QWORD[.] v2|DWORD v3|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: v0|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v68|DWORD 
locals: v63|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v63|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v64|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: v0|QWORD[.] v57|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v87|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v88|DWORD 
locals: v105|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v105|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v92|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v93|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: v0|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1058  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] // MoveResolver resolve mapping <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  270  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  308  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  312  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  482  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  520  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  526  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  558  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  560  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  562  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  564  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  566  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  608  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  614  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  666  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  668  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  670  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  674  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  692  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr  744  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr  746  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  748  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  756  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  758  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr  760  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  878  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  882  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr  884  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  904  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  906  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  924  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  926  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1022  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1024  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1026  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1038  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1040  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1042  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1048  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1052  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1054  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1058  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1098  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1100  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1102  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1104  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1106  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1160  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1162  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1192  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1194  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1196  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1212  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1290  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr 1294  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr 1296  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1314  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1342  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1348  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1374  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1408  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1424  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1522  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1526  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1528  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1530  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1532  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1598  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1626  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1628  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1632  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1648  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1674  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1678  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1698  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] // MoveResolver resolve mapping <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1718  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1800  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1802  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1824  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1848  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  826  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction vstack:3|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction vstack:5|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:6|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction vstack:8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction vstack:7|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:7|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: vstack:1|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: vstack:1|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: vstack:1|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [822, 826[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [26, 1930[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [416, 426[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [1174, 1916[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [1200, 1250[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [1078, 1476[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [1804, 1830[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [1748, 1830[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [822, 826[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:32|q]" vstack:1|q -1 [26, 1930[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:40|q]" vstack:3|q -1 [416, 426[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:48|q]" vstack:4|q -1 [1174, 1916[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:56|q]" vstack:5|q -1 [1200, 1250[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:40|q]" vstack:6|q -1 [1078, 1476[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:56|q]" vstack:7|q -1 [1804, 1830[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:40|q]" vstack:8|q -1 [1748, 1830[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  826  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  826  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   94  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rsi:0, r9:0, r10:0, stack:32]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@reference-map: [r10:0, stack:32]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:32]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rax:0, r9:0, stack:32]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@reference-map: [rax:0, rdx:0, r10:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B77" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:32]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rsi:0, r9:0, r10:0, stack:32]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4603596568345418578
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603414260059205002
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B9" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4603414340213505143
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4603414335714975209
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" "B47" "B43" "B14" 
    successors "B49" "B56" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1064  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1066  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17] <|@ <|@
      nr 1068  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.valueOf(String.java:4465) [bci: 14]
stack: r10|QWORD[.] 
locals: - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17] <|@ <|@
      nr 1070  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1072  <|@ instruction r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD <|@ <|@
      nr 1074  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1076  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1078  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1082  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1084  <|@ instruction rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1388  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1392  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B55" "B54" "B52" 
    successors "B58" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1472  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1474  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1476  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: rsi|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1478  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1480  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17] <|@ <|@
      nr 1488  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1490  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr 1492  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17] <|@ <|@
      nr 1494  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1496  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1498  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17] <|@ <|@
      nr 1500  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1502  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1506  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17] <|@ <|@
      nr 1508  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17] <|@ <|@
      nr 1514  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1516  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1520  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1522  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: rsi|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: rsi|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: rsi|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17] <|@ <|@
      nr 1524  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B75" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ instruction rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1558  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1560  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1562  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1564  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1566  <|@ instruction CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352 <|@ <|@
      nr 1618  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1620  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B73" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1654  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605992585363181744
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1670  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B74" 
    xhandlers
    flags 
    probability 4605987124501141026
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B64" "B73" "B72" "B68" "B66" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction NOP <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4600843320827103580
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B44" 
    xhandlers
    flags 
    probability 4601207937399530733
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4601207777090930452
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B22" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B21" 
    xhandlers
    flags 
    probability 4599032107299714851
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4597213341867825535
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4599796307291224194
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B30" 
    xhandlers
    flags 
    probability 4599735060417491011
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  552  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  554  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  556  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  558  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  560  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  562  <|@ instruction MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  566  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4599674426012495160
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4629839612648283254
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" 
    successors "B28" "B29" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4629886509570897232
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4599674426012495161
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599735060417491012
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B24" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  686  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  714  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B39" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B40" 
    xhandlers
    flags 
    probability 4599796307291224195
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOV value: r11|DWORD size: DWORD <|@ <|@
      nr  814  <|@ instruction r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  818  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B20" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  850  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  852  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4601059508744723248
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  908  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  910  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  912  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  916  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  918  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B41" 
    successors "B48" 
    xhandlers
    flags 
    probability 4601134133884388070
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  938  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B53" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1108  <|@ instruction CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1126  <|@ instruction rcx|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr 1128  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B57" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1170  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B74" 
    xhandlers
    flags 
    probability 4593927354037878080
    begin_IR
      LIR
      nr 1836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593072527001857804
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  298  <|@ instruction r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  304  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4589962213972093873
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  372  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  376  <|@ instruction MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B40" 
    xhandlers
    flags 
    probability 4590015727035820428
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4581491086567258382
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4571426031092231524
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  876  <|@ instruction rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  878  <|@ st <@st|@reference-map: [r10:0, stack:32]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12] <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:32]
live-base-pointers: []
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} r10|QWORD[.] 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B48" 
    xhandlers
    flags 
    probability 4571363187372395366
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""] <|@ <|@
      nr  240  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B32" 
    xhandlers
    flags 
    probability 4569986022364159846
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rax:0, r9:0, stack:32]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12] <|@ <|@
      nr  514  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4569907626365781371
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  646  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4559988895428570502
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12] <|@ <|@
      nr  334  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0, stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:2838) [bci: 22]
locals: r10|QWORD[.] int[0|0x0] r8|DWORD - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12] <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4558731146001266371
    begin_IR
      LIR
      nr 1682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1696  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B74" 
    xhandlers
    flags 
    probability 4558167646563895446
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4544136419888427365
    begin_IR
      LIR
      nr 1710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4543174379818590279
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1732  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1174  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1200  <|@ instruction stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:56|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4539410796736698290
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr 1240  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1242  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1244  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1246  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1248  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1250  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:56|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] stack:48|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17] <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 4532174189689337351
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B45" 
    xhandlers
    flags 
    probability 4531370617721367879
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.lang.String.substring(String.java:2840) [bci: 54]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12] <|@ <|@
      nr  974  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1748  <|@ instruction stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~outgoingValues: [] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B70" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r11|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B71" 
    successors "B71" "B72" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4533849113038820376
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1778  <|@ instruction r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1782  <|@ instruction rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B74" 
    xhandlers
    flags 
    probability 4529345513411449880
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1830  <|@ st <@st|@reference-map: [stack:8, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:40|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17] <|@ <|@
      nr 1832  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1834  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" 
    xhandlers
    flags 
    probability 4512820277522351163
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"] <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   92  <|@ instruction r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr   96  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B2" "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1930  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1952  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1954  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1505) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] r11|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r11|DWORD 
locals: r8|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r8|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:788) [bci: 11]
locals: stack:32|QWORD[.] r10|QWORD[.] - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7] <|@ <|@
      nr  726  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B37" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [r9:0, stack:32]
live-base-pointers: []
java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
locals: r9|QWORD[.] r11|DWORD r8|DWORD 
java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16]
stack: vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} 
locals: - - - 
java.lang.String.substring(String.java:2839) [bci: 41]
locals: - - - - - 
java.lang.String.subSequence(String.java:2872) [bci: 3]
locals: - - - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 12]
stack: stack:32|QWORD[.] 
locals: - - - - 
vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]} Ljava/lang/String; int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] Object[null] 
>@ <|@ instruction DEOPT info [bci:10, 16, 41, 3, 12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   64  <|@ instruction r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr   68  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7] <|@ <|@
      nr  750  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7] <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction rcx|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1928  <|@ instruction r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd] <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B78" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  132  <|@ instruction r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1890  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD <|@ <|@
      nr 1894  <|@ st <@st|@reference-map: [rax:0, rdx:0, r10:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r11|DWORD 
locals: r10|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r10|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: rdx|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rax|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:792) [bci: 23]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7]
locals: - 
java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23]
locals: stack:32|QWORD[.] stack:48|QWORD[.] 
java.io.PrintStream.write(PrintStream.java:790) [bci: 16]
locals: stack:32|QWORD[.] - - - 
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:32|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:1506) [bci: 17]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:7, 23, 16, 5, 5, 17] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     8
     4: ldc_w         #300        // "null"
     7: astore_1      
     8: aload_0       
     9: aload_1       
    10: iload_2       
    11: iload_3       
    12: invokeinterface#86, 3      // java.lang.CharSequence.subSequence:(int, int)java.lang.CharSequence
    17: invokevirtual #87         // append:(java.lang.CharSequence)java.io.PrintStream
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f854d0a00009090909090909090909048896c243048897424204c8bd2448bd941817a08addeadde0f85a1090000909090909090458b4a14428b1ccd0c0000004585db0f8c5b09000090909090453bd80f8fb908000090909090909090410fbe7a108bcf8bd3d3ea443bc20f8f73090000909090904585db0f855503000090909090413bd00f8516060000909090909090904d85d20f845b08000090909090909090909090909090909090909090909090908b46188b14c50c0000008b14d50c0000008504d5000000004d8b9f800300004d8b1b448bc249c1e00348c1e0034889442418b800000000b901000000f00fb10cd5100000000f85b2040000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f84310000008b1cd50c00000048c1e3034885db0f841d000000498b4f284883f9000f84010900004883e90849894f2849034f38488919498bcb48c1e903890cd50c000000498bd04933d348c1ea160f8442000000498bd048c1ea0948b900e0368d787f00004803d1803a027429f083042400803a00741fc60200498b4f484885c90f84b00800004883e90849894f4849034f584889119090909090909090909090909090909090909090909090909090909090909090909090908b56248504d500000000448b5e10438504dc48c1e203488bf2498bd24c8954241090e8000000000f1f840000000000488b742420448b5624428504d50000000049c1e203498bf2666690e8000000000f1f840000000000488b742420448b5628468b14d514000000428504d50000000049c1e203498bf2666690e8000000000f1f840000000000488b7424208b46188b14c50c000000448b14d50c000000428504d500000000807e0d000f858407000090909090909090909090909090468b1cd510000000428b0cd50c000000498bbf8003000048c1e10348c1e20348c1e003483b0f0f851b070000909090904183fb010f85bb020000909090909090909090909090909090909041807f40000f8432000000428b3cd50c00000048c1e7034885ff0f841d000000498b4f284883f9000f84560700004883e90849894f2849034f3848893942c704d50c0000000000000090909090909090418bcbffc942890cd510000000f0830424004183fb010f85920200009090909090468b14d5140000004585d20f85ea0300009090909090909090909090488bc6488b6c24304883c438493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f87c1060000c5f877c39090909090909090909049c1e103418be8412beb85ff0f855a04000090909090453bc30f84d702000090909090904585db0f85f901000090909090413bd80f84f401000090909090909090909090909090904d8b97b80100008bfd488d7f174883e7f8488bd74903d2493b97c80100000f87a60200009090909090909090909090909090498997b8010000420f18841700010000420f18841740010000420f1884178001000049c7020100000041c74208addeadde41896a0c488d4ff04881f9000800000f838302000090909048c7c210000000e9130000009090909090909049c7041200000000488d520890909090483bfa77e490909090909090909090909090908bfb412bfb3bfd0f4ffd85ff0f8cdc04000090909090902bdf443bdb0f8f7d040000909090903bfd0f87b504000090909090909090909090909090909090498bd2458bdb448bc74b8d7c1910488d7210498bd04c89542418e8000000004c8b5424189090909090909090498b87b8010000488d7018493bb7c80100000f8751010000909090909090909090904989b7b80100000f18801801000048c70001000000c74008addeaddec7400c0000000048c7401000000000909090909049c1ea03448950144c8bd0488b742420e9f7faffff909090e997fdffff909090909090908b0cd50c00000048c1e1034c3bd90f85e2010000909090909090448b1cd510000000418bcbffc185c90f8c610300009090909090890cd510000000f083042400e9d6fbffff909090e97ffdffff909090e90ffeffff9090909090909090909090498bbfb8010000448bdb498d73174883e6f8488bd64803d7493b97c80100000f87020100009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde895f0c9090909090909090909090909090488bf748897c2418498d7910488d7610498bd3e800000000e992feffff909090e92dfdffff90909090909090909048b8addeaddeaddeadde488bf0e8000000000f1f8400000000008500e9bafeffff909090909048beaddeaddeaddeadde4c8bd6488b742420e9aff9ffff48beaddeaddeaddeadde9090909090909090908bd5e8000000000f1f84000000000085004c8bd0488b742420e9affdffff909090909090909090498d7a104833c0f348aa488b742420e98efdffff48beaddeaddeaddeadde9090909090909090908bd3e8000000000f1f8400000000008500488bf8e90dffffff9090909090468b14d5140000004585d20f850d000000909090488b742420e9f6fbffff9090909042833cd50c000000000f85d6000000909090488b742420e9d6fbffff4c8954241090909090909090909090498bf0ba010000004c89442408666690e8000000000f1f84000000000085c00f85570000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f8400000000004c8b542410488b742420e99af9ffff9090904c8b542410488b742420e988f9ffff90909090909090909090498bf1418bd38bcde8000000000f1f8400000000004c8bd0488b742420e919f8ffff9090909090418bf248c1e6034889442418e9100000009090909090904d8b87580400004185009090909090909090909090468b1cd50c000000458bc34183e0fe418bc3f0460fb104d50c00000075c8488954240890909090909090909090428b34d51800000048c1e603e8000000000f1f840000000000488b742420e98cfaffff909090909049baaddeaddeaddeadde488b742420e98ff7ffff90909048c7c11405000041b9eda9fdff488b7424209090909090909045898f8404000049898f90040000e8000000000f1f840000000000488b4424189090909090909041c78784040000ed90fdff49c78790040000940c0000e8000000000f1f84000000000090909041bae782fdff909090909090904589978404000049c7879004000000000000e8000000000f1f84000000000090909048c7c11405000041b9edadfdffe966ffffff90909041bae77efdffebba90909041bae786fdffebaf90909048c7c19402000041b9cda6feffe93bffffff90909048c7c11405000041b9eda5fdffe926ffffff90909090909090909049c1e20341c78784040000ed95fdff49c7879004000094340000e8000000000f1f8400000000009090909090909041c78784040000ed99fdff49c78790040000942a0000e8000000000f1f84000000000048896c2430e800000000e9a4f5fffff448891c24e800000000e900f7fffff448891424e800000000e951f7fffff448893c24e800000000e9abf8fffff4488d0d2bf9ffff49898f68040000e929f5fffff441c78784040000edb1fdff49c7879004000014000000e8000000000f1f84000000000041c78784040000f5a0feff49c7879004000000000000e8000000000f1f84000000000041c78784040000eda1fdff49c78790040000140a0000e8000000000f1f84000000000041c78784040000f568feff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed9dfdff49c78790040000142d0000e8000000000f1f84000000000041c78784040000f54cfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53afeff49c7879004000000000000e8000000000f1f84000000000041c787840400008f6bfcff49c7879004000000000000e8000000000f1f84000000000041c787840400008fa0fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008ff0fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD  <||@
  Comment 73 26 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 81 30 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 84 32 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 84 [rsi:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 98 block B1 null  <||@
  Comment 98 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 36 NOP  <||@
  Comment 99 38 NOP  <||@
  Comment 100 40 NOP  <||@
  Comment 101 42 NOP  <||@
  Comment 102 44 NOP  <||@
  Comment 103 46 NOP  <||@
  Comment 104 48 r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 108 50 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 108 [rsi:0, r9:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 108 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 52 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 125 block B3 null  <||@
  Comment 125 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 125 72 NOP  <||@
  Comment 126 74 NOP  <||@
  Comment 127 76 NOP  <||@
  Comment 128 78 NOP  <||@
  Comment 129 80 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 138 block B5 null  <||@
  Comment 138 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 138 100 NOP  <||@
  Comment 139 102 NOP  <||@
  Comment 140 104 NOP  <||@
  Comment 141 106 NOP  <||@
  Comment 142 108 NOP  <||@
  Comment 143 110 NOP  <||@
  Comment 144 112 NOP  <||@
  Comment 145 114 rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 150 116 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 152 118 rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 156 120 CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 165 block B7 null  <||@
  Comment 165 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 140 NOP  <||@
  Comment 166 142 NOP  <||@
  Comment 167 144 NOP  <||@
  Comment 168 146 NOP  <||@
  Comment 169 148 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD  <||@
  Comment 178 block B8 null  <||@
  Comment 178 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 152 NOP  <||@
  Comment 179 154 NOP  <||@
  Comment 180 156 NOP  <||@
  Comment 181 158 NOP  <||@
  Comment 182 160 CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 191 block B9 null  <||@
  Comment 191 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 164 NOP  <||@
  Comment 192 166 NOP  <||@
  Comment 193 168 NOP  <||@
  Comment 194 170 JUMP ~outgoingValues: [] destination: B9 -> B45  <||@
  Comment 194 block B45 null  <||@
  Comment 194 980 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 194 982 NOP  <||@
  Comment 195 984 NOP  <||@
  Comment 196 986 NOP  <||@
  Comment 197 988 NOP  <||@
  Comment 198 990 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD  <||@
  Comment 207 block B47 null  <||@
  Comment 207 1010 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 207 1012 NOP  <||@
  Comment 208 1014 NOP  <||@
  Comment 209 1016 NOP  <||@
  Comment 210 1018 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 210 block B48 null  <||@
  Comment 210 1020 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 210 1022 NOP  <||@
  Comment 211 1024 NOP  <||@
  Comment 212 1026 NOP  <||@
  Comment 213 1028 NOP  <||@
  Comment 214 1030 NOP  <||@
  Comment 215 1032 NOP  <||@
  Comment 216 1034 NOP  <||@
  Comment 217 1036 NOP  <||@
  Comment 218 1038 NOP  <||@
  Comment 219 1040 NOP  <||@
  Comment 220 1042 NOP  <||@
  Comment 221 1044 NOP  <||@
  Comment 222 1046 NOP  <||@
  Comment 223 1048 NOP  <||@
  Comment 224 1050 NOP  <||@
  Comment 225 1052 NOP  <||@
  Comment 226 1054 NOP  <||@
  Comment 227 1056 NOP  <||@
  Comment 228 1058 NOP  <||@
  Comment 229 1060 NOP  <||@
  Comment 230 1062 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 233 1064 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17]  <||@
  Comment 233 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 233 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 240 1066 rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17]  <||@
  Comment 240 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 240 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 247 1068 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17]  <||@
  Comment 247 [rax:0, rdx:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 247 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 254 1070 r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 261 1072 r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD  <||@
  Comment 264 1074 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 271 1076 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 275 1078 stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 280 1080 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 285 1082 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 290 1084 rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 299 1086 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56  <||@
  Comment 305 block B56 null  <||@
  Comment 305 1272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 1274 NOP  <||@
  Comment 306 1276 NOP  <||@
  Comment 307 1278 NOP  <||@
  Comment 308 1280 NOP  <||@
  Comment 309 1282 NOP  <||@
  Comment 310 1284 NOP  <||@
  Comment 311 1286 NOP  <||@
  Comment 312 1288 NOP  <||@
  Comment 313 1290 NOP  <||@
  Comment 314 1292 NOP  <||@
  Comment 315 1294 NOP  <||@
  Comment 316 1296 NOP  <||@
  Comment 317 1298 NOP  <||@
  Comment 318 1300 NOP  <||@
  Comment 319 1302 NOP  <||@
  Comment 320 1304 NOP  <||@
  Comment 321 1306 NOP  <||@
  Comment 322 1308 NOP  <||@
  Comment 323 1310 NOP  <||@
  Comment 324 1312 NOP  <||@
  Comment 325 1314 NOP  <||@
  Comment 326 1316 NOP  <||@
  Comment 327 1318 NOP  <||@
  Comment 328 1320 NOP  <||@
  Comment 329 1322 NOP  <||@
  Comment 330 1324 NOP  <||@
  Comment 331 1326 NOP  <||@
  Comment 332 1328 NOP  <||@
  Comment 333 1330 NOP  <||@
  Comment 334 1332 NOP  <||@
  Comment 335 1334 NOP  <||@
  Comment 336 1336 NOP  <||@
  Comment 337 1338 NOP  <||@
  Comment 338 1340 NOP  <||@
  Comment 339 1342 NOP  <||@
  Comment 340 1344 NOP  <||@
  Comment 341 1346 NOP  <||@
  Comment 342 1348 NOP  <||@
  Comment 343 1350 NOP  <||@
  Comment 344 1352 NOP  <||@
  Comment 345 1354 NOP  <||@
  Comment 346 1356 NOP  <||@
  Comment 347 1358 NOP  <||@
  Comment 348 1360 NOP  <||@
  Comment 349 1362 NOP  <||@
  Comment 350 1364 NOP  <||@
  Comment 351 1366 NOP  <||@
  Comment 352 1368 NOP  <||@
  Comment 353 1370 NOP  <||@
  Comment 354 1372 NOP  <||@
  Comment 355 1374 NOP  <||@
  Comment 356 1376 NOP  <||@
  Comment 357 1378 NOP  <||@
  Comment 358 1380 NOP  <||@
  Comment 359 1382 NOP  <||@
  Comment 360 1384 NOP  <||@
  Comment 361 1386 AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352  <||@
  Comment 421 1388 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 428 1390 MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 435 1392 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352  <||@
  Comment 517 1394 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 517 block B57 null  <||@
  Comment 517 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 517 1398 NOP  <||@
  Comment 518 1400 NOP  <||@
  Comment 519 1402 NOP  <||@
  Comment 520 1404 NOP  <||@
  Comment 521 1406 NOP  <||@
  Comment 522 1408 NOP  <||@
  Comment 523 1410 NOP  <||@
  Comment 524 1412 NOP  <||@
  Comment 525 1414 NOP  <||@
  Comment 526 1416 NOP  <||@
  Comment 527 1418 NOP  <||@
  Comment 528 1420 NOP  <||@
  Comment 529 1422 NOP  <||@
  Comment 530 1424 NOP  <||@
  Comment 531 1426 NOP  <||@
  Comment 532 1428 NOP  <||@
  Comment 533 1430 NOP  <||@
  Comment 534 1432 NOP  <||@
  Comment 535 1434 NOP  <||@
  Comment 536 1436 NOP  <||@
  Comment 537 1438 NOP  <||@
  Comment 538 1440 NOP  <||@
  Comment 539 1442 NOP  <||@
  Comment 540 1444 NOP  <||@
  Comment 541 1446 NOP  <||@
  Comment 542 1448 NOP  <||@
  Comment 543 1450 NOP  <||@
  Comment 544 1452 NOP  <||@
  Comment 545 1454 NOP  <||@
  Comment 546 1456 NOP  <||@
  Comment 547 1458 NOP  <||@
  Comment 548 1460 NOP  <||@
  Comment 549 1462 NOP  <||@
  Comment 550 1464 NOP  <||@
  Comment 551 1466 NOP  <||@
  Comment 552 1468 NOP  <||@
  Comment 553 1470 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 556 1472 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17]  <||@
  Comment 556 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 556 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 563 1474 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 567 1476 NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17]  <||@
  Comment 567 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 567 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 571 1478 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 575 1480 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 578 1482 rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 581 1484 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 586 1486 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17]  <||@
  Comment 587 {HotSpotMethod<Writer.write(String)>}  <||@
  Comment 587 INVOKESPECIAL  <||@
  Comment 592 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 600 1488 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 605 1490 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 609 1492 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17]  <||@
  Comment 609 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 609 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 617 1494 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 621 1496 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 624 1498 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17]  <||@
  Comment 627 {HotSpotMethod<BufferedWriter.flushBuffer()>}  <||@
  Comment 627 INVOKESPECIAL  <||@
  Comment 632 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 640 1500 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 645 1502 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD  <||@
  Comment 649 1504 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17]  <||@
  Comment 649 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 649 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 657 1506 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17]  <||@
  Comment 657 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 657 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 665 1508 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 669 1510 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 672 1512 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17]  <||@
  Comment 675 {HotSpotMethod<StreamEncoder.flushBuffer()>}  <||@
  Comment 675 INVOKESPECIAL  <||@
  Comment 680 [stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 688 1514 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 693 1516 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 696 1518 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 696 [rax:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 696 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 703 1520 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 703 [rax:0, rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 711 1522 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 711 [rax:0, rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 711 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 719 1524 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null  <||@
  Comment 729 block B58 null  <||@
  Comment 729 1526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 729 1528 NOP  <||@
  Comment 730 1530 NOP  <||@
  Comment 731 1532 NOP  <||@
  Comment 732 1534 NOP  <||@
  Comment 733 1536 NOP  <||@
  Comment 734 1538 NOP  <||@
  Comment 735 1540 NOP  <||@
  Comment 736 1542 NOP  <||@
  Comment 737 1544 NOP  <||@
  Comment 738 1546 NOP  <||@
  Comment 739 1548 NOP  <||@
  Comment 740 1550 NOP  <||@
  Comment 741 1552 NOP  <||@
  Comment 742 1554 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 750 1556 rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 758 1558 rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 765 1560 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 769 1562 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 773 1564 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 777 1566 CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD  <||@
  Comment 786 block B59 null  <||@
  Comment 786 1568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 786 1570 NOP  <||@
  Comment 787 1572 NOP  <||@
  Comment 788 1574 NOP  <||@
  Comment 789 1576 NOP  <||@
  Comment 790 1578 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null  <||@
  Comment 800 block B60 null  <||@
  Comment 800 1580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 800 1582 NOP  <||@
  Comment 801 1584 NOP  <||@
  Comment 802 1586 NOP  <||@
  Comment 803 1588 NOP  <||@
  Comment 804 1590 NOP  <||@
  Comment 805 1592 NOP  <||@
  Comment 806 1594 NOP  <||@
  Comment 807 1596 NOP  <||@
  Comment 808 1598 NOP  <||@
  Comment 809 1600 NOP  <||@
  Comment 810 1602 NOP  <||@
  Comment 811 1604 NOP  <||@
  Comment 812 1606 NOP  <||@
  Comment 813 1608 NOP  <||@
  Comment 814 1610 NOP  <||@
  Comment 815 1612 NOP  <||@
  Comment 816 1614 NOP  <||@
  Comment 817 1616 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352  <||@
  Comment 878 1618 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 890 1620 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 890 block B62 null  <||@
  Comment 890 1632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 890 1634 NOP  <||@
  Comment 891 1636 NOP  <||@
  Comment 892 1638 NOP  <||@
  Comment 893 1640 NOP  <||@
  Comment 894 1642 NOP  <||@
  Comment 895 1644 NOP  <||@
  Comment 896 1646 NOP  <||@
  Comment 897 1648 rcx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 902 1650 MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 910 1652 MEMBAR barriers: 4  <||@
  Comment 915 1654 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null  <||@
  Comment 925 block B63 null  <||@
  Comment 925 1656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 1658 NOP  <||@
  Comment 926 1660 NOP  <||@
  Comment 927 1662 NOP  <||@
  Comment 928 1664 NOP  <||@
  Comment 929 1666 NOP  <||@
  Comment 930 1668 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 938 1670 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 947 block B64 null  <||@
  Comment 947 1672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 947 1674 NOP  <||@
  Comment 948 1676 NOP  <||@
  Comment 949 1678 NOP  <||@
  Comment 950 1680 JUMP ~outgoingValues: [] destination: B64 -> B74  <||@
  Comment 950 block B74 null  <||@
  Comment 950 1846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 1848 NOP  <||@
  Comment 951 1850 NOP  <||@
  Comment 952 1852 NOP  <||@
  Comment 953 1854 NOP  <||@
  Comment 954 1856 NOP  <||@
  Comment 955 1858 NOP  <||@
  Comment 956 1860 NOP  <||@
  Comment 957 1862 NOP  <||@
  Comment 958 1864 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 961 1866 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 986 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 1002 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 1014 POLL_RETURN_FAR  <||@
  Comment 1031 block B11 null  <||@
  Comment 1031 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 184 NOP  <||@
  Comment 1032 186 NOP  <||@
  Comment 1033 188 NOP  <||@
  Comment 1034 190 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1034 block B12 null  <||@
  Comment 1034 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1034 194 NOP  <||@
  Comment 1035 196 NOP  <||@
  Comment 1036 198 NOP  <||@
  Comment 1037 200 NOP  <||@
  Comment 1038 202 NOP  <||@
  Comment 1039 204 NOP  <||@
  Comment 1040 206 NOP  <||@
  Comment 1041 208 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 1045 210 rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1051 212 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD  <||@
  Comment 1059 block B13 null  <||@
  Comment 1059 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 216 NOP  <||@
  Comment 1060 218 NOP  <||@
  Comment 1061 220 NOP  <||@
  Comment 1062 222 NOP  <||@
  Comment 1063 224 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 1072 block B15 null  <||@
  Comment 1072 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1072 248 NOP  <||@
  Comment 1073 250 NOP  <||@
  Comment 1074 252 NOP  <||@
  Comment 1075 254 NOP  <||@
  Comment 1076 256 NOP  <||@
  Comment 1077 258 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD  <||@
  Comment 1086 block B16 null  <||@
  Comment 1086 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1086 262 NOP  <||@
  Comment 1087 264 NOP  <||@
  Comment 1088 266 NOP  <||@
  Comment 1089 268 NOP  <||@
  Comment 1090 270 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD  <||@
  Comment 1099 block B21 null  <||@
  Comment 1099 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1099 432 NOP  <||@
  Comment 1100 434 NOP  <||@
  Comment 1101 436 NOP  <||@
  Comment 1102 438 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1102 block B23 null  <||@
  Comment 1102 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1102 452 NOP  <||@
  Comment 1103 454 NOP  <||@
  Comment 1104 456 NOP  <||@
  Comment 1105 458 NOP  <||@
  Comment 1106 460 NOP  <||@
  Comment 1107 462 NOP  <||@
  Comment 1108 464 NOP  <||@
  Comment 1109 466 NOP  <||@
  Comment 1110 468 NOP  <||@
  Comment 1111 470 NOP  <||@
  Comment 1112 472 NOP  <||@
  Comment 1113 474 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1120 476 rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1122 478 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 1126 480 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 1130 482 rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1136 484 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 1149 block B25 null  <||@
  Comment 1149 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1149 522 NOP  <||@
  Comment 1150 524 NOP  <||@
  Comment 1151 526 NOP  <||@
  Comment 1152 528 NOP  <||@
  Comment 1153 530 NOP  <||@
  Comment 1154 532 NOP  <||@
  Comment 1155 534 NOP  <||@
  Comment 1156 536 NOP  <||@
  Comment 1157 538 NOP  <||@
  Comment 1158 540 NOP  <||@
  Comment 1159 542 NOP  <||@
  Comment 1160 544 NOP  <||@
  Comment 1161 546 NOP  <||@
  Comment 1162 548 NOP  <||@
  Comment 1163 550 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1170 552 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0  <||@
  Comment 1179 554 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0  <||@
  Comment 1188 556 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0  <||@
  Comment 1197 558 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 1204 560 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1204 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1212 562 MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1216 564 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 1220 566 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1233 block B26 null  <||@
  Comment 1233 568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1233 570 NOP  <||@
  Comment 1234 572 NOP  <||@
  Comment 1235 574 NOP  <||@
  Comment 1236 576 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1243 578 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 1248 block B28 loop 0 depth 1 header:815|LoopBegin  <||@
  Comment 1248 592 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1248 594 NOP  <||@
  Comment 1249 596 NOP  <||@
  Comment 1250 598 NOP  <||@
  Comment 1251 600 NOP  <||@
  Comment 1252 602 NOP  <||@
  Comment 1253 604 NOP  <||@
  Comment 1254 606 NOP  <||@
  Comment 1255 608 MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1263 610 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 1267 612 JUMP ~outgoingValues: [] destination: B28 -> B27  <||@
  Comment 1267 block B27 loop 0 depth 1 header:815|LoopBegin  <||@
  Comment 1267 580 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1267 582 NOP  <||@
  Comment 1268 584 NOP  <||@
  Comment 1269 586 NOP  <||@
  Comment 1270 588 NOP  <||@
  Comment 1271 590 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 1276 block B29 null  <||@
  Comment 1276 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1276 616 NOP  <||@
  Comment 1277 618 NOP  <||@
  Comment 1278 620 NOP  <||@
  Comment 1279 622 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 1279 block B31 null  <||@
  Comment 1279 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1279 652 NOP  <||@
  Comment 1280 654 NOP  <||@
  Comment 1281 656 NOP  <||@
  Comment 1282 658 NOP  <||@
  Comment 1283 660 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1283 662 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 1283 block B32 null  <||@
  Comment 1283 664 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1283 666 NOP  <||@
  Comment 1284 668 NOP  <||@
  Comment 1285 670 NOP  <||@
  Comment 1286 672 NOP  <||@
  Comment 1287 674 NOP  <||@
  Comment 1288 676 NOP  <||@
  Comment 1289 678 NOP  <||@
  Comment 1290 680 rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1295 682 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1297 684 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 1300 686 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 1308 block B34 null  <||@
  Comment 1308 700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 702 NOP  <||@
  Comment 1309 704 NOP  <||@
  Comment 1310 706 NOP  <||@
  Comment 1311 708 NOP  <||@
  Comment 1312 710 NOP  <||@
  Comment 1313 712 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1315 714 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 1324 block B36 null  <||@
  Comment 1324 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1324 730 NOP  <||@
  Comment 1325 732 NOP  <||@
  Comment 1326 734 NOP  <||@
  Comment 1327 736 NOP  <||@
  Comment 1328 738 CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD  <||@
  Comment 1336 block B39 null  <||@
  Comment 1336 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1336 776 NOP  <||@
  Comment 1337 778 NOP  <||@
  Comment 1338 780 NOP  <||@
  Comment 1339 782 NOP  <||@
  Comment 1340 784 NOP  <||@
  Comment 1341 786 NOP  <||@
  Comment 1342 788 NOP  <||@
  Comment 1343 790 NOP  <||@
  Comment 1344 792 NOP  <||@
  Comment 1345 794 NOP  <||@
  Comment 1346 796 NOP  <||@
  Comment 1347 798 NOP  <||@
  Comment 1348 800 NOP  <||@
  Comment 1349 802 NOP  <||@
  Comment 1350 804 NOP  <||@
  Comment 1351 806 NOP  <||@
  Comment 1352 808 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1352 810 rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 812 r11|QWORD = MOV value: r11|DWORD size: DWORD  <||@
  Comment 1358 814 r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1361 816 rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD  <||@
  Comment 1366 818 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1370 820 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 1373 822 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1378 824 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1378 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 1383 828 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1383 block B40 null  <||@
  Comment 1383 830 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1383 426 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1388 832 NOP  <||@
  Comment 1389 834 NOP  <||@
  Comment 1390 836 NOP  <||@
  Comment 1391 838 NOP  <||@
  Comment 1392 840 NOP  <||@
  Comment 1393 842 NOP  <||@
  Comment 1394 844 NOP  <||@
  Comment 1395 846 NOP  <||@
  Comment 1396 848 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1403 850 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1407 852 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD  <||@
  Comment 1420 block B42 null  <||@
  Comment 1420 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1420 886 NOP  <||@
  Comment 1421 888 NOP  <||@
  Comment 1422 890 NOP  <||@
  Comment 1423 892 NOP  <||@
  Comment 1424 894 NOP  <||@
  Comment 1425 896 NOP  <||@
  Comment 1426 898 NOP  <||@
  Comment 1427 900 NOP  <||@
  Comment 1428 902 NOP  <||@
  Comment 1429 904 NOP  <||@
  Comment 1430 906 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1437 908 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 1444 910 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1451 912 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1451 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1458 914 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1465 916 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1473 918 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1473 920 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 1473 block B43 null  <||@
  Comment 1473 922 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1473 924 NOP  <||@
  Comment 1474 926 NOP  <||@
  Comment 1475 928 NOP  <||@
  Comment 1476 930 NOP  <||@
  Comment 1477 932 NOP  <||@
  Comment 1478 934 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 1482 936 MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1486 938 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1489 940 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1494 942 JUMP ~outgoingValues: [] destination: B43 -> B48  <||@
  Comment 1499 block B61 null  <||@
  Comment 1499 1622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1499 1624 NOP  <||@
  Comment 1500 1626 NOP  <||@
  Comment 1501 1628 NOP  <||@
  Comment 1502 1630 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1507 block B49 null  <||@
  Comment 1507 1088 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1507 1090 NOP  <||@
  Comment 1508 1092 NOP  <||@
  Comment 1509 1094 NOP  <||@
  Comment 1510 1096 NOP  <||@
  Comment 1511 1098 NOP  <||@
  Comment 1512 1100 NOP  <||@
  Comment 1513 1102 NOP  <||@
  Comment 1514 1104 rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1521 1106 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 1525 1108 CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD  <||@
  Comment 1534 block B50 null  <||@
  Comment 1534 1110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1534 1112 NOP  <||@
  Comment 1535 1114 NOP  <||@
  Comment 1536 1116 NOP  <||@
  Comment 1537 1118 NOP  <||@
  Comment 1538 1120 NOP  <||@
  Comment 1539 1122 NOP  <||@
  Comment 1540 1124 r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1548 1126 rcx|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 1553 1128 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1561 block B52 null  <||@
  Comment 1561 1154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1561 1156 NOP  <||@
  Comment 1562 1158 NOP  <||@
  Comment 1563 1160 NOP  <||@
  Comment 1564 1162 NOP  <||@
  Comment 1565 1164 NOP  <||@
  Comment 1566 1166 MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1573 1168 MEMBAR barriers: 4  <||@
  Comment 1578 1170 JUMP ~outgoingValues: [] destination: B52 -> B57  <||@
  Comment 1583 block B73 null  <||@
  Comment 1583 1836 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1583 1838 NOP  <||@
  Comment 1584 1840 NOP  <||@
  Comment 1585 1842 NOP  <||@
  Comment 1586 1844 JUMP ~outgoingValues: [] destination: B73 -> B74  <||@
  Comment 1591 block B22 null  <||@
  Comment 1591 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1591 442 NOP  <||@
  Comment 1592 444 NOP  <||@
  Comment 1593 446 NOP  <||@
  Comment 1594 448 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1599 block B17 null  <||@
  Comment 1599 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 274 NOP  <||@
  Comment 1600 276 NOP  <||@
  Comment 1601 278 NOP  <||@
  Comment 1602 280 NOP  <||@
  Comment 1603 282 NOP  <||@
  Comment 1604 284 NOP  <||@
  Comment 1605 286 NOP  <||@
  Comment 1606 288 NOP  <||@
  Comment 1607 290 NOP  <||@
  Comment 1608 292 NOP  <||@
  Comment 1609 294 NOP  <||@
  Comment 1610 296 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1617 298 r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1620 300 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 1624 302 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1628 304 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1634 306 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD  <||@
  Comment 1647 block B19 null  <||@
  Comment 1647 340 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1647 342 NOP  <||@
  Comment 1648 344 NOP  <||@
  Comment 1649 346 NOP  <||@
  Comment 1650 348 NOP  <||@
  Comment 1651 350 NOP  <||@
  Comment 1652 352 NOP  <||@
  Comment 1653 354 NOP  <||@
  Comment 1654 356 NOP  <||@
  Comment 1655 358 NOP  <||@
  Comment 1656 360 NOP  <||@
  Comment 1657 362 NOP  <||@
  Comment 1658 364 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1665 366 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1673 368 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1681 370 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1689 372 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1696 374 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1696 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1703 376 MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1706 378 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1706 380 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 1706 block B20 null  <||@
  Comment 1706 382 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1706 384 NOP  <||@
  Comment 1707 386 NOP  <||@
  Comment 1708 388 NOP  <||@
  Comment 1709 390 NOP  <||@
  Comment 1710 392 NOP  <||@
  Comment 1711 394 NOP  <||@
  Comment 1712 396 NOP  <||@
  Comment 1713 398 NOP  <||@
  Comment 1714 400 NOP  <||@
  Comment 1715 402 NOP  <||@
  Comment 1716 404 NOP  <||@
  Comment 1717 406 NOP  <||@
  Comment 1718 408 NOP  <||@
  Comment 1719 410 NOP  <||@
  Comment 1720 412 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1720 414 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1723 416 stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 418 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 1732 420 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1736 422 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 1739 424 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1739 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1744 428 JUMP ~outgoingValues: [] destination: B20 -> B40  <||@
  Comment 1749 block B10 null  <||@
  Comment 1749 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1749 174 NOP  <||@
  Comment 1750 176 NOP  <||@
  Comment 1751 178 NOP  <||@
  Comment 1752 180 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 1757 block B41 null  <||@
  Comment 1757 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1757 856 NOP  <||@
  Comment 1758 858 NOP  <||@
  Comment 1759 860 NOP  <||@
  Comment 1760 862 NOP  <||@
  Comment 1761 864 NOP  <||@
  Comment 1762 866 NOP  <||@
  Comment 1763 868 NOP  <||@
  Comment 1764 870 NOP  <||@
  Comment 1765 872 NOP  <||@
  Comment 1766 874 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1766 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1776 876 rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1779 878 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12]  <||@
  Comment 1779 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1784 [r10:0, stack:32]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1792 880 NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12]  <||@
  Comment 1792 [rax:0, r10:0, stack:32]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1792 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1794 882 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 1799 block B14 null  <||@
  Comment 1799 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1799 228 NOP  <||@
  Comment 1800 230 NOP  <||@
  Comment 1801 232 NOP  <||@
  Comment 1802 234 NOP  <||@
  Comment 1803 236 NOP  <||@
  Comment 1804 238 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""]  <||@
  Comment 1804 {Object[String:""]}  <||@
  Comment 1814 240 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 242 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1822 244 JUMP ~outgoingValues: [] destination: B14 -> B48  <||@
  Comment 1827 block B24 null  <||@
  Comment 1827 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1827 488 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1827 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1837 490 NOP  <||@
  Comment 1838 492 NOP  <||@
  Comment 1839 494 NOP  <||@
  Comment 1840 496 NOP  <||@
  Comment 1841 498 NOP  <||@
  Comment 1842 500 NOP  <||@
  Comment 1843 502 NOP  <||@
  Comment 1844 504 NOP  <||@
  Comment 1845 506 NOP  <||@
  Comment 1846 508 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1848 510 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12]  <||@
  Comment 1848 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1853 [r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1861 512 NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12]  <||@
  Comment 1861 [rax:0, r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1861 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1863 514 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 516 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 518 JUMP ~outgoingValues: [] destination: B24 -> B32  <||@
  Comment 1876 block B30 null  <||@
  Comment 1876 624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1876 626 NOP  <||@
  Comment 1877 628 NOP  <||@
  Comment 1878 630 NOP  <||@
  Comment 1879 632 NOP  <||@
  Comment 1880 634 NOP  <||@
  Comment 1881 636 NOP  <||@
  Comment 1882 638 NOP  <||@
  Comment 1883 640 NOP  <||@
  Comment 1884 642 NOP  <||@
  Comment 1885 644 ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1895 646 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 648 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 1905 block B18 null  <||@
  Comment 1905 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1905 310 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1905 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1915 312 NOP  <||@
  Comment 1916 314 NOP  <||@
  Comment 1917 316 NOP  <||@
  Comment 1918 318 NOP  <||@
  Comment 1919 320 NOP  <||@
  Comment 1920 322 NOP  <||@
  Comment 1921 324 NOP  <||@
  Comment 1922 326 NOP  <||@
  Comment 1923 328 NOP  <||@
  Comment 1924 330 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1926 332 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12]  <||@
  Comment 1926 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1931 [r9:0, r10:0, stack:32]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1939 334 NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12]  <||@
  Comment 1939 [rax:0, r9:0, r10:0, stack:32]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1939 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1941 336 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1944 338 JUMP ~outgoingValues: [] destination: B18 -> B20  <||@
  Comment 1949 block B65 null  <||@
  Comment 1949 1682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1949 1684 NOP  <||@
  Comment 1950 1686 NOP  <||@
  Comment 1951 1688 NOP  <||@
  Comment 1952 1690 NOP  <||@
  Comment 1953 1692 NOP  <||@
  Comment 1954 1694 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1962 1696 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD  <||@
  Comment 1971 block B66 null  <||@
  Comment 1971 1698 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1971 1700 NOP  <||@
  Comment 1972 1702 NOP  <||@
  Comment 1973 1704 NOP  <||@
  Comment 1974 1706 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1979 1708 JUMP ~outgoingValues: [] destination: B66 -> B74  <||@
  Comment 1984 block B67 null  <||@
  Comment 1984 1710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1984 1712 NOP  <||@
  Comment 1985 1714 NOP  <||@
  Comment 1986 1716 NOP  <||@
  Comment 1987 1718 NOP  <||@
  Comment 1988 1720 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null  <||@
  Comment 2003 block B68 null  <||@
  Comment 2003 1722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2003 1724 NOP  <||@
  Comment 2004 1726 NOP  <||@
  Comment 2005 1728 NOP  <||@
  Comment 2006 1730 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 1732 JUMP ~outgoingValues: [] destination: B68 -> B74  <||@
  Comment 2016 block B53 null  <||@
  Comment 2016 1172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2016 1174 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 1176 NOP  <||@
  Comment 2022 1178 NOP  <||@
  Comment 2023 1180 NOP  <||@
  Comment 2024 1182 NOP  <||@
  Comment 2025 1184 NOP  <||@
  Comment 2026 1186 NOP  <||@
  Comment 2027 1188 NOP  <||@
  Comment 2028 1190 NOP  <||@
  Comment 2029 1192 NOP  <||@
  Comment 2030 1194 NOP  <||@
  Comment 2031 1196 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 1198 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2039 1200 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2044 1202 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17]  <||@
  Comment 2047 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 2047 INVOKESPECIAL  <||@
  Comment 2052 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:56|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2060 1204 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 2068 block B54 null  <||@
  Comment 2068 1206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2068 1208 NOP  <||@
  Comment 2069 1210 NOP  <||@
  Comment 2070 1212 NOP  <||@
  Comment 2071 1214 NOP  <||@
  Comment 2072 1216 NOP  <||@
  Comment 2073 1218 NOP  <||@
  Comment 2074 1220 NOP  <||@
  Comment 2075 1222 NOP  <||@
  Comment 2076 1224 NOP  <||@
  Comment 2077 1226 NOP  <||@
  Comment 2078 1228 NOP  <||@
  Comment 2079 1230 NOP  <||@
  Comment 2080 1232 NOP  <||@
  Comment 2081 1234 NOP  <||@
  Comment 2082 1236 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2087 1238 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2094 1240 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2099 1242 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2105 1244 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2111 1246 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2116 1248 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2124 1250 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17]  <||@
  Comment 2127 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 2127 INVOKESPECIAL  <||@
  Comment 2132 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2140 1252 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2145 1254 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 1256 JUMP ~outgoingValues: [] destination: B54 -> B57  <||@
  Comment 2155 block B55 null  <||@
  Comment 2155 1258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2155 1260 NOP  <||@
  Comment 2156 1262 NOP  <||@
  Comment 2157 1264 NOP  <||@
  Comment 2158 1266 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2163 1268 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2168 1270 JUMP ~outgoingValues: [] destination: B55 -> B57  <||@
  Comment 2173 block B44 null  <||@
  Comment 2173 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2173 946 NOP  <||@
  Comment 2174 948 NOP  <||@
  Comment 2175 950 NOP  <||@
  Comment 2176 952 NOP  <||@
  Comment 2177 954 NOP  <||@
  Comment 2178 956 NOP  <||@
  Comment 2179 958 NOP  <||@
  Comment 2180 960 NOP  <||@
  Comment 2181 962 NOP  <||@
  Comment 2182 964 NOP  <||@
  Comment 2183 966 rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 968 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2189 970 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2191 972 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12]  <||@
  Comment 2191 {HotSpotMethod<StringUTF16.newString(byte[], int, int)>}  <||@
  Comment 2191 INVOKESTATIC  <||@
  Comment 2196 [stack:32]at java.lang.String.substring(String.java:2840) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 2204 974 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2207 976 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 978 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 2217 block B69 null  <||@
  Comment 2217 1734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2217 1736 NOP  <||@
  Comment 2218 1738 NOP  <||@
  Comment 2219 1740 NOP  <||@
  Comment 2220 1742 NOP  <||@
  Comment 2221 1744 NOP  <||@
  Comment 2222 1746 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 2229 1748 stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 1750 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 2239 block B71 loop 1 depth 1 header:315|LoopBegin  <||@
  Comment 2239 1786 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2240 1788 NOP  <||@
  Comment 2241 1790 NOP  <||@
  Comment 2242 1792 NOP  <||@
  Comment 2243 1794 NOP  <||@
  Comment 2244 1796 NOP  <||@
  Comment 2245 1798 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17]  <||@
  Comment 2252 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5         
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r11|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |          
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2252 {infopoint: SAFEPOINT}  <||@
  Comment 2252 POLL_FAR  <||@
  Comment 2255 1800 JUMP ~outgoingValues: [] destination: B71 -> B70  <||@
  Comment 2255 block B70 loop 1 depth 1 header:315|LoopBegin  <||@
  Comment 2255 1752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2255 1754 NOP  <||@
  Comment 2256 1756 NOP  <||@
  Comment 2257 1758 NOP  <||@
  Comment 2258 1760 NOP  <||@
  Comment 2259 1762 NOP  <||@
  Comment 2260 1764 NOP  <||@
  Comment 2261 1766 NOP  <||@
  Comment 2262 1768 NOP  <||@
  Comment 2263 1770 NOP  <||@
  Comment 2264 1772 NOP  <||@
  Comment 2265 1774 NOP  <||@
  Comment 2266 1776 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 2274 1778 r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD  <||@
  Comment 2281 1780 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2284 1782 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD  <||@
  Comment 2294 1784 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 2296 block B72 null  <||@
  Comment 2296 1802 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2296 1804 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2301 1806 NOP  <||@
  Comment 2302 1808 NOP  <||@
  Comment 2303 1810 NOP  <||@
  Comment 2304 1812 NOP  <||@
  Comment 2305 1814 NOP  <||@
  Comment 2306 1816 NOP  <||@
  Comment 2307 1818 NOP  <||@
  Comment 2308 1820 NOP  <||@
  Comment 2309 1822 NOP  <||@
  Comment 2310 1824 NOP  <||@
  Comment 2311 1826 rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 2319 1828 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 2323 1830 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17]  <||@
  Comment 2323 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 2323 INVOKESTATIC  <||@
  Comment 2328 [stack:8, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2336 1832 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2341 1834 JUMP ~outgoingValues: [] destination: B72 -> B74  <||@
  Comment 2346 block B46 null  <||@
  Comment 2346 992 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2346 994 NOP  <||@
  Comment 2347 996 NOP  <||@
  Comment 2348 998 NOP  <||@
  Comment 2349 1000 NOP  <||@
  Comment 2350 1002 NOP  <||@
  Comment 2351 1004 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"]  <||@
  Comment 2351 {Object[String:"null"]}  <||@
  Comment 2361 1006 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2366 1008 JUMP ~outgoingValues: [] destination: B46 -> B48  <||@
  Comment 2371 block B4 null  <||@
  Comment 2371 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2371 84 NOP  <||@
  Comment 2372 86 NOP  <||@
  Comment 2373 88 NOP  <||@
  Comment 2374 90 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2381 92 r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 2387 96 JUMP ~outgoingValues: [] destination: B4 -> B78  <||@
  Comment 2387 block B78 null  <||@
  Comment 2387 1934 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2387 1930 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2392 1936 NOP  <||@
  Comment 2393 1938 NOP  <||@
  Comment 2394 1940 NOP  <||@
  Comment 2395 1942 NOP  <||@
  Comment 2396 1944 NOP  <||@
  Comment 2397 1946 NOP  <||@
  Comment 2398 1948 NOP  <||@
  Comment 2399 1950 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 2406 1952 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2413 1954 DEOPT info [bci:0]  <||@
  Comment 2413 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2418 [rsi:0, r10:0]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 2426 block B51 null  <||@
  Comment 2426 1130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2426 1132 rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2431 1134 NOP  <||@
  Comment 2432 1136 NOP  <||@
  Comment 2433 1138 NOP  <||@
  Comment 2434 1140 NOP  <||@
  Comment 2435 1142 NOP  <||@
  Comment 2436 1144 NOP  <||@
  Comment 2437 1146 NOP  <||@
  Comment 2438 1148 MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD  <||@
  Comment 2449 1150 MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD  <||@
  Comment 2460 1152 DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17]  <||@
  Comment 2460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2465 [rax:0, r8:0, r10:0, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r11|DWORD    |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0           
     locals:  |r8|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1             |2  |3 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2473 block B35 null  <||@
  Comment 2473 716 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2473 718 NOP  <||@
  Comment 2474 720 NOP  <||@
  Comment 2475 722 NOP  <||@
  Comment 2476 724 r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7]  <||@
  Comment 2482 726 JUMP ~outgoingValues: [] destination: B35 -> B38  <||@
  Comment 2482 block B38 null  <||@
  Comment 2482 752 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2482 754 NOP  <||@
  Comment 2483 756 NOP  <||@
  Comment 2484 758 NOP  <||@
  Comment 2485 760 NOP  <||@
  Comment 2486 762 NOP  <||@
  Comment 2487 764 NOP  <||@
  Comment 2488 766 NOP  <||@
  Comment 2489 768 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2496 770 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2507 772 DEOPT info [bci:10, 16, 41, 3, 12]  <||@
  Comment 2507 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2512 [r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 2520 block B2 null  <||@
  Comment 2520 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2520 56 NOP  <||@
  Comment 2521 58 NOP  <||@
  Comment 2522 60 NOP  <||@
  Comment 2523 62 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2530 64 r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded]  <||@
  Comment 2536 68 JUMP ~outgoingValues: [] destination: B2 -> B78  <||@
  Comment 2541 block B37 null  <||@
  Comment 2541 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2541 742 NOP  <||@
  Comment 2542 744 NOP  <||@
  Comment 2543 746 NOP  <||@
  Comment 2544 748 r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7]  <||@
  Comment 2550 750 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 2552 block B33 null  <||@
  Comment 2552 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2552 690 NOP  <||@
  Comment 2553 692 NOP  <||@
  Comment 2554 694 NOP  <||@
  Comment 2555 696 r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7]  <||@
  Comment 2561 698 JUMP ~outgoingValues: [] destination: B33 -> B38  <||@
  Comment 2563 block B77 null  <||@
  Comment 2563 1918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2563 1920 NOP  <||@
  Comment 2564 1922 NOP  <||@
  Comment 2565 1924 NOP  <||@
  Comment 2566 1926 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2573 1928 r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd]  <||@
  Comment 2579 1932 JUMP ~outgoingValues: [] destination: B77 -> B78  <||@
  Comment 2584 block B6 null  <||@
  Comment 2584 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2584 124 NOP  <||@
  Comment 2585 126 NOP  <||@
  Comment 2586 128 NOP  <||@
  Comment 2587 130 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2594 132 r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed]  <||@
  Comment 2600 136 JUMP ~outgoingValues: [] destination: B6 -> B78  <||@
  Comment 2605 block B75 null  <||@
  Comment 2605 1868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2605 1870 NOP  <||@
  Comment 2606 1872 NOP  <||@
  Comment 2607 1874 NOP  <||@
  Comment 2608 1876 NOP  <||@
  Comment 2609 1878 NOP  <||@
  Comment 2610 1880 NOP  <||@
  Comment 2611 1882 NOP  <||@
  Comment 2612 1884 NOP  <||@
  Comment 2613 1886 NOP  <||@
  Comment 2614 1888 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 2618 1890 MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD  <||@
  Comment 2629 1892 MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD  <||@
  Comment 2640 1894 DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17]  <||@
  Comment 2640 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2645 [rax:0, rdx:0, r10:0, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2653 block B76 null  <||@
  Comment 2653 1896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2653 1898 NOP  <||@
  Comment 2654 1900 NOP  <||@
  Comment 2655 1902 NOP  <||@
  Comment 2656 1904 NOP  <||@
  Comment 2657 1906 NOP  <||@
  Comment 2658 1908 NOP  <||@
  Comment 2659 1910 NOP  <||@
  Comment 2660 1912 MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD  <||@
  Comment 2671 1914 MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD  <||@
  Comment 2682 1916 DEOPT info [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 2682 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2687 [stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2700 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2715 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2730 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2745 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2770 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2798 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2803 [rsi:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 2833 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2838 [rsi:0, r9:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 2868 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2873 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2903 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2908 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2938 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2943 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2973 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2978 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3008 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3013 [rax:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3043 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3048 [rax:0, rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3078 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3083 [rax:0, r10:0, stack:32]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 3113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3118 [rax:0, r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 3148 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3153 [rax:0, r9:0, r10:0, stack:32]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 3161 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3161 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3167 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9638[java.io.PrintStream.append(CharSequence, int, int)]"
  method "HotSpotCompilation-9638[java.io.PrintStream.append(CharSequence, int, int)]"
  date 1724269760993
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af3da40 448b560849bc0000002b787f00004d03d44d33e4493bc20f85237684fe66669089842400c0feff4883ec389041817f20000000000f854d0a00009090909090909090909048896c243048897424204c8bd2448bd941817a08d8e800000f85a1090000909090909090458b4a14428b1ccd0c0000004585db0f8c5b09000090909090453bd80f8fb908000090909090909090410fbe7a108bcf8bd3d3ea443bc20f8f73090000909090904585db0f855503000090909090413bd00f8516060000909090909090904d85d20f845b08000090909090909090909090909090909090909090909090908b46188b14c50c0000008b14d50c0000008504d5000000004d8b9f800300004d8b1b448bc249c1e00348c1e0034889442418b800000000b901000000f00fb10cd5100000000f85b2040000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f84310000008b1cd50c00000048c1e3034885db0f841d000000498b4f284883f9000f84010900004883e90849894f2849034f38488919498bcb48c1e903890cd50c000000498bd04933d348c1ea160f8442000000498bd048c1ea0948b900e0368d787f00004803d1803a027429f083042400803a00741fc60200498b4f484885c90f84b00800004883e90849894f4849034f584889119090909090909090909090909090909090909090909090909090909090909090909090908b56248504d500000000448b5e10438504dc48c1e203488bf2498bd24c8954241090e8f07684fe0f1f840080040007488b742420448b5624428504d50000000049c1e203498bf2666690e8c87684fe0f1f8400a8040009488b742420448b5628468b14d514000000428504d50000000049c1e203498bf2666690e8987684fe0f1f8400d804000c488b7424208b46188b14c50c000000448b14d50c000000428504d500000000807e0d000f858407000090909090909090909090909090468b1cd510000000428b0cd50c000000498bbf8003000048c1e10348c1e20348c1e003483b0f0f851b070000909090904183fb010f85bb020000909090909090909090909090909090909041807f40000f8432000000428b3cd50c00000048c1e7034885ff0f841d000000498b4f284883f9000f84560700004883e90849894f2849034f3848893942c704d50c0000000000000090909090909090418bcbffc942890cd510000000f0830424004183fb010f85920200009090909090468b14d5140000004585d20f85ea0300009090909090909090909090488bc6488b6c24304883c438493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f87c1060000c5f877c39090909090909090909049c1e103418be8412beb85ff0f855a04000090909090453bc30f84d702000090909090904585db0f85f901000090909090413bd80f84f401000090909090909090909090909090904d8b97b80100008bfd488d7f174883e7f8488bd74903d2493b97c80100000f87a60200009090909090909090909090909090498997b8010000420f18841700010000420f18841740010000420f1884178001000049c7020100000041c74208c022000041896a0c488d4ff04881f9000800000f838302000090909048c7c210000000e9130000009090909090909049c7041200000000488d520890909090483bfa77e490909090909090909090909090908bfb412bfb3bfd0f4ffd85ff0f8cdc04000090909090902bdf443bdb0f8f7d040000909090903bfd0f87b504000090909090909090909090909090909090498bd2458bdb448bc74b8d7c1910488d7210498bd04c89542418e859be82fe4c8b5424189090909090909090498b87b8010000488d7018493bb7c80100000f8751010000909090909090909090904989b7b80100000f18801801000048c70001000000c74008d8e80000c7400c0000000048c7401000000000909090909049c1ea03448950144c8bd0488b742420e9f7faffff909090e997fdffff909090909090908b0cd50c00000048c1e1034c3bd90f85e2010000909090909090448b1cd510000000418bcbffc185c90f8c610300009090909090890cd510000000f083042400e9d6fbffff909090e97ffdffff909090e90ffeffff9090909090909090909090498bbfb8010000448bdb498d73174883e6f8488bd64803d7493b97c80100000f87020100009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c0220000895f0c9090909090909090909090909090488bf748897c2418498d7910488d7610498bd3e830bc82fee992feffff909090e92dfdffff90909090909090909048b8d8e8002b787f0000488bf0e848a199fe0f1f8400000000008500e9bafeffff909090909048be0000c0ff070000004c8bd6488b742420e9aff9ffff48bec022002b787f00009090909090909090908bd5e8830a99fe0f1f84000000000085004c8bd0488b742420e9affdffff909090909090909090498d7a104833c0f348aa488b742420e98efdffff48bec022002b787f00009090909090909090908bd3e8350a99fe0f1f8400000000008500488bf8e90dffffff9090909090468b14d5140000004585d20f850d000000909090488b742420e9f6fbffff9090909042833cd50c000000000f85d6000000909090488b742420e9d6fbffff4c8954241090909090909090909090498bf0ba010000004c89442408666690e83c7184fe0f1f8400340a001685c00f85570000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8ec7084fe0f1f8400840a00174c8b542410488b742420e99af9ffff9090904c8b542410488b742420e988f9ffff90909090909090909090498bf1418bd38bcde8ac7684fe0f1f8400c40a00184c8bd0488b742420e919f8ffff9090909090418bf248c1e6034889442418e9100000009090909090904d8b87580400004185009090909090909090909090468b1cd50c000000458bc34183e0fe418bc3f0460fb104d50c00000075c8488954240890909090909090909090428b34d51800000048c1e603e8287684fe0f1f8400480b001a488b742420e98cfaffff909090909049ba10b9c4ff07000000488b742420e98ff7ffff90909048c7c11405000041b9eda9fdff488b7424209090909090909045898f8404000049898f90040000e8c8cd84fe0f1f840000000000488b4424189090909090909041c78784040000ed90fdff49c78790040000940c0000e899cd84fe0f1f84000000000090909041bae782fdff909090909090904589978404000049c7879004000000000000e86acd84fe0f1f84000000000090909048c7c11405000041b9edadfdffe966ffffff90909041bae77efdffebba90909041bae786fdffebaf90909048c7c19402000041b9cda6feffe93bffffff90909048c7c11405000041b9eda5fdffe926ffffff90909090909090909049c1e20341c78784040000ed95fdff49c7879004000094340000e8e5cc84fe0f1f8400000000009090909090909041c78784040000ed99fdff49c78790040000942a0000e8bbcc84fe0f1f84000000000048896c2430e84fcd82fee9a4f5fffff448891c24e8209d98fee900f7fffff448891424e891be98fee951f7fffff448893c24e8029d98fee9abf8fffff4488d0d2bf9ffff49898f68040000e9e9da84fef441c78784040000edb1fdff49c7879004000014000000e847cc84fe0f1f84000000000041c78784040000f5a0feff49c7879004000000000000e824cc84fe0f1f84000000000041c78784040000eda1fdff49c78790040000140a0000e801cc84fe0f1f84000000000041c78784040000f568feff49c7879004000000000000e8decb84fe0f1f84000000000041c78784040000ed9dfdff49c78790040000142d0000e8bbcb84fe0f1f84000000000041c78784040000f54cfeff49c7879004000000000000e898cb84fe0f1f84000000000041c78784040000f53efeff49c7879004000000000000e875cb84fe0f1f84000000000041c78784040000f53afeff49c7879004000000000000e852cb84fe0f1f84000000000041c787840400008f6bfcff49c7879004000000000000e82fcb84fe0f1f84000000000041c787840400008fa0fcff49c7879004000000000000e80ccb84fe0f1f84000000000041c787840400008ff0fcff49c7879004000000000000e8e9ca84fe0f1f840000000000e8626c98fef4e87cc884fef4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6409de58 slotKind: QWORD  <||@
  Comment 73 26 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 78 28 r10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 81 30 r11|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 84 32 CMPCONSTBRANCH x: [r10|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B77 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 84 [rsi:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 98 block B1 null  <||@
  Comment 98 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 98 36 NOP  <||@
  Comment 99 38 NOP  <||@
  Comment 100 40 NOP  <||@
  Comment 101 42 NOP  <||@
  Comment 102 44 NOP  <||@
  Comment 103 46 NOP  <||@
  Comment 104 48 r9|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 108 50 rbx|DWORD = MOV input: [r9|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 108 [rsi:0, r9:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 108 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 52 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 125 block B3 null  <||@
  Comment 125 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 125 72 NOP  <||@
  Comment 126 74 NOP  <||@
  Comment 127 76 NOP  <||@
  Comment 128 78 NOP  <||@
  Comment 129 80 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 138 block B5 null  <||@
  Comment 138 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 138 100 NOP  <||@
  Comment 139 102 NOP  <||@
  Comment 140 104 NOP  <||@
  Comment 141 106 NOP  <||@
  Comment 142 108 NOP  <||@
  Comment 143 110 NOP  <||@
  Comment 144 112 NOP  <||@
  Comment 145 114 rdi|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 150 116 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 152 118 rdx|DWORD = SHR (x: rbx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 156 120 CMPBRANCH (x: r8|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 165 block B7 null  <||@
  Comment 165 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 140 NOP  <||@
  Comment 166 142 NOP  <||@
  Comment 167 144 NOP  <||@
  Comment 168 146 NOP  <||@
  Comment 169 148 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6018906262441794 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B11 size: DWORD  <||@
  Comment 178 block B8 null  <||@
  Comment 178 150 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 152 NOP  <||@
  Comment 179 154 NOP  <||@
  Comment 180 156 NOP  <||@
  Comment 181 158 NOP  <||@
  Comment 182 160 CMPBRANCH (x: rdx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9663721533267153 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 191 block B9 null  <||@
  Comment 191 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 191 164 NOP  <||@
  Comment 192 166 NOP  <||@
  Comment 193 168 NOP  <||@
  Comment 194 170 JUMP ~outgoingValues: [] destination: B9 -> B45  <||@
  Comment 194 block B45 null  <||@
  Comment 194 980 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 194 982 NOP  <||@
  Comment 195 984 NOP  <||@
  Comment 196 986 NOP  <||@
  Comment 197 988 NOP  <||@
  Comment 198 990 TESTBRANCH (x: r10|QWORD[.], y: r10|QWORD[.]) trueDestinationProbability: 8.586421690326418E-7 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: QWORD  <||@
  Comment 207 block B47 null  <||@
  Comment 207 1010 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 207 1012 NOP  <||@
  Comment 208 1014 NOP  <||@
  Comment 209 1016 NOP  <||@
  Comment 210 1018 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 210 block B48 null  <||@
  Comment 210 1020 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 210 1022 NOP  <||@
  Comment 211 1024 NOP  <||@
  Comment 212 1026 NOP  <||@
  Comment 213 1028 NOP  <||@
  Comment 214 1030 NOP  <||@
  Comment 215 1032 NOP  <||@
  Comment 216 1034 NOP  <||@
  Comment 217 1036 NOP  <||@
  Comment 218 1038 NOP  <||@
  Comment 219 1040 NOP  <||@
  Comment 220 1042 NOP  <||@
  Comment 221 1044 NOP  <||@
  Comment 222 1046 NOP  <||@
  Comment 223 1048 NOP  <||@
  Comment 224 1050 NOP  <||@
  Comment 225 1052 NOP  <||@
  Comment 226 1054 NOP  <||@
  Comment 227 1056 NOP  <||@
  Comment 228 1058 NOP  <||@
  Comment 229 1060 NOP  <||@
  Comment 230 1062 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 233 1064 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17]  <||@
  Comment 233 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 233 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 240 1066 rdx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:14, 2, 17]  <||@
  Comment 240 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 240 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 247 1068 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:14, 2, 17]  <||@
  Comment 247 [rax:0, rdx:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 247 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 254 1070 r11|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 261 1072 r11|QWORD[.] = MOV input: [r11|QWORD] size: QWORD  <||@
  Comment 264 1074 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 271 1076 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 275 1078 stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 280 1080 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 285 1082 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 290 1084 rax|DWORD = CAS (address: [rdx|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rcx|DWORD) accessKind: DWORD  <||@
  Comment 299 1086 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B48 -> B49 falseDestination: B48 -> B56  <||@
  Comment 305 block B56 null  <||@
  Comment 305 1272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 1274 NOP  <||@
  Comment 306 1276 NOP  <||@
  Comment 307 1278 NOP  <||@
  Comment 308 1280 NOP  <||@
  Comment 309 1282 NOP  <||@
  Comment 310 1284 NOP  <||@
  Comment 311 1286 NOP  <||@
  Comment 312 1288 NOP  <||@
  Comment 313 1290 NOP  <||@
  Comment 314 1292 NOP  <||@
  Comment 315 1294 NOP  <||@
  Comment 316 1296 NOP  <||@
  Comment 317 1298 NOP  <||@
  Comment 318 1300 NOP  <||@
  Comment 319 1302 NOP  <||@
  Comment 320 1304 NOP  <||@
  Comment 321 1306 NOP  <||@
  Comment 322 1308 NOP  <||@
  Comment 323 1310 NOP  <||@
  Comment 324 1312 NOP  <||@
  Comment 325 1314 NOP  <||@
  Comment 326 1316 NOP  <||@
  Comment 327 1318 NOP  <||@
  Comment 328 1320 NOP  <||@
  Comment 329 1322 NOP  <||@
  Comment 330 1324 NOP  <||@
  Comment 331 1326 NOP  <||@
  Comment 332 1328 NOP  <||@
  Comment 333 1330 NOP  <||@
  Comment 334 1332 NOP  <||@
  Comment 335 1334 NOP  <||@
  Comment 336 1336 NOP  <||@
  Comment 337 1338 NOP  <||@
  Comment 338 1340 NOP  <||@
  Comment 339 1342 NOP  <||@
  Comment 340 1344 NOP  <||@
  Comment 341 1346 NOP  <||@
  Comment 342 1348 NOP  <||@
  Comment 343 1350 NOP  <||@
  Comment 344 1352 NOP  <||@
  Comment 345 1354 NOP  <||@
  Comment 346 1356 NOP  <||@
  Comment 347 1358 NOP  <||@
  Comment 348 1360 NOP  <||@
  Comment 349 1362 NOP  <||@
  Comment 350 1364 NOP  <||@
  Comment 351 1366 NOP  <||@
  Comment 352 1368 NOP  <||@
  Comment 353 1370 NOP  <||@
  Comment 354 1372 NOP  <||@
  Comment 355 1374 NOP  <||@
  Comment 356 1376 NOP  <||@
  Comment 357 1378 NOP  <||@
  Comment 358 1380 NOP  <||@
  Comment 359 1382 NOP  <||@
  Comment 360 1384 NOP  <||@
  Comment 361 1386 AMD64G1PREWRITEBARRIER (~address: [rdx|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352  <||@
  Comment 421 1388 rcx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 428 1390 MOV (x: [rdx|DWORD[_] * 8 + 12], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 435 1392 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352  <||@
  Comment 517 1394 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 517 block B57 null  <||@
  Comment 517 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 517 1398 NOP  <||@
  Comment 518 1400 NOP  <||@
  Comment 519 1402 NOP  <||@
  Comment 520 1404 NOP  <||@
  Comment 521 1406 NOP  <||@
  Comment 522 1408 NOP  <||@
  Comment 523 1410 NOP  <||@
  Comment 524 1412 NOP  <||@
  Comment 525 1414 NOP  <||@
  Comment 526 1416 NOP  <||@
  Comment 527 1418 NOP  <||@
  Comment 528 1420 NOP  <||@
  Comment 529 1422 NOP  <||@
  Comment 530 1424 NOP  <||@
  Comment 531 1426 NOP  <||@
  Comment 532 1428 NOP  <||@
  Comment 533 1430 NOP  <||@
  Comment 534 1432 NOP  <||@
  Comment 535 1434 NOP  <||@
  Comment 536 1436 NOP  <||@
  Comment 537 1438 NOP  <||@
  Comment 538 1440 NOP  <||@
  Comment 539 1442 NOP  <||@
  Comment 540 1444 NOP  <||@
  Comment 541 1446 NOP  <||@
  Comment 542 1448 NOP  <||@
  Comment 543 1450 NOP  <||@
  Comment 544 1452 NOP  <||@
  Comment 545 1454 NOP  <||@
  Comment 546 1456 NOP  <||@
  Comment 547 1458 NOP  <||@
  Comment 548 1460 NOP  <||@
  Comment 549 1462 NOP  <||@
  Comment 550 1464 NOP  <||@
  Comment 551 1466 NOP  <||@
  Comment 552 1468 NOP  <||@
  Comment 553 1470 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 556 1472 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17]  <||@
  Comment 556 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 556 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 563 1474 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 567 1476 NULLCHECK address: [r12|QWORD[*] + r11|DWORD[_] * 8] state [bci:12, 4, 4, 11, 5, 5, 17]  <||@
  Comment 567 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 567 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 571 1478 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 575 1480 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 578 1482 rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 581 1484 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 586 1486 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Writer.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 16, 5, 5, 17]  <||@
  Comment 587 {HotSpotMethod<Writer.write(String)>}  <||@
  Comment 587 INVOKESPECIAL  <||@
  Comment 592 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:810) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 600 1488 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 605 1490 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 609 1492 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:12, 16, 5, 5, 17]  <||@
  Comment 609 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 609 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 617 1494 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 621 1496 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 624 1498 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedWriter.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:16, 16, 5, 5, 17]  <||@
  Comment 627 {HotSpotMethod<BufferedWriter.flushBuffer()>}  <||@
  Comment 627 INVOKESPECIAL  <||@
  Comment 632 [stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:811) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 640 1500 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 645 1502 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 40] size: DWORD  <||@
  Comment 649 1504 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:19, 16, 5, 5, 17]  <||@
  Comment 649 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 649 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 657 1506 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:19, 16, 5, 5, 17]  <||@
  Comment 657 [rsi:0, r10:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 657 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 665 1508 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 669 1510 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 672 1512 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 23, 16, 5, 5, 17]  <||@
  Comment 675 {HotSpotMethod<StreamEncoder.flushBuffer()>}  <||@
  Comment 675 INVOKESPECIAL  <||@
  Comment 680 [stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:192) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 688 1514 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 693 1516 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 696 1518 rdx|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 696 [rax:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 696 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 703 1520 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 703 [rax:0, rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 703 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 711 1522 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 711 [rax:0, rdx:0, rsi:0, r10:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 711 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 719 1524 CMPCONSTBRANCH x: [rsi|QWORD[.] + 13] trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B76 y: 0 size: BYTE inlinedY: null  <||@
  Comment 729 block B58 null  <||@
  Comment 729 1526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 729 1528 NOP  <||@
  Comment 730 1530 NOP  <||@
  Comment 731 1532 NOP  <||@
  Comment 732 1534 NOP  <||@
  Comment 733 1536 NOP  <||@
  Comment 734 1538 NOP  <||@
  Comment 735 1540 NOP  <||@
  Comment 736 1542 NOP  <||@
  Comment 737 1544 NOP  <||@
  Comment 738 1546 NOP  <||@
  Comment 739 1548 NOP  <||@
  Comment 740 1550 NOP  <||@
  Comment 741 1552 NOP  <||@
  Comment 742 1554 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 750 1556 rcx|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 758 1558 rdi|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 765 1560 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 769 1562 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 773 1564 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 777 1566 CMPBRANCH (x: rcx|QWORD[.], y: [rdi|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B75 size: QWORD  <||@
  Comment 786 block B59 null  <||@
  Comment 786 1568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 786 1570 NOP  <||@
  Comment 787 1572 NOP  <||@
  Comment 788 1574 NOP  <||@
  Comment 789 1576 NOP  <||@
  Comment 790 1578 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: DWORD inlinedY: null  <||@
  Comment 800 block B60 null  <||@
  Comment 800 1580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 800 1582 NOP  <||@
  Comment 801 1584 NOP  <||@
  Comment 802 1586 NOP  <||@
  Comment 803 1588 NOP  <||@
  Comment 804 1590 NOP  <||@
  Comment 805 1592 NOP  <||@
  Comment 806 1594 NOP  <||@
  Comment 807 1596 NOP  <||@
  Comment 808 1598 NOP  <||@
  Comment 809 1600 NOP  <||@
  Comment 810 1602 NOP  <||@
  Comment 811 1604 NOP  <||@
  Comment 812 1606 NOP  <||@
  Comment 813 1608 NOP  <||@
  Comment 814 1610 NOP  <||@
  Comment 815 1612 NOP  <||@
  Comment 816 1614 NOP  <||@
  Comment 817 1616 AMD64G1PREWRITEBARRIER (~address: [r10|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rcx|QWORD, temp2: rdi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@5c7ee352  <||@
  Comment 878 1618 MOV x: [r10|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 890 1620 JUMP ~outgoingValues: [] destination: B60 -> B62  <||@
  Comment 890 block B62 null  <||@
  Comment 890 1632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 890 1634 NOP  <||@
  Comment 891 1636 NOP  <||@
  Comment 892 1638 NOP  <||@
  Comment 893 1640 NOP  <||@
  Comment 894 1642 NOP  <||@
  Comment 895 1644 NOP  <||@
  Comment 896 1646 NOP  <||@
  Comment 897 1648 rcx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 902 1650 MOV (x: [r10|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 910 1652 MEMBAR barriers: 4  <||@
  Comment 915 1654 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.8679019522956164 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B73 y: 1 size: DWORD inlinedY: null  <||@
  Comment 925 block B63 null  <||@
  Comment 925 1656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 1658 NOP  <||@
  Comment 926 1660 NOP  <||@
  Comment 927 1662 NOP  <||@
  Comment 928 1664 NOP  <||@
  Comment 929 1666 NOP  <||@
  Comment 930 1668 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 938 1670 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.999301444736255 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 947 block B64 null  <||@
  Comment 947 1672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 947 1674 NOP  <||@
  Comment 948 1676 NOP  <||@
  Comment 949 1678 NOP  <||@
  Comment 950 1680 JUMP ~outgoingValues: [] destination: B64 -> B74  <||@
  Comment 950 block B74 null  <||@
  Comment 950 1846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 1848 NOP  <||@
  Comment 951 1850 NOP  <||@
  Comment 952 1852 NOP  <||@
  Comment 953 1854 NOP  <||@
  Comment 954 1856 NOP  <||@
  Comment 955 1858 NOP  <||@
  Comment 956 1860 NOP  <||@
  Comment 957 1862 NOP  <||@
  Comment 958 1864 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 961 1866 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 986 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 1002 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 1014 POLL_RETURN_FAR  <||@
  Comment 1031 block B11 null  <||@
  Comment 1031 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1031 184 NOP  <||@
  Comment 1032 186 NOP  <||@
  Comment 1033 188 NOP  <||@
  Comment 1034 190 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1034 block B12 null  <||@
  Comment 1034 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1034 194 NOP  <||@
  Comment 1035 196 NOP  <||@
  Comment 1036 198 NOP  <||@
  Comment 1037 200 NOP  <||@
  Comment 1038 202 NOP  <||@
  Comment 1039 204 NOP  <||@
  Comment 1040 206 NOP  <||@
  Comment 1041 208 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 1045 210 rbp|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1051 212 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9999787285234901 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B44 size: DWORD  <||@
  Comment 1059 block B13 null  <||@
  Comment 1059 214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 216 NOP  <||@
  Comment 1060 218 NOP  <||@
  Comment 1061 220 NOP  <||@
  Comment 1062 222 NOP  <||@
  Comment 1063 224 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.00977198389730849 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 1072 block B15 null  <||@
  Comment 1072 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1072 248 NOP  <||@
  Comment 1073 250 NOP  <||@
  Comment 1074 252 NOP  <||@
  Comment 1075 254 NOP  <||@
  Comment 1076 256 NOP  <||@
  Comment 1077 258 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.7183219228648063 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B22 size: DWORD  <||@
  Comment 1086 block B16 null  <||@
  Comment 1086 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1086 262 NOP  <||@
  Comment 1087 264 NOP  <||@
  Comment 1088 266 NOP  <||@
  Comment 1089 268 NOP  <||@
  Comment 1090 270 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.24957182022363364 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B21 size: DWORD  <||@
  Comment 1099 block B21 null  <||@
  Comment 1099 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1099 432 NOP  <||@
  Comment 1100 434 NOP  <||@
  Comment 1101 436 NOP  <||@
  Comment 1102 438 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1102 block B23 null  <||@
  Comment 1102 450 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1102 452 NOP  <||@
  Comment 1103 454 NOP  <||@
  Comment 1104 456 NOP  <||@
  Comment 1105 458 NOP  <||@
  Comment 1106 460 NOP  <||@
  Comment 1107 462 NOP  <||@
  Comment 1108 464 NOP  <||@
  Comment 1109 466 NOP  <||@
  Comment 1110 468 NOP  <||@
  Comment 1111 470 NOP  <||@
  Comment 1112 472 NOP  <||@
  Comment 1113 474 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1120 476 rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1122 478 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 1126 480 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 1130 482 rdx|QWORD = ADD (x: rdi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1136 484 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: QWORD  <||@
  Comment 1149 block B25 null  <||@
  Comment 1149 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1149 522 NOP  <||@
  Comment 1150 524 NOP  <||@
  Comment 1151 526 NOP  <||@
  Comment 1152 528 NOP  <||@
  Comment 1153 530 NOP  <||@
  Comment 1154 532 NOP  <||@
  Comment 1155 534 NOP  <||@
  Comment 1156 536 NOP  <||@
  Comment 1157 538 NOP  <||@
  Comment 1158 540 NOP  <||@
  Comment 1159 542 NOP  <||@
  Comment 1160 544 NOP  <||@
  Comment 1161 546 NOP  <||@
  Comment 1162 548 NOP  <||@
  Comment 1163 550 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1170 552 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 256] instr: 0  <||@
  Comment 1179 554 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 320] instr: 0  <||@
  Comment 1188 556 AMD64PREFETCH ~address: [rdi|QWORD + r10|QWORD * 1 + 384] instr: 0  <||@
  Comment 1197 558 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 1204 560 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1204 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1212 562 MOV (x: [r10|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1216 564 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 1220 566 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B30 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1233 block B26 null  <||@
  Comment 1233 568 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1233 570 NOP  <||@
  Comment 1234 572 NOP  <||@
  Comment 1235 574 NOP  <||@
  Comment 1236 576 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1243 578 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 1248 block B28 loop 0 depth 1 header:815|LoopBegin  <||@
  Comment 1248 592 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1248 594 NOP  <||@
  Comment 1249 596 NOP  <||@
  Comment 1250 598 NOP  <||@
  Comment 1251 600 NOP  <||@
  Comment 1252 602 NOP  <||@
  Comment 1253 604 NOP  <||@
  Comment 1254 606 NOP  <||@
  Comment 1255 608 MOV x: [r10|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1263 610 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 1267 612 JUMP ~outgoingValues: [] destination: B28 -> B27  <||@
  Comment 1267 block B27 loop 0 depth 1 header:815|LoopBegin  <||@
  Comment 1267 580 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1267 582 NOP  <||@
  Comment 1268 584 NOP  <||@
  Comment 1269 586 NOP  <||@
  Comment 1270 588 NOP  <||@
  Comment 1271 590 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 1276 block B29 null  <||@
  Comment 1276 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1276 616 NOP  <||@
  Comment 1277 618 NOP  <||@
  Comment 1278 620 NOP  <||@
  Comment 1279 622 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 1279 block B31 null  <||@
  Comment 1279 650 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1279 652 NOP  <||@
  Comment 1280 654 NOP  <||@
  Comment 1281 656 NOP  <||@
  Comment 1282 658 NOP  <||@
  Comment 1283 660 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1283 662 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 1283 block B32 null  <||@
  Comment 1283 664 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1283 666 NOP  <||@
  Comment 1284 668 NOP  <||@
  Comment 1285 670 NOP  <||@
  Comment 1286 672 NOP  <||@
  Comment 1287 674 NOP  <||@
  Comment 1288 676 NOP  <||@
  Comment 1289 678 NOP  <||@
  Comment 1290 680 rdi|DWORD = SUB (x: rbx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1295 682 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1297 684 rdi|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 1300 686 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 1308 block B34 null  <||@
  Comment 1308 700 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1308 702 NOP  <||@
  Comment 1309 704 NOP  <||@
  Comment 1310 706 NOP  <||@
  Comment 1311 708 NOP  <||@
  Comment 1312 710 NOP  <||@
  Comment 1313 712 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1315 714 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 1324 block B36 null  <||@
  Comment 1324 728 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1324 730 NOP  <||@
  Comment 1325 732 NOP  <||@
  Comment 1326 734 NOP  <||@
  Comment 1327 736 NOP  <||@
  Comment 1328 738 CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B39 size: DWORD  <||@
  Comment 1336 block B39 null  <||@
  Comment 1336 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1336 776 NOP  <||@
  Comment 1337 778 NOP  <||@
  Comment 1338 780 NOP  <||@
  Comment 1339 782 NOP  <||@
  Comment 1340 784 NOP  <||@
  Comment 1341 786 NOP  <||@
  Comment 1342 788 NOP  <||@
  Comment 1343 790 NOP  <||@
  Comment 1344 792 NOP  <||@
  Comment 1345 794 NOP  <||@
  Comment 1346 796 NOP  <||@
  Comment 1347 798 NOP  <||@
  Comment 1348 800 NOP  <||@
  Comment 1349 802 NOP  <||@
  Comment 1350 804 NOP  <||@
  Comment 1351 806 NOP  <||@
  Comment 1352 808 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1352 810 rdx|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 812 r11|QWORD = MOV value: r11|DWORD size: DWORD  <||@
  Comment 1358 814 r8|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1361 816 rdi|QWORD = LEA address: [r9|QWORD[*] + r11|QWORD * 1 + 16] size: QWORD  <||@
  Comment 1366 818 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1370 820 rdx|QWORD = MOVE input: r8|QWORD moveKind: QWORD  <||@
  Comment 1373 822 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1378 824 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1378 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 1383 828 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 1383 block B40 null  <||@
  Comment 1383 830 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1383 426 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1388 832 NOP  <||@
  Comment 1389 834 NOP  <||@
  Comment 1390 836 NOP  <||@
  Comment 1391 838 NOP  <||@
  Comment 1392 840 NOP  <||@
  Comment 1393 842 NOP  <||@
  Comment 1394 844 NOP  <||@
  Comment 1395 846 NOP  <||@
  Comment 1396 848 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1403 850 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1407 852 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: QWORD  <||@
  Comment 1420 block B42 null  <||@
  Comment 1420 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1420 886 NOP  <||@
  Comment 1421 888 NOP  <||@
  Comment 1422 890 NOP  <||@
  Comment 1423 892 NOP  <||@
  Comment 1424 894 NOP  <||@
  Comment 1425 896 NOP  <||@
  Comment 1426 898 NOP  <||@
  Comment 1427 900 NOP  <||@
  Comment 1428 902 NOP  <||@
  Comment 1429 904 NOP  <||@
  Comment 1430 906 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1437 908 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 1444 910 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1451 912 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1451 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1458 914 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1465 916 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1473 918 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1473 920 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 1473 block B43 null  <||@
  Comment 1473 922 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1473 924 NOP  <||@
  Comment 1474 926 NOP  <||@
  Comment 1475 928 NOP  <||@
  Comment 1476 930 NOP  <||@
  Comment 1477 932 NOP  <||@
  Comment 1478 934 r10|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 1482 936 MOV (x: [rax|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1486 938 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1489 940 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1494 942 JUMP ~outgoingValues: [] destination: B43 -> B48  <||@
  Comment 1499 block B61 null  <||@
  Comment 1499 1622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1499 1624 NOP  <||@
  Comment 1500 1626 NOP  <||@
  Comment 1501 1628 NOP  <||@
  Comment 1502 1630 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1507 block B49 null  <||@
  Comment 1507 1088 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1507 1090 NOP  <||@
  Comment 1508 1092 NOP  <||@
  Comment 1509 1094 NOP  <||@
  Comment 1510 1096 NOP  <||@
  Comment 1511 1098 NOP  <||@
  Comment 1512 1100 NOP  <||@
  Comment 1513 1102 NOP  <||@
  Comment 1514 1104 rcx|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1521 1106 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 1525 1108 CMPBRANCH (x: r11|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B53 size: QWORD  <||@
  Comment 1534 block B50 null  <||@
  Comment 1534 1110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1534 1112 NOP  <||@
  Comment 1535 1114 NOP  <||@
  Comment 1536 1116 NOP  <||@
  Comment 1537 1118 NOP  <||@
  Comment 1538 1120 NOP  <||@
  Comment 1539 1122 NOP  <||@
  Comment 1540 1124 r11|DWORD = MOV input: [rdx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1548 1126 rcx|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 1553 1128 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B50 -> B51 falseDestination: B50 -> B52 size: DWORD  <||@
  Comment 1561 block B52 null  <||@
  Comment 1561 1154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1561 1156 NOP  <||@
  Comment 1562 1158 NOP  <||@
  Comment 1563 1160 NOP  <||@
  Comment 1564 1162 NOP  <||@
  Comment 1565 1164 NOP  <||@
  Comment 1566 1166 MOV (x: [rdx|DWORD[_] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1573 1168 MEMBAR barriers: 4  <||@
  Comment 1578 1170 JUMP ~outgoingValues: [] destination: B52 -> B57  <||@
  Comment 1583 block B73 null  <||@
  Comment 1583 1836 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1583 1838 NOP  <||@
  Comment 1584 1840 NOP  <||@
  Comment 1585 1842 NOP  <||@
  Comment 1586 1844 JUMP ~outgoingValues: [] destination: B73 -> B74  <||@
  Comment 1591 block B22 null  <||@
  Comment 1591 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1591 442 NOP  <||@
  Comment 1592 444 NOP  <||@
  Comment 1593 446 NOP  <||@
  Comment 1594 448 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1599 block B17 null  <||@
  Comment 1599 272 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1599 274 NOP  <||@
  Comment 1600 276 NOP  <||@
  Comment 1601 278 NOP  <||@
  Comment 1602 280 NOP  <||@
  Comment 1603 282 NOP  <||@
  Comment 1604 284 NOP  <||@
  Comment 1605 286 NOP  <||@
  Comment 1606 288 NOP  <||@
  Comment 1607 290 NOP  <||@
  Comment 1608 292 NOP  <||@
  Comment 1609 294 NOP  <||@
  Comment 1610 296 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1617 298 r11|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1620 300 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 1624 302 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1628 304 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1634 306 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD  <||@
  Comment 1647 block B19 null  <||@
  Comment 1647 340 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1647 342 NOP  <||@
  Comment 1648 344 NOP  <||@
  Comment 1649 346 NOP  <||@
  Comment 1650 348 NOP  <||@
  Comment 1651 350 NOP  <||@
  Comment 1652 352 NOP  <||@
  Comment 1653 354 NOP  <||@
  Comment 1654 356 NOP  <||@
  Comment 1655 358 NOP  <||@
  Comment 1656 360 NOP  <||@
  Comment 1657 362 NOP  <||@
  Comment 1658 364 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1665 366 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1673 368 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1681 370 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1689 372 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1696 374 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1696 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1703 376 MOV (x: [rdi|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1706 378 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1706 380 JUMP ~outgoingValues: [] destination: B19 -> B20  <||@
  Comment 1706 block B20 null  <||@
  Comment 1706 382 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1706 384 NOP  <||@
  Comment 1707 386 NOP  <||@
  Comment 1708 388 NOP  <||@
  Comment 1709 390 NOP  <||@
  Comment 1710 392 NOP  <||@
  Comment 1711 394 NOP  <||@
  Comment 1712 396 NOP  <||@
  Comment 1713 398 NOP  <||@
  Comment 1714 400 NOP  <||@
  Comment 1715 402 NOP  <||@
  Comment 1716 404 NOP  <||@
  Comment 1717 406 NOP  <||@
  Comment 1718 408 NOP  <||@
  Comment 1719 410 NOP  <||@
  Comment 1720 412 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1720 414 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1723 416 stack:40|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1728 418 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 1732 420 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1736 422 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 1739 424 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1739 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1744 428 JUMP ~outgoingValues: [] destination: B20 -> B40  <||@
  Comment 1749 block B10 null  <||@
  Comment 1749 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1749 174 NOP  <||@
  Comment 1750 176 NOP  <||@
  Comment 1751 178 NOP  <||@
  Comment 1752 180 JUMP ~outgoingValues: [] destination: B10 -> B12  <||@
  Comment 1757 block B41 null  <||@
  Comment 1757 854 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1757 856 NOP  <||@
  Comment 1758 858 NOP  <||@
  Comment 1759 860 NOP  <||@
  Comment 1760 862 NOP  <||@
  Comment 1761 864 NOP  <||@
  Comment 1762 866 NOP  <||@
  Comment 1763 868 NOP  <||@
  Comment 1764 870 NOP  <||@
  Comment 1765 872 NOP  <||@
  Comment 1766 874 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1766 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1776 876 rsi|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1779 878 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:19, 41, 3, 12]  <||@
  Comment 1779 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1784 [r10:0, stack:32]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1792 880 NULLCHECK address: [rax|QWORD[.]] state [bci:19, 41, 3, 12]  <||@
  Comment 1792 [rax:0, r10:0, stack:32]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1792 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1794 882 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 1799 block B14 null  <||@
  Comment 1799 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1799 228 NOP  <||@
  Comment 1800 230 NOP  <||@
  Comment 1801 232 NOP  <||@
  Comment 1802 234 NOP  <||@
  Comment 1803 236 NOP  <||@
  Comment 1804 238 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:""]  <||@
  Comment 1804 {Object[String:""]}  <||@
  Comment 1814 240 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 242 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1822 244 JUMP ~outgoingValues: [] destination: B14 -> B48  <||@
  Comment 1827 block B24 null  <||@
  Comment 1827 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1827 488 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1827 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1837 490 NOP  <||@
  Comment 1838 492 NOP  <||@
  Comment 1839 494 NOP  <||@
  Comment 1840 496 NOP  <||@
  Comment 1841 498 NOP  <||@
  Comment 1842 500 NOP  <||@
  Comment 1843 502 NOP  <||@
  Comment 1844 504 NOP  <||@
  Comment 1845 506 NOP  <||@
  Comment 1846 508 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1848 510 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:10, 16, 41, 3, 12]  <||@
  Comment 1848 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1853 [r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1861 512 NULLCHECK address: [rax|QWORD[.]] state [bci:10, 16, 41, 3, 12]  <||@
  Comment 1861 [rax:0, r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1861 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1863 514 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 516 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 518 JUMP ~outgoingValues: [] destination: B24 -> B32  <||@
  Comment 1876 block B30 null  <||@
  Comment 1876 624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1876 626 NOP  <||@
  Comment 1877 628 NOP  <||@
  Comment 1878 630 NOP  <||@
  Comment 1879 632 NOP  <||@
  Comment 1880 634 NOP  <||@
  Comment 1881 636 NOP  <||@
  Comment 1882 638 NOP  <||@
  Comment 1883 640 NOP  <||@
  Comment 1884 642 NOP  <||@
  Comment 1885 644 ZERO_MEMORY (pointer: [r10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1895 646 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 648 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 1905 block B18 null  <||@
  Comment 1905 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1905 310 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1905 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1915 312 NOP  <||@
  Comment 1916 314 NOP  <||@
  Comment 1917 316 NOP  <||@
  Comment 1918 318 NOP  <||@
  Comment 1919 320 NOP  <||@
  Comment 1920 322 NOP  <||@
  Comment 1921 324 NOP  <||@
  Comment 1922 326 NOP  <||@
  Comment 1923 328 NOP  <||@
  Comment 1924 330 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1926 332 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:22, 3, 12]  <||@
  Comment 1926 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1931 [r9:0, r10:0, stack:32]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1939 334 NULLCHECK address: [rax|QWORD[.]] state [bci:22, 3, 12]  <||@
  Comment 1939 [rax:0, r9:0, r10:0, stack:32]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 1939 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1941 336 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1944 338 JUMP ~outgoingValues: [] destination: B18 -> B20  <||@
  Comment 1949 block B65 null  <||@
  Comment 1949 1682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1949 1684 NOP  <||@
  Comment 1950 1686 NOP  <||@
  Comment 1951 1688 NOP  <||@
  Comment 1952 1690 NOP  <||@
  Comment 1953 1692 NOP  <||@
  Comment 1954 1694 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1962 1696 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8992297525181168 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD  <||@
  Comment 1971 block B66 null  <||@
  Comment 1971 1698 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1971 1700 NOP  <||@
  Comment 1972 1702 NOP  <||@
  Comment 1973 1704 NOP  <||@
  Comment 1974 1706 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1979 1708 JUMP ~outgoingValues: [] destination: B66 -> B74  <||@
  Comment 1984 block B67 null  <||@
  Comment 1984 1710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1984 1712 NOP  <||@
  Comment 1985 1714 NOP  <||@
  Comment 1986 1716 NOP  <||@
  Comment 1987 1718 NOP  <||@
  Comment 1988 1720 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 0 size: DWORD inlinedY: null  <||@
  Comment 2003 block B68 null  <||@
  Comment 2003 1722 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2003 1724 NOP  <||@
  Comment 2004 1726 NOP  <||@
  Comment 2005 1728 NOP  <||@
  Comment 2006 1730 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2011 1732 JUMP ~outgoingValues: [] destination: B68 -> B74  <||@
  Comment 2016 block B53 null  <||@
  Comment 2016 1172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2016 1174 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2021 1176 NOP  <||@
  Comment 2022 1178 NOP  <||@
  Comment 2023 1180 NOP  <||@
  Comment 2024 1182 NOP  <||@
  Comment 2025 1184 NOP  <||@
  Comment 2026 1186 NOP  <||@
  Comment 2027 1188 NOP  <||@
  Comment 2028 1190 NOP  <||@
  Comment 2029 1192 NOP  <||@
  Comment 2030 1194 NOP  <||@
  Comment 2031 1196 rsi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 1198 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2039 1200 stack:56|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2044 1202 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11, 5, 5, 17]  <||@
  Comment 2047 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 2047 INVOKESPECIAL  <||@
  Comment 2052 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:56|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2060 1204 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7437536316095293 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 2068 block B54 null  <||@
  Comment 2068 1206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2068 1208 NOP  <||@
  Comment 2069 1210 NOP  <||@
  Comment 2070 1212 NOP  <||@
  Comment 2071 1214 NOP  <||@
  Comment 2072 1216 NOP  <||@
  Comment 2073 1218 NOP  <||@
  Comment 2074 1220 NOP  <||@
  Comment 2075 1222 NOP  <||@
  Comment 2076 1224 NOP  <||@
  Comment 2077 1226 NOP  <||@
  Comment 2078 1228 NOP  <||@
  Comment 2079 1230 NOP  <||@
  Comment 2080 1232 NOP  <||@
  Comment 2081 1234 NOP  <||@
  Comment 2082 1236 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2087 1238 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2094 1240 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2099 1242 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2105 1244 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2111 1246 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2116 1248 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2124 1250 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11, 5, 5, 17]  <||@
  Comment 2127 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 2127 INVOKESPECIAL  <||@
  Comment 2132 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2140 1252 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2145 1254 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 1256 JUMP ~outgoingValues: [] destination: B54 -> B57  <||@
  Comment 2155 block B55 null  <||@
  Comment 2155 1258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2155 1260 NOP  <||@
  Comment 2156 1262 NOP  <||@
  Comment 2157 1264 NOP  <||@
  Comment 2158 1266 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2163 1268 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2168 1270 JUMP ~outgoingValues: [] destination: B55 -> B57  <||@
  Comment 2173 block B44 null  <||@
  Comment 2173 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2173 946 NOP  <||@
  Comment 2174 948 NOP  <||@
  Comment 2175 950 NOP  <||@
  Comment 2176 952 NOP  <||@
  Comment 2177 954 NOP  <||@
  Comment 2178 956 NOP  <||@
  Comment 2179 958 NOP  <||@
  Comment 2180 960 NOP  <||@
  Comment 2181 962 NOP  <||@
  Comment 2182 964 NOP  <||@
  Comment 2183 966 rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2186 968 rdx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2189 970 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 2191 972 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.newString(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:54, 3, 12]  <||@
  Comment 2191 {HotSpotMethod<StringUTF16.newString(byte[], int, int)>}  <||@
  Comment 2191 INVOKESTATIC  <||@
  Comment 2196 [stack:32]at java.lang.String.substring(String.java:2840) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 2204 974 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2207 976 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 978 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 2217 block B69 null  <||@
  Comment 2217 1734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2217 1736 NOP  <||@
  Comment 2218 1738 NOP  <||@
  Comment 2219 1740 NOP  <||@
  Comment 2220 1742 NOP  <||@
  Comment 2221 1744 NOP  <||@
  Comment 2222 1746 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 2229 1748 stack:40|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2234 1750 JUMP ~outgoingValues: [] destination: B69 -> B70  <||@
  Comment 2239 block B71 loop 1 depth 1 header:315|LoopBegin  <||@
  Comment 2239 1786 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2240 1788 NOP  <||@
  Comment 2241 1790 NOP  <||@
  Comment 2242 1792 NOP  <||@
  Comment 2243 1794 NOP  <||@
  Comment 2244 1796 NOP  <||@
  Comment 2245 1798 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 23, 5, 5, 17]  <||@
  Comment 2252 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5         
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r11|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |          
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2252 {infopoint: SAFEPOINT}  <||@
  Comment 2252 POLL_FAR  <||@
  Comment 2255 1800 JUMP ~outgoingValues: [] destination: B71 -> B70  <||@
  Comment 2255 block B70 loop 1 depth 1 header:315|LoopBegin  <||@
  Comment 2255 1752 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2255 1754 NOP  <||@
  Comment 2256 1756 NOP  <||@
  Comment 2257 1758 NOP  <||@
  Comment 2258 1760 NOP  <||@
  Comment 2259 1762 NOP  <||@
  Comment 2260 1764 NOP  <||@
  Comment 2261 1766 NOP  <||@
  Comment 2262 1768 NOP  <||@
  Comment 2263 1770 NOP  <||@
  Comment 2264 1772 NOP  <||@
  Comment 2265 1774 NOP  <||@
  Comment 2266 1776 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 2274 1778 r8|DWORD = AND x: r11|DWORD y: -2 size: DWORD  <||@
  Comment 2281 1780 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 2284 1782 rax|DWORD = CAS (address: [r10|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r8|DWORD) accessKind: DWORD  <||@
  Comment 2294 1784 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 2296 block B72 null  <||@
  Comment 2296 1802 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2296 1804 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2301 1806 NOP  <||@
  Comment 2302 1808 NOP  <||@
  Comment 2303 1810 NOP  <||@
  Comment 2304 1812 NOP  <||@
  Comment 2305 1814 NOP  <||@
  Comment 2306 1816 NOP  <||@
  Comment 2307 1818 NOP  <||@
  Comment 2308 1820 NOP  <||@
  Comment 2309 1822 NOP  <||@
  Comment 2310 1824 NOP  <||@
  Comment 2311 1826 rsi|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 2319 1828 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 2323 1830 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 23, 5, 5, 17]  <||@
  Comment 2323 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 2323 INVOKESTATIC  <||@
  Comment 2328 [stack:8, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2336 1832 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2341 1834 JUMP ~outgoingValues: [] destination: B72 -> B74  <||@
  Comment 2346 block B46 null  <||@
  Comment 2346 992 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2346 994 NOP  <||@
  Comment 2347 996 NOP  <||@
  Comment 2348 998 NOP  <||@
  Comment 2349 1000 NOP  <||@
  Comment 2350 1002 NOP  <||@
  Comment 2351 1004 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"null"]  <||@
  Comment 2351 {Object[String:"null"]}  <||@
  Comment 2361 1006 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2366 1008 JUMP ~outgoingValues: [] destination: B46 -> B48  <||@
  Comment 2371 block B4 null  <||@
  Comment 2371 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2371 84 NOP  <||@
  Comment 2372 86 NOP  <||@
  Comment 2373 88 NOP  <||@
  Comment 2374 90 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2381 92 r9|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 2387 96 JUMP ~outgoingValues: [] destination: B4 -> B78  <||@
  Comment 2387 block B78 null  <||@
  Comment 2387 1934 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2387 1930 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2392 1936 NOP  <||@
  Comment 2393 1938 NOP  <||@
  Comment 2394 1940 NOP  <||@
  Comment 2395 1942 NOP  <||@
  Comment 2396 1944 NOP  <||@
  Comment 2397 1946 NOP  <||@
  Comment 2398 1948 NOP  <||@
  Comment 2399 1950 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 2406 1952 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2413 1954 DEOPT info [bci:0]  <||@
  Comment 2413 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2418 [rsi:0, r10:0]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 2426 block B51 null  <||@
  Comment 2426 1130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2426 1132 rax|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2431 1134 NOP  <||@
  Comment 2432 1136 NOP  <||@
  Comment 2433 1138 NOP  <||@
  Comment 2434 1140 NOP  <||@
  Comment 2435 1142 NOP  <||@
  Comment 2436 1144 NOP  <||@
  Comment 2437 1146 NOP  <||@
  Comment 2438 1148 MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD  <||@
  Comment 2449 1150 MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD  <||@
  Comment 2460 1152 DEOPT info [bci:32, 1, 4, 4, 11, 5, 5, 17]  <||@
  Comment 2460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2465 [rax:0, r8:0, r10:0, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0            |1  |2 
     locals:  |r8|QWORD[.]  |-  |- 
     stack:   |r11|DWORD    |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0           
     locals:  |r8|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1             |2  |3 
     locals:  |stack:32|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2473 block B35 null  <||@
  Comment 2473 716 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2473 718 NOP  <||@
  Comment 2474 720 NOP  <||@
  Comment 2475 722 NOP  <||@
  Comment 2476 724 r10|DWORD = MOVE input: int[-163097|0xfffffffffffd82e7]  <||@
  Comment 2482 726 JUMP ~outgoingValues: [] destination: B35 -> B38  <||@
  Comment 2482 block B38 null  <||@
  Comment 2482 752 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2482 754 NOP  <||@
  Comment 2483 756 NOP  <||@
  Comment 2484 758 NOP  <||@
  Comment 2485 760 NOP  <||@
  Comment 2486 762 NOP  <||@
  Comment 2487 764 NOP  <||@
  Comment 2488 766 NOP  <||@
  Comment 2489 768 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2496 770 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2507 772 DEOPT info [bci:10, 16, 41, 3, 12]  <||@
  Comment 2507 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2512 [r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 2520 block B2 null  <||@
  Comment 2520 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2520 56 NOP  <||@
  Comment 2521 58 NOP  <||@
  Comment 2522 60 NOP  <||@
  Comment 2523 62 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2530 64 r9|DWORD = MOVE input: int[-152083|0xfffffffffffdaded]  <||@
  Comment 2536 68 JUMP ~outgoingValues: [] destination: B2 -> B78  <||@
  Comment 2541 block B37 null  <||@
  Comment 2541 740 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2541 742 NOP  <||@
  Comment 2542 744 NOP  <||@
  Comment 2543 746 NOP  <||@
  Comment 2544 748 r10|DWORD = MOVE input: int[-164121|0xfffffffffffd7ee7]  <||@
  Comment 2550 750 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 2552 block B33 null  <||@
  Comment 2552 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2552 690 NOP  <||@
  Comment 2553 692 NOP  <||@
  Comment 2554 694 NOP  <||@
  Comment 2555 696 r10|DWORD = MOVE input: int[-162073|0xfffffffffffd86e7]  <||@
  Comment 2561 698 JUMP ~outgoingValues: [] destination: B33 -> B38  <||@
  Comment 2563 block B77 null  <||@
  Comment 2563 1918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2563 1920 NOP  <||@
  Comment 2564 1922 NOP  <||@
  Comment 2565 1924 NOP  <||@
  Comment 2566 1926 rcx|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 2573 1928 r9|DWORD = MOVE input: int[-88371|0xfffffffffffea6cd]  <||@
  Comment 2579 1932 JUMP ~outgoingValues: [] destination: B77 -> B78  <||@
  Comment 2584 block B6 null  <||@
  Comment 2584 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2584 124 NOP  <||@
  Comment 2585 126 NOP  <||@
  Comment 2586 128 NOP  <||@
  Comment 2587 130 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2594 132 r9|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed]  <||@
  Comment 2600 136 JUMP ~outgoingValues: [] destination: B6 -> B78  <||@
  Comment 2605 block B75 null  <||@
  Comment 2605 1868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2605 1870 NOP  <||@
  Comment 2606 1872 NOP  <||@
  Comment 2607 1874 NOP  <||@
  Comment 2608 1876 NOP  <||@
  Comment 2609 1878 NOP  <||@
  Comment 2610 1880 NOP  <||@
  Comment 2611 1882 NOP  <||@
  Comment 2612 1884 NOP  <||@
  Comment 2613 1886 NOP  <||@
  Comment 2614 1888 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@67466de6 encoding: base: 0 shift: 3  <||@
  Comment 2618 1890 MOV x: [r15|QWORD + 1156] y: -158227 size: DWORD  <||@
  Comment 2629 1892 MOV x: [r15|QWORD + 1168] y: 13460 size: QWORD  <||@
  Comment 2640 1894 DEOPT info [bci:4, 2, 5, 4, 23, 5, 5, 17]  <||@
  Comment 2640 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2645 [rax:0, rdx:0, r10:0, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r10|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r11|DWORD     |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:792) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2653 block B76 null  <||@
  Comment 2653 1896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2653 1898 NOP  <||@
  Comment 2654 1900 NOP  <||@
  Comment 2655 1902 NOP  <||@
  Comment 2656 1904 NOP  <||@
  Comment 2657 1906 NOP  <||@
  Comment 2658 1908 NOP  <||@
  Comment 2659 1910 NOP  <||@
  Comment 2660 1912 MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD  <||@
  Comment 2671 1914 MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD  <||@
  Comment 2682 1916 DEOPT info [bci:7, 23, 16, 5, 5, 17]  <||@
  Comment 2682 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2687 [stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:32|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |stack:32|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2700 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2715 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2730 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2745 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2770 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2798 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2803 [rsi:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 2833 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2838 [rsi:0, r9:0, r10:0, stack:32]at java.io.PrintStream.append(PrintStream.java:1505) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|DWORD  |r8|DWORD   <||@
  Comment 2868 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2873 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2903 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2908 [rax:0, rsi:0, r10:0, stack:32]at java.lang.String.valueOf(String.java:4465) [bci: 14, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r10|QWORD[.] 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2938 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2943 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:788) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2973 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2978 [rsi:0, stack:16, stack:32]at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 19, duringCall: false, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3008 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3013 [rax:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3043 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3048 [rax:0, rdx:0, rsi:0, stack:16, stack:32]at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:193) [bci: 7, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.io.PrintStream.implWrite(PrintStream.java:812) [bci: 23, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.] 
  at java.io.PrintStream.write(PrintStream.java:790) [bci: 16, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |- 
  at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3078 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3083 [rax:0, r10:0, stack:32]at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 19, duringCall: false, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2            
     locals:  |-                                                                                                             |-                                                                                                             |-            
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |r10|QWORD[.] 
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 3113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3118 [rax:0, r9:0, stack:32]at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10, duringCall: false, rethrow: false]
              |0            |1          |2        
     locals:  |r9|QWORD[.]  |r11|DWORD  |r8|DWORD 
  at java.lang.StringLatin1.newString(StringLatin1.java:752) [bci: 16, duringCall: true, rethrow: false]
              |0                                                                                                             |1                                                                                                             |2 
     locals:  |-                                                                                                             |-                                                                                                             |- 
     stack:   |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |vobject:String:0{hash=int[0|0x0],coder=int[0|0x0],hashIsZero=int[0|0x0],flags=int[0|0x0],value=Object[null]}  |  
  at java.lang.String.substring(String.java:2839) [bci: 41, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 3148 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3153 [rax:0, r9:0, r10:0, stack:32]at java.lang.String.substring(String.java:2838) [bci: 22, duringCall: false, rethrow: false]
              |0             |1           |2         |3  |4 
     locals:  |r10|QWORD[.]  |int[0|0x0]  |r8|DWORD  |-  |- 
  at java.lang.String.subSequence(String.java:2872) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1506) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |   |    <||@
  Comment 3161 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3161 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3167 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
