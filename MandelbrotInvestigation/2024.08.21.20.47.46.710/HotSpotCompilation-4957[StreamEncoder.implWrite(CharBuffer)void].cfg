begin_compilation
  name " HotSpotCompilation-4957[sun.nio.cs.StreamEncoder.implWrite(CharBuffer)]"
  method "HotSpotCompilation-4957[sun.nio.cs.StreamEncoder.implWrite(CharBuffer)]"
  date 1724269718575
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i667 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i667  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v702 ?573 ?574 v705 ?105 ?17 ?576 v708 v707 ?30 ?316 ?37 v427 v418 v657 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.nio.HeapCharBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?268 ?267 ?105 ?17 ?176 ?306 ?316 ?30 ?129 ?37 v406 ?576 v704 v703 ?257 v718 v710 v711 v714 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 363
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v725 i667 i670 f674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i667 i684 v410 i693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i667 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-90379|0xfffffffffffe9ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: i668 
=== Usages ===
i64 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v704 lastLocationAccess: - #next: i668  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i668 i685 i692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: a669 
=== Usages ===
i64 
=== Predecessor ===
i667 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: a669  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a669 a677 v430 v655 v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a669 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
=== Succesors ===
next: i670 
=== Usages ===
v706 
=== Predecessor ===
i668 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - #next: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a669 
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-93195|0xfffffffffffe93f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.capacity(Buffer.java:300) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v706 
lastLocationAccess: - 
=== Succesors ===
next: i671 
=== Usages ===
v74 v85 
=== Predecessor ===
a669 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v706 lastLocationAccess: - #next: i671  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
displacement: 27
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.haveLeftoverChar
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 1]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
v432 
=== Predecessor ===
i670 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v702 lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 v437 v439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i671 
y: i431 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i671 y: i431  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
i671 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v509 #falseSuccessor: v510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i672 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i672  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.maxBufferCapacity
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 10]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v707 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
v74 v103 i104 
=== Predecessor ===
v509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v707 lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i672 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i670 y: i672  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v65 v122 v332 v381 j170 v311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 i67 v261 v323 i334 v118 ?306 ?129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a675 a673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.8526023080679708
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i672 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v76 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 16]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a673 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a673 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v708 
lastLocationAccess: - 
=== Succesors ===
next: f674 
=== Usages ===
v721 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v708 lastLocationAccess: - #next: f674  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a673 
=== Succesors ===
=== Usages ===
f674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f674 <|@
d <@d|@=== Debug Properties ===
accessStamp: f32
barrierType: NONE
deoptReasonAndAction: int[-108555|0xfffffffffffe57f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:472) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: f32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v721 
lastLocationAccess: - 
=== Succesors ===
next: v91 
=== Usages ===
i83 
=== Predecessor ===
a673 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v721 lastLocationAccess: - #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32
=== Inputs ===
x: i668 
y: i667 
=== Succesors ===
=== Usages ===
v65 i67 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i668 y: i667  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i64 
y: i45 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i64 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v65 
trueValue: i5 
falseValue: i64 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v65 trueValue: i5 falseValue: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(float) [bci: -1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 24]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
=== Inputs ===
value: f674 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@RoundFloatToInteger|@jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode>@ value: f674  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 27]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
=== Inputs ===
x: i67 
y: i83 
=== Succesors ===
=== Usages ===
v103 i104 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i67 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i672 
y: i84 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i672 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
=== Inputs ===
condition: v103 
trueValue: i672 
falseValue: i84 
=== Succesors ===
=== Usages ===
v85 ?573 v428 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v103 trueValue: i672 falseValue: i84  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i104 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i670 y: i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 2.033294968682986E-4
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
f674 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 45]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implFlushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 367
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?573 ?574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 397
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a1 - - - i104 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a1 - - - i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implFlushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v427 
stateDuring: ?573 
=== Succesors ===
next: a96 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v427 stateDuring: ?573 #next: a96  <|@  <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
referencedType: [null]
returnStamp: a java.nio.ByteBuffer
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ByteBuffer.allocate(int)>
=== Inputs ===
arguments: i104 
=== Succesors ===
=== Usages ===
a96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i104  <|@  <|@
tid ?574 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 398
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a1 
=== Succesors ===
=== Usages ===
a96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a96 <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
polymorphic: false
stamp: a java.nio.ByteBuffer
targetMethod: Direct#ByteBuffer.allocate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v428 
stateDuring: ?574 
=== Succesors ===
next: v655 
=== Usages ===
a429 v657 
=== Predecessor ===
v93 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v428 stateDuring: ?574 #next: v655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
precise: true
stamp: void
=== Inputs ===
address: v705 
value: - 
stateBefore: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
a96 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v705 value: - stateBefore: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: Compress
stamp: n java.nio.ByteBuffer
=== Inputs ===
value: a96 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: StreamEncoder.bb
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
value: a429 
stateAfter: - 
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - value: a429 stateAfter: - #next: v657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
precise: false
stamp: void
=== Inputs ===
address: v705 
value: a96 
object: a1 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v705 value: a96 object: a1 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v90 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v86 v88 v100 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v86 v88 v100 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 133]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: CoderResult@167784470
stableDimension: 0
stamp: a!# java.nio.charset.CoderResult
stampKind: a java.lang.Object
value: Object[CoderResult@167784470]
=== Inputs ===
=== Succesors ===
=== Usages ===
a304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j632 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 11540
stableDimension: 0
stamp: i64 [11540]
stampKind: i64
value: long[11540|0x2d14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j634 j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 12180
stableDimension: 0
stamp: i64 [12180]
stampKind: i64
value: long[12180|0x2f94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j634 j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 12820
stableDimension: 0
stamp: i64 [12820]
stampKind: i64
value: long[12820|0x3214]
=== Inputs ===
=== Succesors ===
=== Usages ===
j634 j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j188 j189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?306 ?129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 369
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v597 i676 a678 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v15 
=== Succesors ===
next: a675 
=== Usages ===
v36 v50 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v15 #next: a675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a675 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v708 
lastLocationAccess: - 
=== Succesors ===
next: i676 
=== Usages ===
a375 v709 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v708 lastLocationAccess: - #next: i676  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a675 
=== Succesors ===
=== Usages ===
i676 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-96779|0xfffffffffffe85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v709 
lastLocationAccess: - 
=== Succesors ===
next: a677 
=== Usages ===
v118 v122 
=== Predecessor ===
a675 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v709 lastLocationAccess: - #next: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a677 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
=== Succesors ===
next: a678 
=== Usages ===
a377 v712 v713 v715 v716 v717 v719 v722 
=== Predecessor ===
i676 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - #next: a678  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
a678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a678 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-99851|0xfffffffffffe79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v712 
lastLocationAccess: - 
=== Succesors ===
next: i679 
=== Usages ===
a393 v724 
=== Predecessor ===
a677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v712 lastLocationAccess: - #next: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
lastLocationAccess: - 
=== Succesors ===
next: i680 
=== Usages ===
v439 
=== Predecessor ===
a678 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v713 lastLocationAccess: - #next: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i680 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
=== Succesors ===
next: i681 
=== Usages ===
i164 
=== Predecessor ===
i679 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - #next: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
lastLocationAccess: - 
=== Succesors ===
next: i682 
=== Usages ===
i164 i166 i245 
=== Predecessor ===
i680 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 lastLocationAccess: - #next: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
lastLocationAccess: - 
=== Succesors ===
next: v683 
=== Usages ===
i166 v287 
=== Predecessor ===
i681 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v717 lastLocationAccess: - #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
lastLocationAccess: - 
=== Succesors ===
next: i684 
=== Usages ===
v665 
=== Predecessor ===
i682 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 lastLocationAccess: - #next: i684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: i685 
=== Usages ===
v110 i158 
=== Predecessor ===
v683 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - #next: i685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v515 
=== Usages ===
v110 i160 v259 
=== Predecessor ===
i684 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i684 
y: i685 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i684 y: i685  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
i685 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v513 #falseSuccessor: v514  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i676 
y: i45 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i676 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.9999465205576051
stamp: void
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v570 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i676 
y: i5 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i676 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.9999999999996475
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v120 #falseSuccessor: v571  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v124 v126 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v124 v126 #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharsetEncoder.state
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v709 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: a686 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v709 lastLocationAccess: - value: i45 stateAfter: - #next: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a686 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
=== Succesors ===
next: v699 
=== Usages ===
a385 v723 
=== Predecessor ===
v381 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
op: Uncompress
stamp: a# sun.nio.cs.UTF_8$Encoder
=== Inputs ===
value: a675 
=== Succesors ===
=== Usages ===
?129 ?306 v406 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a675  <|@  <|@
f <@~|@floating>@ <|@
tid a377 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
op: Uncompress
stamp: a java.nio.ByteBuffer
=== Inputs ===
value: a677 
=== Succesors ===
=== Usages ===
?306 v406 ?129 ?176 ?269 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a677  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: aload_0
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
values: a375 a2 a377 i5 
=== Succesors ===
=== Usages ===
v612 v699 v701 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316 values: a375 a2 a377 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a686 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?129 
object: v723 
=== Succesors ===
next: i687 
=== Usages ===
=== Predecessor ===
a686 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?129 object: v723 #next: i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v711 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
v437 
=== Predecessor ===
v699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v711 lastLocationAccess: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i687 
y: i431 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i687 y: i431  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v437 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
i687 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v437 #trueSuccessor: v521 #falseSuccessor: v522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a678 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?129 
object: v724 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?129 object: v724 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i679 
y: i431 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i679 y: i431  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v439 
=== Succesors ===
trueSuccessor: v529 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v439 #trueSuccessor: v529 #falseSuccessor: v530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j658 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j658  <|@  <|@
f <@~|@floating>@ <|@
tid a385 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a686 
=== Succesors ===
=== Usages ===
v406 j658 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
object: a385 
=== Succesors ===
next: j660 
=== Usages ===
j659 
=== Predecessor ===
v529 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a385 #next: j660  <|@  <|@
f <@~|@floating>@ <|@
tid a393 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a678 
=== Succesors ===
=== Usages ===
v406 j660 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
object: a393 
=== Succesors ===
next: i688 
=== Usages ===
j661 
=== Predecessor ===
j658 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a393 #next: i688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i688 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
lastLocationAccess: - 
=== Succesors ===
next: i175 
=== Usages ===
i158 i160 i244 
=== Predecessor ===
j660 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 lastLocationAccess: - #next: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i684 
y: i688 
=== Succesors ===
=== Usages ===
i167 j169 ?176 i178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i684 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid j169 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i158 
=== Succesors ===
=== Usages ===
j170 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i158  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j169 
y: i45 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j169 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j170 
y: j171 
=== Succesors ===
=== Usages ===
j659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j170 y: j171  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
x: j188 
y: j658 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j188 y: j658  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
i168 j173 ?176 i179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i164 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i164  <|@  <|@
f <@~|@floating>@ <|@
tid j189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j173 
y: j171 
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j173 y: j171  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
x: j189 
y: j660 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j189 y: j660  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i681 
y: i682 
=== Succesors ===
=== Usages ===
i168 ?176 v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i681 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 74]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i166 
y: i164 
=== Succesors ===
=== Usages ===
v242 i243 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i166 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i685 
y: i688 
=== Succesors ===
=== Usages ===
i167 ?176 v180 v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i685 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i160 
y: i158 
=== Succesors ===
=== Usages ===
v242 i243 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i160 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i167 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i168 y: i167  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
condition: v242 
trueValue: i168 
falseValue: i167 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v242 trueValue: i168 falseValue: i167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j659 
dst: j661 
len: i243 
=== Succesors ===
next: v183 
=== Usages ===
?177 i178 i179 
=== Predecessor ===
i688 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j659 dst: j661 len: i243 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:458) [bci: 96]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i164 
y: i175 
=== Succesors ===
=== Usages ===
v406 i245 ?269 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i164 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:457) [bci: 89]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i158 
y: i175 
=== Succesors ===
=== Usages ===
v180 v406 i244 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i158 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i160 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i160  <|@  <|@
tid ?306 <|@
d <@d|@=== Debug Properties ===
bci: 57
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
values: a375 a2 a377 i5 
=== Succesors ===
=== Usages ===
?136 ?301 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316 values: a375 a2 a377 i5  <|@  <|@
tid ?301 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?306 
=== Succesors ===
=== Usages ===
?176 ?575 ?300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?306  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 8.594464037114946E-6
stamp: void
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i175 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v182 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 106]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a185  <|@  <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
referencedType: [null]
returnStamp: a# java.nio.charset.CoderResult
signature: [HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>, UnresolvedJavaType<Ljava/nio/CharBuffer;>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/nio/ByteBuffer;>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>
=== Inputs ===
arguments: a375 a2 a385 i178 i160 a377 a393 i179 i166 
=== Succesors ===
=== Usages ===
a185 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a375 a2 a385 i178 i160 a377 a393 i179 i166  <|@  <|@
tid ?575 <|@
d <@d|@=== Debug Properties ===
bci: 120
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 461
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?301 
=== Succesors ===
=== Usages ===
a185 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
bci: 120
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
polymorphic: false
stamp: a# java.nio.charset.CoderResult
targetMethod: Direct#UTF_8$Encoder.encodeArrayLoopSlow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v406 
stateDuring: ?575 
=== Succesors ===
next: v303 
=== Usages ===
a304 
=== Predecessor ===
v182 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v406 stateDuring: ?575 #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
a185 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 124]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i178 
y: i688 
=== Succesors ===
=== Usages ===
?257 v259 v261 v264 v410 ?267 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i178 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i685 
y: i244 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i685 y: i244  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v533 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -136211
stableDimension: 0
stamp: i32 [-136211]
stampKind: i32
value: int[-136211|0xfffffffffffdebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i5 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v537 #falseSuccessor: v538  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -137235
stableDimension: 0
stamp: i32 [-137235]
stampKind: i32
value: int[-137235|0xfffffffffffde7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i689 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v264 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v718 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i689 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i689  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
i689 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v541 #falseSuccessor: v542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -138259
stableDimension: 0
stamp: i32 [-138259]
stampKind: i32
value: int[-138259|0xfffffffffffde3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-138259 - -136211] bits:1...1011110xx1111101101
valueDescription: i32
=== Inputs ===
merge: v629 
values: i631 i637 i640 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: i631 i637 i640  <|@  <|@
f <@~|@floating>@ <|@
tid j634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [11540 - 12820] bits:0...01xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v629 
values: j632 j638 j641 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: j632 j638 j641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v630 v636 v639 
=== Succesors ===
next: v635 
=== Usages ===
i633 j634 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v630 v636 v639 #next: v635  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: UTF_8.java
sourceLine: 456
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?301 
values: a375 a2 a377 a385 i158 i160 a393 i164 i166 
=== Succesors ===
=== Usages ===
?177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?301 values: a375 a2 a377 a385 i158 i160 a393 i164 i166  <|@  <|@
tid ?177 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: ireturn
code: ResolvedJavaMethodBytecode<System$2.encodeASCII(char[], int, byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: System.java
sourceLine: 2506
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?176 
values: i175 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?176 values: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?177 
actionAndReason: i633 
speculation: j634 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?177 actionAndReason: i633 speculation: j634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
value: i244 
stateAfter: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - value: i244 stateAfter: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v683 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}]
keySuccessors: [I@427d9d40
keys: [HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [1.0, 0.0]
stamp: void
=== Inputs ===
value: v665 
=== Succesors ===
successors: v279 v281 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v665 #successors: v279 v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 17]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i179 
y: i681 
=== Succesors ===
=== Usages ===
v287 v289 v292 v414 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i179 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i245 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i245  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -139283
stableDimension: 0
stamp: i32 [-139283]
stampKind: i32
value: int[-139283|0xfffffffffffddfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i245 
y: i5 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i245 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v549 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -140307
stableDimension: 0
stamp: i32 [-140307]
stampKind: i32
value: int[-140307|0xfffffffffffddbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i690 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i690  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
=== Succesors ===
next: v555 
=== Usages ===
v292 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i245 
y: i690 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i245 y: i690  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v553 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
i690 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v553 #falseSuccessor: v554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -141331
stableDimension: 0
stamp: i32 [-141331]
stampKind: i32
value: int[-141331|0xfffffffffffdd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
value: i245 
stateAfter: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - value: i245 stateAfter: - #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a304 <|@
d <@d|@=== Debug Properties ===
stamp: a# java.nio.charset.CoderResult
valueDescription: a java.lang.Object
=== Inputs ===
merge: v302 
values: a185 a187 
=== Succesors ===
=== Usages ===
?30 v720 ?136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v302 values: a185 a187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v303 v305 
=== Succesors ===
next: i691 
=== Usages ===
a304 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v303 v305 #next: i691  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: areturn
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?306 
values: a304 
=== Succesors ===
=== Usages ===
v726 i691 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?306 values: a304  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a304 
index: - 
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a304 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-106251|0xfffffffffffe60f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CoderResult.type
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?136 
guard: - 
address: v720 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
v311 v323 
=== Predecessor ===
v302 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?136 guard: - address: v720 lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i691 
y: i45 
=== Succesors ===
=== Usages ===
v131 v559 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i691 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:119) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i691 
y: i5 
=== Succesors ===
=== Usages ===
v39 v568 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i691 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.9999914009515922
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
i691 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v566 #falseSuccessor: v130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:595) [bci: 96]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 82]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v135 #falseSuccessor: v567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:592) [bci: 85]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v319 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v319 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 46]
profileData: PROFILED designatedSuccessorProbability: 0.9999913905476284
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v36 #falseSuccessor: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v558 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v557 #falseSuccessor: v558  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?576 <|@
d <@d|@=== Debug Properties ===
bci: 131
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 381
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
bci: 131
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v418 
stateDuring: ?576 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v418 stateDuring: ?576 #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: i692 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: i692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: i693 
=== Usages ===
i331 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: i693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: v564 
=== Usages ===
i331 
=== Predecessor ===
i692 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32
=== Inputs ===
x: i692 
y: i693 
=== Succesors ===
=== Usages ===
v332 i334 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i692 y: i693  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i331 
y: i45 
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i331 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v332 
trueValue: i5 
falseValue: i331 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i5 falseValue: i331  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i334 
y: i45 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i334 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v562 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
i693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v562 #falseSuccessor: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
tid ?37 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: getstatic
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
sourceFile: StreamEncoder.java
sourceLine: 372
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
reason: UnreachedCode
speculation: {0x0000000000000794[index: 60, len: 20, hash: 0x92b47afe]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 83]}
stamp: void
=== Inputs ===
stateBefore: ?37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:386) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:386) [bci: 144]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: astore_2
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a304 a1 a2 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a304 a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x92b47a34]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 137]}
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 88]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 565
mayConvertToGuard: true
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
reason: UnreachedCode
speculation: {0x0000000000000c94[index: 100, len: 20, hash: 0x1038279]: UnreachedCode@6[HotSpotMethod<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>, 122]}
stamp: void
=== Inputs ===
stateBefore: ?136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j650 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 13460
stableDimension: 0
stamp: i64 [13460]
stampKind: i64
value: long[13460|0x3494]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -71731
stableDimension: 0
stamp: i32 [-71731]
stampKind: i32
value: int[-71731|0xfffffffffffee7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i645 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-141331 - -71731] bits:1...1xx11xxxx1111x01101
valueDescription: i32
=== Inputs ===
merge: v642 
values: i644 i649 i652 i654 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v642 values: i644 i649 i652 i654  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [11540 - 13460] bits:0...01xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v642 
values: j632 j650 j638 j641 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v642 values: j632 j650 j638 j641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v643 v648 v651 v653 
=== Succesors ===
next: v647 
=== Usages ===
i645 j646 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v643 v648 v651 v653 #next: v647  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 130
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 463
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?301 
=== Succesors ===
=== Usages ===
?269 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?301  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
localsSize: 4
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 82
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?300 
values: - - a377 i179 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?300 values: - - a377 i179  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?269 
values: a2 i244 
=== Succesors ===
=== Usages ===
?268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?269 values: a2 i244  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1551
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?257 
values: a2 
=== Succesors ===
=== Usages ===
?267 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?257 values: a2  <|@  <|@
tid ?267 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: Buffer.java
sourceLine: 330
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?268 
values: a2 i244 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?268 values: a2 i244  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?267 
actionAndReason: i645 
speculation: j646 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?267 actionAndReason: i645 speculation: j646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -135187
stableDimension: 0
stamp: i32 [-135187]
stampKind: i32
value: int[-135187|0xfffffffffffdefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid j609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -133139
stableDimension: 0
stamp: i32 [-133139]
stampKind: i32
value: int[-133139|0xfffffffffffdf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v522 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-135187 - -133139] bits:1...101111xx11111101101
valueDescription: i32
=== Inputs ===
merge: v606 
values: i617 i619 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v606 values: i617 i619  <|@  <|@
f <@~|@floating>@ <|@
tid j611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [5140 - 5780] bits:0...0101x0x0010100
valueDescription: i64
=== Inputs ===
merge: v606 
values: j609 j615 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v606 values: j609 j615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v616 v618 
=== Succesors ===
next: v612 
=== Usages ===
i610 j611 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v616 v618 #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?129 
actionAndReason: i610 
speculation: j611 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?129 actionAndReason: i610 speculation: j611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid j605 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i604 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -145683
stableDimension: 0
stamp: i32 [-145683]
stampKind: i32
value: int[-145683|0xfffffffffffdc6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -131091
stableDimension: 0
stamp: i32 [-131091]
stampKind: i32
value: int[-131091|0xfffffffffffdffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-145683 - -131091] bits:1...10111xxx11x11101101
valueDescription: i32
=== Inputs ===
merge: v592 
values: i601 i604 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v592 values: i601 i604  <|@  <|@
f <@~|@floating>@ <|@
tid j596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [660 - 2580] bits:0...0x010x0010100
valueDescription: i64
=== Inputs ===
merge: v592 
values: j602 j605 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v592 values: j602 j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v603 
=== Succesors ===
next: v597 
=== Usages ===
i595 j596 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v603 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?17 
actionAndReason: i595 
speculation: j596 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?17 actionAndReason: i595 speculation: j596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 508
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x92b47ab2]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i667 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i667  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v702 ?573 ?574 v705 ?105 ?17 ?576 v708 v707 ?30 ?316 ?37 v427 v418 v657 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.nio.HeapCharBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?268 ?267 ?105 ?17 ?176 ?306 ?316 ?30 ?129 ?37 v406 ?576 v704 v703 ?257 v718 v710 v711 v714 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 363
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v725 i667 i670 f674 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v704 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i667 i684 v410 i693 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i667 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-90379|0xfffffffffffe9ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: i668 
=== Usages ===
i64 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v704 lastLocationAccess: - #next: i668  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i668 i685 i692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i668 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: a669 
=== Usages ===
i64 
=== Predecessor ===
i667 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: a669  <|@  <|@
f <@~|@floating>@ <|@
tid v705 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a669 a677 v430 v655 v657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a669 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
=== Succesors ===
next: i670 
=== Usages ===
v706 
=== Predecessor ===
i668 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - #next: i670  <|@  <|@
f <@~|@floating>@ <|@
tid v706 <|@
result [v4|DWORD[_] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a669 
=== Succesors ===
=== Usages ===
i670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i670 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-93195|0xfffffffffffe93f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.capacity(Buffer.java:300) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v706 
lastLocationAccess: - 
=== Succesors ===
next: i671 
=== Usages ===
v74 v85 
=== Predecessor ===
a669 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v706 lastLocationAccess: - #next: i671  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
result [v0|QWORD[.] + 27] <|@
d <@d|@=== Debug Properties ===
displacement: 27
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.haveLeftoverChar
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 1]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v702 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
v432 
=== Predecessor ===
i670 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v702 lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 v437 v439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i671 
y: i431 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i671 y: i431  <|@  <|@
f <@*|@fixed>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v510 
=== Usages ===
=== Predecessor ===
i671 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v509 #falseSuccessor: v510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: i672 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i672  <|@  <|@
f <@~|@floating>@ <|@
tid v707 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i672 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.maxBufferCapacity
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 10]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v707 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
v74 v103 i104 
=== Predecessor ===
v509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v707 lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i672 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i670 y: i672  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 v65 v122 v332 v381 j170 v311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 i67 v261 v323 i334 v118 ?306 ?129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v708 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a675 a673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.8526023080679708
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i672 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v76 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 16]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a673 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a673 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v708 
lastLocationAccess: - 
=== Succesors ===
next: f674 
=== Usages ===
v721 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v708 lastLocationAccess: - #next: f674  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
result [v7|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a673 
=== Succesors ===
=== Usages ===
f674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f674 <|@
result v8|SINGLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f32
barrierType: NONE
deoptReasonAndAction: int[-108555|0xfffffffffffe57f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:472) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: f32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v721 
lastLocationAccess: - 
=== Succesors ===
next: v91 
=== Usages ===
i83 
=== Predecessor ===
a673 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v721 lastLocationAccess: - #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32
=== Inputs ===
x: i668 
y: i667 
=== Succesors ===
=== Usages ===
v65 i67 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i668 y: i667  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i64 
y: i45 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i64 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v65 
trueValue: i5 
falseValue: i64 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v65 trueValue: i5 falseValue: i64  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(float) [bci: -1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 24]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
=== Inputs ===
value: f674 
=== Succesors ===
=== Usages ===
i84 
=== Predecessor ===
- >@ <|@
instruction <@RoundFloatToInteger|@jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode>@ value: f674  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 27]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
=== Inputs ===
x: i67 
y: i83 
=== Succesors ===
=== Usages ===
v103 i104 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i67 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i672 
y: i84 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i672 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: i32
=== Inputs ===
condition: v103 
trueValue: i672 
falseValue: i84 
=== Succesors ===
=== Usages ===
v85 ?573 v428 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v103 trueValue: i672 falseValue: i84  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i670 
y: i104 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i670 y: i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 2.033294968682986E-4
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
f674 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 45]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implFlushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 367
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?573 ?574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
tid ?573 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 397
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a1 - - - i104 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a1 - - - i104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implFlushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v427 
stateDuring: ?573 
=== Succesors ===
next: a96 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v427 stateDuring: ?573 #next: a96  <|@  <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
referencedType: [null]
returnStamp: a java.nio.ByteBuffer
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ByteBuffer.allocate(int)>
=== Inputs ===
arguments: i104 
=== Succesors ===
=== Usages ===
a96 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i104  <|@  <|@
tid ?574 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 398
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a1 
=== Succesors ===
=== Usages ===
a96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a96 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
polymorphic: false
stamp: a java.nio.ByteBuffer
targetMethod: Direct#ByteBuffer.allocate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v428 
stateDuring: ?574 
=== Succesors ===
next: v655 
=== Usages ===
a429 v657 
=== Predecessor ===
v93 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v428 stateDuring: ?574 #next: v655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
precise: true
stamp: void
=== Inputs ===
address: v705 
value: - 
stateBefore: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
a96 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v705 value: - stateBefore: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
op: Compress
stamp: n java.nio.ByteBuffer
=== Inputs ===
value: a96 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: StreamEncoder.bb
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
value: a429 
stateAfter: - 
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - value: a429 stateAfter: - #next: v657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
precise: false
stamp: void
=== Inputs ===
address: v705 
value: a96 
object: a1 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v705 value: a96 object: a1 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v657 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v90 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v86 v88 v100 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v86 v88 v100 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a187 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 133]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: CoderResult@167784470
stableDimension: 0
stamp: a!# java.nio.charset.CoderResult
stampKind: a java.lang.Object
value: Object[CoderResult@167784470]
=== Inputs ===
=== Succesors ===
=== Usages ===
a304 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j632 <|@
result long[11540|0x2d14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 11540
stableDimension: 0
stamp: i64 [11540]
stampKind: i64
value: long[11540|0x2d14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j634 j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j638 <|@
result long[12180|0x2f94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 12180
stableDimension: 0
stamp: i64 [12180]
stampKind: i64
value: long[12180|0x2f94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j634 j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
result long[12820|0x3214] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 12820
stableDimension: 0
stamp: i64 [12820]
stampKind: i64
value: long[12820|0x3214]
=== Inputs ===
=== Succesors ===
=== Usages ===
j634 j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j188 j189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
?306 ?129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v710 <|@
result [v1|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 369
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v597 i676 a678 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v15 
=== Succesors ===
next: a675 
=== Usages ===
v36 v50 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v15 #next: a675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a675 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v708 
lastLocationAccess: - 
=== Succesors ===
next: i676 
=== Usages ===
a375 v709 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v708 lastLocationAccess: - #next: i676  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
result [v23|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a675 
=== Succesors ===
=== Usages ===
i676 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i676 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-96779|0xfffffffffffe85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v709 
lastLocationAccess: - 
=== Succesors ===
next: a677 
=== Usages ===
v118 v122 
=== Predecessor ===
a675 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v709 lastLocationAccess: - #next: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a677 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v705 
lastLocationAccess: - 
=== Succesors ===
next: a678 
=== Usages ===
a377 v712 v713 v715 v716 v717 v719 v722 
=== Predecessor ===
i676 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v705 lastLocationAccess: - #next: a678  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
result [v25|DWORD[_] * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
a678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a678 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-99851|0xfffffffffffe79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?17 
guard: - 
address: v712 
lastLocationAccess: - 
=== Succesors ===
next: i679 
=== Usages ===
a393 v724 
=== Predecessor ===
a677 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?17 guard: - address: v712 lastLocationAccess: - #next: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
result [v25|DWORD[_] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i679 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
lastLocationAccess: - 
=== Succesors ===
next: i680 
=== Usages ===
v439 
=== Predecessor ===
a678 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v713 lastLocationAccess: - #next: i680  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result [v25|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i680 v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i680 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
=== Succesors ===
next: i681 
=== Usages ===
i164 
=== Predecessor ===
i679 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - #next: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
result [v25|DWORD[_] * 8 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i681 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
lastLocationAccess: - 
=== Succesors ===
next: i682 
=== Usages ===
i164 i166 i245 
=== Predecessor ===
i680 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 lastLocationAccess: - #next: i682  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result [v25|DWORD[_] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i682 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
lastLocationAccess: - 
=== Succesors ===
next: v683 
=== Usages ===
i166 v287 
=== Predecessor ===
i681 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v717 lastLocationAccess: - #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
result [v25|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
lastLocationAccess: - 
=== Succesors ===
next: i684 
=== Usages ===
v665 
=== Predecessor ===
i682 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 lastLocationAccess: - #next: i684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i684 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: i685 
=== Usages ===
v110 i158 
=== Predecessor ===
v683 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - #next: i685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i685 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: v515 
=== Usages ===
v110 i160 v259 
=== Predecessor ===
i684 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i684 
y: i685 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i684 y: i685  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v514 
=== Usages ===
=== Predecessor ===
i685 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v513 #falseSuccessor: v514  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i676 
y: i45 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i676 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.9999465205576051
stamp: void
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v570 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i676 
y: i5 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i676 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.9999999999996475
stamp: void
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v120 #falseSuccessor: v571  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v124 v126 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v124 v126 #next: v381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharsetEncoder.state
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v709 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: a686 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v709 lastLocationAccess: - value: i45 stateAfter: - #next: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a686 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v710 
lastLocationAccess: - 
=== Succesors ===
next: v699 
=== Usages ===
a385 v723 
=== Predecessor ===
v381 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v710 lastLocationAccess: - #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid a375 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
op: Uncompress
stamp: a# sun.nio.cs.UTF_8$Encoder
=== Inputs ===
value: a675 
=== Succesors ===
=== Usages ===
?129 ?306 v406 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a675  <|@  <|@
f <@~|@floating>@ <|@
tid a377 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
op: Uncompress
stamp: a java.nio.ByteBuffer
=== Inputs ===
value: a677 
=== Succesors ===
=== Usages ===
?306 v406 ?129 ?176 ?269 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a677  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: aload_0
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
values: a375 a2 a377 i5 
=== Succesors ===
=== Usages ===
v612 v699 v701 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316 values: a375 a2 a377 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
result [v34|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a686 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?129 
object: v723 
=== Succesors ===
next: i687 
=== Usages ===
=== Predecessor ===
a686 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?129 object: v723 #next: i687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v711 
lastLocationAccess: - 
=== Succesors ===
next: v523 
=== Usages ===
v437 
=== Predecessor ===
v699 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v711 lastLocationAccess: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i687 
y: i431 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i687 y: i431  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v437 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
i687 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v437 #trueSuccessor: v521 #falseSuccessor: v522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result [v26|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a678 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?129 
object: v724 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?129 object: v724 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i679 
y: i431 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i679 y: i431  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v439 
=== Succesors ===
trueSuccessor: v529 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v439 #trueSuccessor: v529 #falseSuccessor: v530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j658 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j658  <|@  <|@
f <@~|@floating>@ <|@
tid a385 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a686 
=== Succesors ===
=== Usages ===
v406 j658 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j658 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
object: a385 
=== Succesors ===
next: j660 
=== Usages ===
j659 
=== Predecessor ===
v529 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a385 #next: j660  <|@  <|@
f <@~|@floating>@ <|@
tid a393 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a678 
=== Succesors ===
=== Usages ===
v406 j660 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j660 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
object: a393 
=== Succesors ===
next: i688 
=== Usages ===
j661 
=== Predecessor ===
j658 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a393 #next: i688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i688 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
lastLocationAccess: - 
=== Succesors ===
next: i175 
=== Usages ===
i158 i160 i244 
=== Predecessor ===
j660 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 lastLocationAccess: - #next: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i684 
y: i688 
=== Succesors ===
=== Usages ===
i167 j169 ?176 i178 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i684 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid j169 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i158 
=== Succesors ===
=== Usages ===
j170 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i158  <|@  <|@
f <@~|@floating>@ <|@
tid j170 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j169 
y: i45 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j169 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j170 
y: j171 
=== Succesors ===
=== Usages ===
j659 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j170 y: j171  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
x: j188 
y: j658 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j188 y: j658  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i680 
y: i681 
=== Succesors ===
=== Usages ===
i168 j173 ?176 i179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i680 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i164 
=== Succesors ===
=== Usages ===
j189 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i164  <|@  <|@
f <@~|@floating>@ <|@
tid j189 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j173 
y: j171 
=== Succesors ===
=== Usages ===
j661 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j173 y: j171  <|@  <|@
f <@~|@floating>@ <|@
tid j661 <|@
result v50|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64
=== Inputs ===
x: j189 
y: j660 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j189 y: j660  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i681 
y: i682 
=== Succesors ===
=== Usages ===
i168 ?176 v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i681 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 74]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i166 
y: i164 
=== Succesors ===
=== Usages ===
v242 i243 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i166 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i685 
y: i688 
=== Succesors ===
=== Usages ===
i167 ?176 v180 v406 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i685 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i160 
y: i158 
=== Succesors ===
=== Usages ===
v242 i243 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i160 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i168 
y: i167 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i168 y: i167  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
condition: v242 
trueValue: i168 
falseValue: i167 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v242 trueValue: i168 falseValue: i167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j659 
dst: j661 
len: i243 
=== Succesors ===
next: v183 
=== Usages ===
?177 i178 i179 
=== Predecessor ===
i688 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j659 dst: j661 len: i243 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:458) [bci: 96]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i164 
y: i175 
=== Succesors ===
=== Usages ===
v406 i245 ?269 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i164 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:457) [bci: 89]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i158 
y: i175 
=== Succesors ===
=== Usages ===
v180 v406 i244 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i158 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i178 
y: i160 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i178 y: i160  <|@  <|@
tid ?306 <|@
d <@d|@=== Debug Properties ===
bci: 57
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
values: a375 a2 a377 i5 
=== Succesors ===
=== Usages ===
?136 ?301 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316 values: a375 a2 a377 i5  <|@  <|@
tid ?301 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?306 
=== Succesors ===
=== Usages ===
?176 ?575 ?300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?306  <|@  <|@
f <@*|@fixed>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 8.594464037114946E-6
stamp: void
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i175 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v182 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 106]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a185  <|@  <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
referencedType: [null]
returnStamp: a# java.nio.charset.CoderResult
signature: [HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>, UnresolvedJavaType<Ljava/nio/CharBuffer;>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/nio/ByteBuffer;>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>
=== Inputs ===
arguments: a375 a2 a385 i178 i160 a377 a393 i179 i166 
=== Succesors ===
=== Usages ===
a185 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a375 a2 a385 i178 i160 a377 a393 i179 i166  <|@  <|@
tid ?575 <|@
d <@d|@=== Debug Properties ===
bci: 120
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 461
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?301 
=== Succesors ===
=== Usages ===
a185 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 120
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
polymorphic: false
stamp: a# java.nio.charset.CoderResult
targetMethod: Direct#UTF_8$Encoder.encodeArrayLoopSlow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v406 
stateDuring: ?575 
=== Succesors ===
next: v303 
=== Usages ===
a304 
=== Predecessor ===
v182 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v406 stateDuring: ?575 #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
a185 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 124]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i178 
y: i688 
=== Succesors ===
=== Usages ===
?257 v259 v261 v264 v410 ?267 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i178 y: i688  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i685 
y: i244 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i685 y: i244  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v533 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v533 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
result int[-136211|0xfffffffffffdebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -136211
stableDimension: 0
stamp: i32 [-136211]
stampKind: i32
value: int[-136211|0xfffffffffffdebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v533 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i5 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v261 
=== Succesors ===
trueSuccessor: v537 
falseSuccessor: v538 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v261 #trueSuccessor: v537 #falseSuccessor: v538  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
result int[-137235|0xfffffffffffde7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -137235
stableDimension: 0
stamp: i32 [-137235]
stampKind: i32
value: int[-137235|0xfffffffffffde7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v537 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i689 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v264 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v718 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i689 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i689  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
i689 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v541 #falseSuccessor: v542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
result int[-138259|0xfffffffffffde3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -138259
stableDimension: 0
stamp: i32 [-138259]
stampKind: i32
value: int[-138259|0xfffffffffffde3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
v541 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i633 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-138259 - -136211] bits:1...1011110xx1111101101
valueDescription: i32
=== Inputs ===
merge: v629 
values: i631 i637 i640 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: i631 i637 i640  <|@  <|@
f <@~|@floating>@ <|@
tid j634 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [11540 - 12820] bits:0...01xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v629 
values: j632 j638 j641 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v629 values: j632 j638 j641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v630 v636 v639 
=== Succesors ===
next: v635 
=== Usages ===
i633 j634 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v630 v636 v639 #next: v635  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: UTF_8.java
sourceLine: 456
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?301 
values: a375 a2 a377 a385 i158 i160 a393 i164 i166 
=== Succesors ===
=== Usages ===
?177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?301 values: a375 a2 a377 a385 i158 i160 a393 i164 i166  <|@  <|@
tid ?177 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: ireturn
code: ResolvedJavaMethodBytecode<System$2.encodeASCII(char[], int, byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: System.java
sourceLine: 2506
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?176 
values: i175 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?176 values: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?177 
actionAndReason: i633 
speculation: j634 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?177 actionAndReason: i633 speculation: j634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
value: i244 
stateAfter: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - value: i244 stateAfter: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v683 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}]
keySuccessors: [I@427d9d40
keys: [HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [1.0, 0.0]
stamp: void
=== Inputs ===
value: v665 
=== Succesors ===
successors: v279 v281 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v665 #successors: v279 v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 17]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
=== Inputs ===
x: i179 
y: i681 
=== Succesors ===
=== Usages ===
v287 v289 v292 v414 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i179 y: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i682 
y: i245 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i682 y: i245  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid i644 <|@
result int[-139283|0xfffffffffffddfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -139283
stableDimension: 0
stamp: i32 [-139283]
stampKind: i32
value: int[-139283|0xfffffffffffddfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i245 
y: i5 
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i245 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v549 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid i652 <|@
result int[-140307|0xfffffffffffddbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -140307
stableDimension: 0
stamp: i32 [-140307]
stampKind: i32
value: int[-140307|0xfffffffffffddbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v549 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i690 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i690  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result [v25|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a677 
=== Succesors ===
=== Usages ===
i690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
lastLocationAccess: - 
=== Succesors ===
next: v555 
=== Usages ===
v292 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 lastLocationAccess: - #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i245 
y: i690 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i245 y: i690  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v553 
falseSuccessor: v554 
=== Usages ===
=== Predecessor ===
i690 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v553 #falseSuccessor: v554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid i654 <|@
result int[-141331|0xfffffffffffdd7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -141331
stableDimension: 0
stamp: i32 [-141331]
stampKind: i32
value: int[-141331|0xfffffffffffdd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v555 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
lastLocationAccess: - 
value: i245 
stateAfter: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 lastLocationAccess: - value: i245 stateAfter: - #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a304 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# java.nio.charset.CoderResult
valueDescription: a java.lang.Object
=== Inputs ===
merge: v302 
values: a185 a187 
=== Succesors ===
=== Usages ===
?30 v720 ?136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v302 values: a185 a187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v303 v305 
=== Succesors ===
next: i691 
=== Usages ===
a304 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v303 v305 #next: i691  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: areturn
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?306 
values: a304 
=== Succesors ===
=== Usages ===
v726 i691 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?306 values: a304  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
result [v68|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a304 
index: - 
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a304 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i691 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-106251|0xfffffffffffe60f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CoderResult.type
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?136 
guard: - 
address: v720 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
v311 v323 
=== Predecessor ===
v302 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?136 guard: - address: v720 lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i691 
y: i45 
=== Succesors ===
=== Usages ===
v131 v559 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i691 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:119) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i691 
y: i5 
=== Succesors ===
=== Usages ===
v39 v568 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i691 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 0.9999914009515922
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
i691 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v566 #falseSuccessor: v130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:595) [bci: 96]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 82]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v567 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v135 #falseSuccessor: v567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:592) [bci: 85]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v318 v319 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v318 v319 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 46]
profileData: PROFILED designatedSuccessorProbability: 0.9999913905476284
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v38 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v36 #falseSuccessor: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v311 
=== Succesors ===
trueSuccessor: v557 
falseSuccessor: v558 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v311 #trueSuccessor: v557 #falseSuccessor: v558  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?576 <|@
d <@d|@=== Debug Properties ===
bci: 131
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 381
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
bci: 131
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v418 
stateDuring: ?576 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v418 stateDuring: ?576 #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
stamp: void
=== Inputs ===
loopBegin: v16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v16 
=== Succesors ===
next: i692 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v16 #next: i692  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i692 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v703 
lastLocationAccess: - 
=== Succesors ===
next: i693 
=== Usages ===
i331 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v703 lastLocationAccess: - #next: i693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v704 
lastLocationAccess: - 
=== Succesors ===
next: v564 
=== Usages ===
i331 
=== Predecessor ===
i692 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v704 lastLocationAccess: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32
=== Inputs ===
x: i692 
y: i693 
=== Succesors ===
=== Usages ===
v332 i334 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i692 y: i693  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i331 
y: i45 
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i331 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v332 
trueValue: i5 
falseValue: i331 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v332 trueValue: i5 falseValue: i331  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i334 
y: i45 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i334 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v562 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
i693 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v562 #falseSuccessor: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
tid ?37 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: getstatic
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
sourceFile: StreamEncoder.java
sourceLine: 372
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
reason: UnreachedCode
speculation: {0x0000000000000794[index: 60, len: 20, hash: 0x92b47afe]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 83]}
stamp: void
=== Inputs ===
stateBefore: ?37 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:386) [bci: 144]
stamp: void
=== Inputs ===
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:386) [bci: 144]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v559 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: astore_2
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a304 a1 a2 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a304 a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x92b47a34]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 137]}
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 88]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 565
mayConvertToGuard: true
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
reason: UnreachedCode
speculation: {0x0000000000000c94[index: 100, len: 20, hash: 0x1038279]: UnreachedCode@6[HotSpotMethod<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>, 122]}
stamp: void
=== Inputs ===
stateBefore: ?136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j650 <|@
result long[13460|0x3494] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 13460
stableDimension: 0
stamp: i64 [13460]
stampKind: i64
value: long[13460|0x3494]
=== Inputs ===
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i649 <|@
result int[-71731|0xfffffffffffee7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -71731
stableDimension: 0
stamp: i32 [-71731]
stampKind: i32
value: int[-71731|0xfffffffffffee7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i645 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v642 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i645 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-141331 - -71731] bits:1...1xx11xxxx1111x01101
valueDescription: i32
=== Inputs ===
merge: v642 
values: i644 i649 i652 i654 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v642 values: i644 i649 i652 i654  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [11540 - 13460] bits:0...01xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v642 
values: j632 j650 j638 j641 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v642 values: j632 j650 j638 j641  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v643 v648 v651 v653 
=== Succesors ===
next: v647 
=== Usages ===
i645 j646 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v643 v648 v651 v653 #next: v647  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 130
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 463
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?301 
=== Succesors ===
=== Usages ===
?269 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?301  <|@  <|@
tid ?269 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
localsSize: 4
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 82
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?300 
values: - - a377 i179 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?300 values: - - a377 i179  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?269 
values: a2 i244 
=== Succesors ===
=== Usages ===
?268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?269 values: a2 i244  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1551
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?257 
values: a2 
=== Succesors ===
=== Usages ===
?267 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?257 values: a2  <|@  <|@
tid ?267 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
sourceFile: Buffer.java
sourceLine: 330
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?268 
values: a2 i244 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?268 values: a2 i244  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?267 
actionAndReason: i645 
speculation: j646 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?267 actionAndReason: i645 speculation: j646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
result int[-135187|0xfffffffffffdefed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -135187
stableDimension: 0
stamp: i32 [-135187]
stampKind: i32
value: int[-135187|0xfffffffffffdefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
f <@~|@floating>@ <|@
tid j609 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
result int[-133139|0xfffffffffffdf7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -133139
stableDimension: 0
stamp: i32 [-133139]
stampKind: i32
value: int[-133139|0xfffffffffffdf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v522 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i610 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-135187 - -133139] bits:1...101111xx11111101101
valueDescription: i32
=== Inputs ===
merge: v606 
values: i617 i619 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v606 values: i617 i619  <|@  <|@
f <@~|@floating>@ <|@
tid j611 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [5140 - 5780] bits:0...0101x0x0010100
valueDescription: i64
=== Inputs ===
merge: v606 
values: j609 j615 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v606 values: j609 j615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v616 v618 
=== Succesors ===
next: v612 
=== Usages ===
i610 j611 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v616 v618 #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?129 
actionAndReason: i610 
speculation: j611 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?129 actionAndReason: i610 speculation: j611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid j605 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i604 <|@
result int[-145683|0xfffffffffffdc6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -145683
stableDimension: 0
stamp: i32 [-145683]
stampKind: i32
value: int[-145683|0xfffffffffffdc6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid j602 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i601 <|@
result int[-131091|0xfffffffffffdffed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
rawvalue: -131091
stableDimension: 0
stamp: i32 [-131091]
stampKind: i32
value: int[-131091|0xfffffffffffdffed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i595 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i595 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i32 [-145683 - -131091] bits:1...10111xxx11x11101101
valueDescription: i32
=== Inputs ===
merge: v592 
values: i601 i604 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v592 values: i601 i604  <|@  <|@
f <@~|@floating>@ <|@
tid j596 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: i64 [660 - 2580] bits:0...0x010x0010100
valueDescription: i64
=== Inputs ===
merge: v592 
values: j602 j605 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v592 values: j602 j605  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v603 
=== Succesors ===
next: v597 
=== Usages ===
i595 j596 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v603 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
stamp: void
=== Inputs ===
stateBefore: ?17 
actionAndReason: i595 
speculation: j596 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?17 actionAndReason: i595 speculation: j596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 508
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x92b47ab2]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  402  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  708  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  902  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  384  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  402  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  708  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  902  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[400, 402[[606, 607[[706, 708[[896, 897[[900, 902[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|d [0, 1[[102, 103[[398, 400[[606, 607[[692, 707[[896, 897[[900, 901[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v50|q [0, 32[[396, 400[[606, 607[[690, 707[[896, 897[[900, 901[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[606, 607[[706, 707[[896, 897[[900, 901[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 30[[394, 400[[604, 607[[688, 707[[894, 897[[898, 901[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v36|q [0, 1[[606, 607[[698, 707[[896, 897[[900, 901[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v58|d [0, 1[[400, 401[[606, 607[[694, 707[[896, 897[[900, 901[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v53|d [0, 1[[400, 401[[606, 607[[696, 707[[896, 897[[900, 901[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [30, 744[[762, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[30 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister 604 ShouldHaveRegister 609 LiveAtLoopEnd 894 ShouldHaveRegister 904 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [32, 744[[762, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 250 MustHaveRegister 258 MustHaveRegister 362 MustHaveRegister 448 MustHaveRegister 470 MustHaveRegister 609 LiveAtLoopEnd 690 ShouldHaveRegister 732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 95[34 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 94[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [40, 110[40 MustHaveRegister 58 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [56, 109[56 MustHaveRegister 58 MustHaveRegister 106 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v8|S SINGLE "[v8|S]" v8|S -1 [92, 102[92 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v3|d [94, 100[94 MustHaveRegister 96 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v9|d [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v8|S [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[v14|d]" v14|d v10|d [104, 108[104 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [108, 112[[762, 898[108 MustHaveRegister 110 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q rax|q [902, 911[902 MustHaveRegister 906 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[v18|q]" v18|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v19|d DWORD "[v19|d]" v19|d v16|q [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[v21|q]" v21|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[v22|q]" v22|q -1 [142, 712[142 MustHaveRegister 534 ShouldHaveRegister 609 LiveAtLoopEnd  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [178, 252[[610, 632[178 MustHaveRegister 180 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [180, 214[[610, 620[180 MustHaveRegister 212 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [182, 532[[610, 632[182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 254 MustHaveRegister 518 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [184, 358[[610, 632[184 MustHaveRegister 272 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [186, 274[[610, 632[186 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [188, 374[[610, 632[188 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [190, 493[[610, 632[190 MustHaveRegister 374 ShouldHaveRegister 382 ShouldHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [192, 494[[610, 632[192 MustHaveRegister 382 ShouldHaveRegister 494 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [194, 474[[610, 632[194 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [196, 364[[610, 632[196 MustHaveRegister 200 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [198, 424[[610, 632[198 MustHaveRegister 200 MustHaveRegister 386 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [250, 354[250 MustHaveRegister 256 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v23|d [252, 554[[632, 644[[654, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[252 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v25|d [254, 554[[632, 644[[654, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[254 MustHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v34|d [354, 450[[654, 692[[1052, 1062[[1094, 1104[[1168, 1199[354 MustHaveRegister 356 ShouldHaveRegister 692 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|q [356, 372[356 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v26|d [358, 450[[654, 700[[1052, 1062[[1094, 1104[[1168, 1199[358 MustHaveRegister 360 ShouldHaveRegister 700 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|q [360, 380[360 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [362, 423[362 MustHaveRegister 364 ShouldHaveRegister 386 ShouldHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d v32|d [364, 450[[1052, 1062[[1094, 1104[[1168, 1199[364 MustHaveRegister 366 ShouldHaveRegister 388 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|q [372, 394[372 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v28|d [374, 450[[1052, 1062[[1094, 1104[[1168, 1199[374 MustHaveRegister 376 ShouldHaveRegister 384 ShouldHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v49|q [380, 396[380 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v30|d [382, 450[[654, 704[[1052, 1062[[1094, 1104[[1168, 1199[382 MustHaveRegister 384 MustHaveRegister 704 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d v51|d [384, 393[384 MustHaveRegister 390 ShouldHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v33|d [386, 450[[654, 696[[1052, 1062[[1094, 1104[[1168, 1199[386 MustHaveRegister 388 MustHaveRegister 408 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v53|d [388, 392[388 MustHaveRegister 390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v54|d [392, 398[392 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d rax|q [402, 450[[1052, 1062[[1094, 1104[[1168, 1199[402 MustHaveRegister 404 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v56|d [404, 520[[654, 702[[978, 988[[1010, 1030[[1104, 1135[404 MustHaveRegister 492 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v42|d [406, 422[[654, 694[406 MustHaveRegister 408 ShouldHaveRegister 422 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q rax|q [708, 711[708 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v58|d [422, 520[[978, 988[[1010, 1030[[1104, 1135[422 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 448 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [1178, 1194[1194 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [1178, 1196[1196 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v31|d [474, 478[474 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d v57|d [492, 532[492 MustHaveRegister 494 MustHaveRegister 506 MustHaveRegister 518 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v22|q [534, 537[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v67|q [538, 588[[632, 654[[956, 977[[1062, 1083[550 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [550, 586[[632, 654[550 MustHaveRegister 552 MustHaveRegister 574 MustHaveRegister 586 ShouldHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d v70|d [734, 740[734 MustHaveRegister 736 ShouldHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v71|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d -1 [738, 741[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d -1 [1114, 1130[1130 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [1114, 1132[1132 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d -1 [1146, 1162[1162 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [1146, 1164[1164 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [924, 940[940 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [924, 942[942 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[400, 402[[606, 607[[706, 708[[896, 897[[900, 902[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|d [0, 1[[102, 103[[398, 400[[606, 607[[692, 707[[896, 897[[900, 901[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v50|q [0, 32[[396, 400[[606, 607[[690, 707[[896, 897[[900, 901[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[606, 607[[706, 707[[896, 897[[900, 901[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 30[[394, 400[[604, 607[[688, 707[[894, 897[[898, 901[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v36|q [0, 1[[606, 607[[698, 707[[896, 897[[900, 901[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v58|d [0, 1[[400, 401[[606, 607[[694, 707[[896, 897[[900, 901[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v53|d [0, 1[[400, 401[[606, 607[[696, 707[[896, 897[[900, 901[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 276[30 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 395[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 250 MustHaveRegister 258 MustHaveRegister 362 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rcx|d]" v2|d -1 [34, 95[34 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [36, 94[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [40, 110[40 MustHaveRegister 58 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d -1 [56, 109[56 MustHaveRegister 58 MustHaveRegister 106 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v8|S SINGLE "[xmm0|S]" v8|S -1 [92, 102[92 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v3|d [94, 100[94 MustHaveRegister 96 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d v9|d [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rcx|d]" v11|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d v8|S [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r10|d]" v14|d v10|d [104, 108[104 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r10|d]" v15|d v14|d [108, 112[108 MustHaveRegister 110 MustHaveRegister  "OneSpillStore"
  v16|q QWORD "[rax|q]" v16|q rax|q [902, 911[902 MustHaveRegister 906 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[r11|q]" v18|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v19|d DWORD "[r10|d]" v19|d v16|q [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[r11|q]" v21|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rbx|q]" v22|q -1 [142, 146[142 MustHaveRegister  "SpillInDominator"
  v23|d DWORD "[r10|d]" v23|d -1 [178, 252[[610, 632[178 MustHaveRegister 180 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d -1 [180, 214[[610, 620[180 MustHaveRegister 212 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdi|d]" v25|d -1 [182, 276[182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 254 MustHaveRegister  "OneSpillStore"
  v26|d DWORD "[r8|d]" v26|d -1 [184, 358[[610, 632[184 MustHaveRegister 272 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r9|d]" v27|d -1 [186, 274[[610, 632[186 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d -1 [188, 374[[610, 632[188 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbp|d]" v29|d -1 [190, 387[190 MustHaveRegister 374 ShouldHaveRegister 382 ShouldHaveRegister  "OneSpillStore"
  v30|d DWORD "[r13|d]" v30|d -1 [192, 383[192 MustHaveRegister 382 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [194, 224[194 MustHaveRegister  "OneSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [196, 364[[610, 632[196 MustHaveRegister 200 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d -1 [198, 424[[610, 632[198 MustHaveRegister 200 MustHaveRegister 386 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d -1 [250, 354[250 MustHaveRegister 256 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v23|d [252, 276[252 MustHaveRegister  "SpillInDominator"
  v36|q QWORD "[r14|q]" v36|q v25|d [254, 276[254 MustHaveRegister  "SpillInDominator"
  v37|q QWORD "[r11|q]" v37|q v34|d [354, 399[354 MustHaveRegister 356 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q v37|q [356, 372[356 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q v26|d [358, 399[358 MustHaveRegister 360 ShouldHaveRegister  "OneSpillStore"
  v40|q QWORD "[r14|q]" v40|q v39|q [360, 380[360 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdi|d]" v41|d -1 [362, 423[362 MustHaveRegister 364 ShouldHaveRegister 386 ShouldHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d v32|d [364, 399[364 MustHaveRegister 366 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q -1 [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v43|q [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r10|q]" v45|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[r10|q]" v46|q v45|q [372, 394[372 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d v28|d [374, 397[374 MustHaveRegister 376 ShouldHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r9|q]" v48|q -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r9|q]" v49|q -1 [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r9|q]" v50|q v49|q [380, 396[380 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r14|d]" v51|d v30|d [382, 385[382 MustHaveRegister 384 MustHaveRegister  "OneSpillStore"
  v52|d DWORD "[r13|d]" v52|d v51|d [384, 393[384 MustHaveRegister 390 ShouldHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r14|d]" v53|d v33|d [386, 450[[654, 696[[1052, 1062[[1094, 1104[[1168, 1199[386 MustHaveRegister 388 MustHaveRegister 408 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rbp|d]" v54|d v53|d [388, 392[388 MustHaveRegister 390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rbp|d]" v55|d v54|d [392, 398[392 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rax|d]" v56|d rax|q [402, 450[[1052, 1062[[1094, 1104[[1168, 1199[402 MustHaveRegister 404 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v56|d [404, 520[[654, 702[[978, 988[[1010, 1030[[1104, 1135[404 MustHaveRegister 492 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v42|d [406, 422[[654, 694[406 MustHaveRegister 408 ShouldHaveRegister 422 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q rax|q [708, 711[708 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r11|d]" v60|d v58|d [422, 520[422 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 448 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [1178, 1194[1194 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r9|q]" v62|q -1 [1178, 1196[1196 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r14|q]" v63|q v31|d [474, 478[474 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rsi|d]" v66|d v57|d [492, 532[492 MustHaveRegister 494 MustHaveRegister 506 MustHaveRegister 518 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q v22|q [534, 537[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rbx|q]" v68|q v67|q [538, 588[[632, 654[[956, 977[[1062, 1083[550 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d -1 [550, 586[[632, 654[550 MustHaveRegister 552 MustHaveRegister 574 MustHaveRegister 586 ShouldHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rsi|d]" v71|d v70|d [734, 740[734 MustHaveRegister 736 ShouldHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rsi|d]" v72|d v71|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [738, 741[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [1114, 1130[1130 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r9|q]" v75|q -1 [1114, 1132[1132 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d -1 [1146, 1162[1162 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[r11|q]" v77|q -1 [1146, 1164[1164 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [924, 940[940 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q -1 [924, 942[942 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[vstack:8|q]" v0|q v0|q [276, 393[ "SpillInDominator"
  v81|q QWORD "[vstack:9|q]" v1|q v1|q [395, 399[ "SpillInDominator"
  v82|d DWORD "[vstack:13|d]" v15|d v15|d [762, 895[ "OneSpillStore"
  v83|q QWORD "[vstack:0|q]" v22|q v22|q [588, 605[ "SpillInDominator"
  v84|q QWORD "[vstack:0|q]" v22|q v22|q [146, 588[534 ShouldHaveRegister  "SpillInDominator"
  v85|q QWORD "[vstack:4|q]" v35|q v35|q [276, 399[ "SpillInDominator"
  v86|q QWORD "[vstack:2|q]" v36|q v36|q [705, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[ "SpillInDominator"
  v87|d DWORD "[r14|d]" v31|d v31|d [450, 474[[610, 632[474 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[vstack:1|d]" v31|d v31|d [224, 450[ "OneSpillStore"
  v89|q QWORD "[vstack:8|q]" v0|q v0|q [393, 588[ "SpillInDominator"
  v90|q QWORD "[vstack:4|q]" v35|q v35|q [399, 554[[632, 644[[654, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[688 ShouldHaveRegister  "SpillInDominator"
  v91|q QWORD "[vstack:10|q]" v37|q v37|q [399, 450[[654, 692[[1052, 1062[[1094, 1104[[1168, 1178[692 ShouldHaveRegister  "OneSpillStore"
  v92|q QWORD "[vstack:11|q]" v39|q v39|q [399, 450[ "OneSpillStore"
  v93|q QWORD "[rbx|q]" v36|q v36|q [654, 705[698 ShouldHaveRegister  "SpillInDominator"
  v94|q QWORD "[vstack:2|q]" v36|q v36|q [276, 554[[632, 644[ "SpillInDominator"
  v95|d DWORD "[rdi|d]" v25|d v25|d [508, 532[[610, 632[518 MustHaveRegister 532 MustHaveRegister  "OneSpillStore"
  v96|d DWORD "[vstack:3|d]" v25|d v25|d [276, 508[ "OneSpillStore"
  v97|d DWORD "[rbp|d]" v42|d v42|d [399, 450[[1052, 1062[[1094, 1104[[1168, 1199[406 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r13|d]" v47|d v47|d [397, 450[[1052, 1062[[1094, 1104[[1168, 1199[404 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[vstack:5|d]" v30|d v30|d [383, 494[[610, 632[494 ShouldHaveRegister  "OneSpillStore"
  v100|d DWORD "[rax|d]" v51|d v51|d [654, 704[704 MustHaveRegister  "OneSpillStore"
  v101|d DWORD "[vstack:6|d]" v51|d v51|d [385, 450[ "OneSpillStore"
  v102|d DWORD "[vstack:7|d]" v29|d v29|d [387, 493[[610, 632[492 ShouldHaveRegister  "OneSpillStore"
  v103|q QWORD "[vstack:8|q]" v0|q v0|q [605, 744[609 LiveAtLoopEnd  "SpillInDominator"
  v104|q QWORD "[vstack:9|q]" v1|q v1|q [399, 438[ "SpillInDominator"
  v105|q QWORD "[r10|q]" v0|q v0|q [588, 605[604 ShouldHaveRegister  "SpillInDominator"
  v106|q QWORD "[rdx|q]" v1|q v1|q [438, 588[448 MustHaveRegister 470 MustHaveRegister  "SpillInDominator"
  v107|q QWORD "[rdi|q]" v35|q v35|q [1178, 1199[ "SpillInDominator"
  v108|q QWORD "[rbx|q]" v37|q v37|q [1178, 1199[ "OneSpillStore"
  v109|q QWORD "[r8|q]" v39|q v39|q [654, 693[ "OneSpillStore"
  v110|q QWORD "[vstack:9|q]" v1|q v1|q [588, 605[ "SpillInDominator"
  v111|q QWORD "[vstack:9|q]" v1|q v1|q [605, 712[609 LiveAtLoopEnd 690 ShouldHaveRegister  "SpillInDominator"
  v112|q QWORD "[vstack:0|q]" v22|q v22|q [605, 712[609 LiveAtLoopEnd  "SpillInDominator"
  v113|q QWORD "[rdx|q]" v1|q v1|q [712, 744[732 MustHaveRegister 734 MustHaveRegister  "SpillInDominator"
  v114|q QWORD "[rsi|q]" v0|q v0|q [762, 893[ "SpillInDominator"
  v115|q QWORD "[rbp|q]" v39|q v39|q [693, 700[700 MustHaveRegister  "OneSpillStore"
  v116|d DWORD "[r10|d]" v51|d v51|d [1052, 1062[[1094, 1104[[1168, 1199[ "OneSpillStore"
  v117|q QWORD "[r8|q]" v39|q v39|q [1052, 1062[[1094, 1104[[1168, 1199[ "OneSpillStore"
  v118|q QWORD "[rcx|q]" v36|q v36|q [1178, 1199[ "SpillInDominator"
  v119|q QWORD "[vstack:9|q]" v1|q v1|q [762, 895[ "SpillInDominator"
  v120|q QWORD "[r11|q]" v0|q v0|q [893, 895[894 ShouldHaveRegister  "SpillInDominator"
  v121|d DWORD "[vstack:13|d]" v15|d v15|d [895, 898[898 ShouldHaveRegister  "OneSpillStore"
  v122|q QWORD "[vstack:9|q]" v1|q v1|q [895, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[ "SpillInDominator"
  v123|q QWORD "[vstack:8|q]" v0|q v0|q [895, 903[ "SpillInDominator"
  v124|d DWORD "[r11|d]" v60|d v60|d [978, 988[[1010, 1030[[1104, 1135[ "NoSpillStore"
  v125|q QWORD "[rsi|q]" v0|q v0|q [903, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[904 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "SpillInDominator"
  v126|q QWORD "[rdx|q]" v1|q v1|q [1178, 1199[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = STACKMOVE (input: v81|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  402  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = STACKMOVE (input: v110|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  708  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:14|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  902  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[400, 402[[606, 607[[706, 708[[896, 897[[900, 902[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|d [0, 1[[102, 103[[398, 400[[606, 607[[692, 707[[896, 897[[900, 901[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v50|q [0, 32[[396, 400[[606, 607[[690, 707[[896, 897[[900, 901[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[606, 607[[706, 707[[896, 897[[900, 901[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 30[[394, 400[[604, 607[[688, 707[[894, 897[[898, 901[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v36|q [0, 1[[606, 607[[698, 707[[896, 897[[900, 901[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v58|d [0, 1[[400, 401[[606, 607[[694, 707[[896, 897[[900, 901[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v53|d [0, 1[[400, 401[[606, 607[[696, 707[[896, 897[[900, 901[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 276[30 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 395[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 250 MustHaveRegister 258 MustHaveRegister 362 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rcx|d]" v2|d -1 [34, 95[34 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [36, 94[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [40, 110[40 MustHaveRegister 58 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d -1 [56, 109[56 MustHaveRegister 58 MustHaveRegister 106 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v8|S SINGLE "[xmm0|S]" v8|S -1 [92, 102[92 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v3|d [94, 100[94 MustHaveRegister 96 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d v9|d [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rcx|d]" v11|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d v8|S [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r10|d]" v14|d v10|d [104, 108[104 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r10|d]" v15|d v14|d [108, 112[108 MustHaveRegister 110 MustHaveRegister  "OneSpillStore"
  v16|q QWORD "[rax|q]" v16|q rax|q [902, 911[902 MustHaveRegister 906 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[r11|q]" v18|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v19|d DWORD "[r10|d]" v19|d v16|q [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[r11|q]" v21|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rbx|q]" v22|q -1 [142, 146[142 MustHaveRegister  "StoreAtDefinition"
  v23|d DWORD "[r10|d]" v23|d -1 [178, 252[[610, 632[178 MustHaveRegister 180 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d -1 [180, 214[[610, 620[180 MustHaveRegister 212 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdi|d]" v25|d -1 [182, 276[182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 254 MustHaveRegister  "OneSpillStore"
  v26|d DWORD "[r8|d]" v26|d -1 [184, 358[[610, 632[184 MustHaveRegister 272 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r9|d]" v27|d -1 [186, 274[[610, 632[186 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d -1 [188, 374[[610, 632[188 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbp|d]" v29|d -1 [190, 387[190 MustHaveRegister 374 ShouldHaveRegister 382 ShouldHaveRegister  "OneSpillStore"
  v30|d DWORD "[r13|d]" v30|d -1 [192, 383[192 MustHaveRegister 382 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [194, 224[194 MustHaveRegister  "OneSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [196, 364[[610, 632[196 MustHaveRegister 200 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d -1 [198, 424[[610, 632[198 MustHaveRegister 200 MustHaveRegister 386 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d -1 [250, 354[250 MustHaveRegister 256 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v23|d [252, 276[252 MustHaveRegister  "StoreAtDefinition"
  v36|q QWORD "[r14|q]" v36|q v25|d [254, 276[254 MustHaveRegister  "StoreAtDefinition"
  v37|q QWORD "[r11|q]" v37|q v34|d [354, 399[354 MustHaveRegister 356 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q v37|q [356, 372[356 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q v26|d [358, 399[358 MustHaveRegister 360 ShouldHaveRegister  "OneSpillStore"
  v40|q QWORD "[r14|q]" v40|q v39|q [360, 380[360 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdi|d]" v41|d -1 [362, 423[362 MustHaveRegister 364 ShouldHaveRegister 386 ShouldHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d v32|d [364, 399[364 MustHaveRegister 366 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q -1 [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v43|q [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r10|q]" v45|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[r10|q]" v46|q v45|q [372, 394[372 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d v28|d [374, 397[374 MustHaveRegister 376 ShouldHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r9|q]" v48|q -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r9|q]" v49|q -1 [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r9|q]" v50|q v49|q [380, 396[380 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r14|d]" v51|d v30|d [382, 385[382 MustHaveRegister 384 MustHaveRegister  "OneSpillStore"
  v52|d DWORD "[r13|d]" v52|d v51|d [384, 393[384 MustHaveRegister 390 ShouldHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r14|d]" v53|d v33|d [386, 450[[654, 696[[1052, 1062[[1094, 1104[[1168, 1199[386 MustHaveRegister 388 MustHaveRegister 408 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rbp|d]" v54|d v53|d [388, 392[388 MustHaveRegister 390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rbp|d]" v55|d v54|d [392, 398[392 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rax|d]" v56|d rax|q [402, 450[[1052, 1062[[1094, 1104[[1168, 1199[402 MustHaveRegister 404 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v56|d [404, 520[[654, 702[[978, 988[[1010, 1030[[1104, 1135[404 MustHaveRegister 492 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v42|d [406, 422[[654, 694[406 MustHaveRegister 408 ShouldHaveRegister 422 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q rax|q [708, 711[708 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r11|d]" v60|d v58|d [422, 520[422 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 448 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [1178, 1194[1194 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r9|q]" v62|q -1 [1178, 1196[1196 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r14|q]" v63|q v31|d [474, 478[474 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rsi|d]" v66|d v57|d [492, 532[492 MustHaveRegister 494 MustHaveRegister 506 MustHaveRegister 518 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q v22|q [534, 537[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rbx|q]" v68|q v67|q [538, 588[[632, 654[[956, 977[[1062, 1083[550 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d -1 [550, 586[[632, 654[550 MustHaveRegister 552 MustHaveRegister 574 MustHaveRegister 586 ShouldHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rsi|d]" v71|d v70|d [734, 740[734 MustHaveRegister 736 ShouldHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rsi|d]" v72|d v71|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [738, 741[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [1114, 1130[1130 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r9|q]" v75|q -1 [1114, 1132[1132 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d -1 [1146, 1162[1162 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[r11|q]" v77|q -1 [1146, 1164[1164 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [924, 940[940 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q -1 [924, 942[942 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[vstack:8|q]" v0|q v0|q [276, 393[ "StoreAtDefinition"
  v81|q QWORD "[vstack:9|q]" v1|q v1|q [395, 399[ "StoreAtDefinition"
  v82|d DWORD "[vstack:13|d]" v15|d v15|d [762, 895[ "OneSpillStore"
  v83|q QWORD "[vstack:0|q]" v22|q v22|q [588, 605[ "StoreAtDefinition"
  v84|q QWORD "[vstack:0|q]" v22|q v22|q [146, 588[534 ShouldHaveRegister  "StoreAtDefinition"
  v85|q QWORD "[vstack:4|q]" v35|q v35|q [276, 399[ "StoreAtDefinition"
  v86|q QWORD "[vstack:2|q]" v36|q v36|q [705, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[ "StoreAtDefinition"
  v87|d DWORD "[r14|d]" v31|d v31|d [450, 474[[610, 632[474 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[vstack:1|d]" v31|d v31|d [224, 450[ "OneSpillStore"
  v89|q QWORD "[vstack:8|q]" v0|q v0|q [393, 588[ "StoreAtDefinition"
  v90|q QWORD "[vstack:4|q]" v35|q v35|q [399, 554[[632, 644[[654, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[688 ShouldHaveRegister  "StoreAtDefinition"
  v91|q QWORD "[vstack:10|q]" v37|q v37|q [399, 450[[654, 692[[1052, 1062[[1094, 1104[[1168, 1178[692 ShouldHaveRegister  "OneSpillStore"
  v92|q QWORD "[vstack:11|q]" v39|q v39|q [399, 450[ "OneSpillStore"
  v93|q QWORD "[rbx|q]" v36|q v36|q [654, 705[698 ShouldHaveRegister  "StoreAtDefinition"
  v94|q QWORD "[vstack:2|q]" v36|q v36|q [276, 554[[632, 644[ "StoreAtDefinition"
  v95|d DWORD "[rdi|d]" v25|d v25|d [508, 532[[610, 632[518 MustHaveRegister 532 MustHaveRegister  "OneSpillStore"
  v96|d DWORD "[vstack:3|d]" v25|d v25|d [276, 508[ "OneSpillStore"
  v97|d DWORD "[rbp|d]" v42|d v42|d [399, 450[[1052, 1062[[1094, 1104[[1168, 1199[406 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r13|d]" v47|d v47|d [397, 450[[1052, 1062[[1094, 1104[[1168, 1199[404 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[vstack:5|d]" v30|d v30|d [383, 494[[610, 632[494 ShouldHaveRegister  "OneSpillStore"
  v100|d DWORD "[rax|d]" v51|d v51|d [654, 704[704 MustHaveRegister  "OneSpillStore"
  v101|d DWORD "[vstack:6|d]" v51|d v51|d [385, 450[ "OneSpillStore"
  v102|d DWORD "[vstack:7|d]" v29|d v29|d [387, 493[[610, 632[492 ShouldHaveRegister  "OneSpillStore"
  v103|q QWORD "[vstack:8|q]" v0|q v0|q [605, 744[609 LiveAtLoopEnd  "StoreAtDefinition"
  v104|q QWORD "[vstack:9|q]" v1|q v1|q [399, 438[ "StoreAtDefinition"
  v105|q QWORD "[r10|q]" v0|q v0|q [588, 605[604 ShouldHaveRegister  "StoreAtDefinition"
  v106|q QWORD "[rdx|q]" v1|q v1|q [438, 588[448 MustHaveRegister 470 MustHaveRegister  "StoreAtDefinition"
  v107|q QWORD "[rdi|q]" v35|q v35|q [1178, 1199[ "StoreAtDefinition"
  v108|q QWORD "[rbx|q]" v37|q v37|q [1178, 1199[ "OneSpillStore"
  v109|q QWORD "[r8|q]" v39|q v39|q [654, 693[ "OneSpillStore"
  v110|q QWORD "[vstack:9|q]" v1|q v1|q [588, 605[ "StoreAtDefinition"
  v111|q QWORD "[vstack:9|q]" v1|q v1|q [605, 712[609 LiveAtLoopEnd 690 ShouldHaveRegister  "StoreAtDefinition"
  v112|q QWORD "[vstack:0|q]" v22|q v22|q [605, 712[609 LiveAtLoopEnd  "StoreAtDefinition"
  v113|q QWORD "[rdx|q]" v1|q v1|q [712, 744[732 MustHaveRegister 734 MustHaveRegister  "StoreAtDefinition"
  v114|q QWORD "[rsi|q]" v0|q v0|q [762, 893[ "StoreAtDefinition"
  v115|q QWORD "[rbp|q]" v39|q v39|q [693, 700[700 MustHaveRegister  "OneSpillStore"
  v116|d DWORD "[r10|d]" v51|d v51|d [1052, 1062[[1094, 1104[[1168, 1199[ "OneSpillStore"
  v117|q QWORD "[r8|q]" v39|q v39|q [1052, 1062[[1094, 1104[[1168, 1199[ "OneSpillStore"
  v118|q QWORD "[rcx|q]" v36|q v36|q [1178, 1199[ "StoreAtDefinition"
  v119|q QWORD "[vstack:9|q]" v1|q v1|q [762, 895[ "StoreAtDefinition"
  v120|q QWORD "[r11|q]" v0|q v0|q [893, 895[894 ShouldHaveRegister  "StoreAtDefinition"
  v121|d DWORD "[vstack:13|d]" v15|d v15|d [895, 898[898 ShouldHaveRegister  "OneSpillStore"
  v122|q QWORD "[vstack:9|q]" v1|q v1|q [895, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[ "StoreAtDefinition"
  v123|q QWORD "[vstack:8|q]" v0|q v0|q [895, 903[ "StoreAtDefinition"
  v124|d DWORD "[r11|d]" v60|d v60|d [978, 988[[1010, 1030[[1104, 1135[ "NoSpillStore"
  v125|q QWORD "[rsi|q]" v0|q v0|q [903, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[904 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "StoreAtDefinition"
  v126|q QWORD "[rdx|q]" v1|q v1|q [1178, 1199[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = STACKMOVE (input: v81|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  402  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [v67|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = STACKMOVE (input: v110|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  708  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:14|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  902  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [int[-145683|0xfffffffffffdc6ed], long[2580|0xa14]] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [int[-131091|0xfffffffffffdffed], long[660|0x294]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [int[-141331|0xfffffffffffdd7ed], long[12820|0x3214]] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [int[-140307|0xfffffffffffddbed], long[12180|0x2f94]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [int[-139283|0xfffffffffffddfed], long[11540|0x2d14]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [int[-138259|0xfffffffffffde3ed], long[12820|0x3214]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [int[-135187|0xfffffffffffdefed], long[5780|0x1694]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [int[-136211|0xfffffffffffdebed], long[11540|0x2d14]] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-71731|0xfffffffffffee7cd], long[13460|0x3494]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [int[-133139|0xfffffffffffdf7ed], long[5140|0x1414]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-137235|0xfffffffffffde7ed], long[12180|0x2f94]] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[400, 402[[606, 607[[706, 708[[896, 897[[900, 902[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v55|d [0, 1[[102, 103[[398, 400[[606, 607[[692, 707[[896, 897[[900, 901[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v50|q [0, 32[[396, 400[[606, 607[[690, 707[[896, 897[[900, 901[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[606, 607[[706, 707[[896, 897[[900, 901[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v46|q [0, 30[[394, 400[[604, 607[[688, 707[[894, 897[[898, 901[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v36|q [0, 1[[606, 607[[698, 707[[896, 897[[900, 901[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v58|d [0, 1[[400, 401[[606, 607[[694, 707[[896, 897[[900, 901[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- v53|d [0, 1[[400, 401[[606, 607[[696, 707[[896, 897[[900, 901[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[400, 401[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[606, 607[[706, 707[[896, 897[[900, 901[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 276[30 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 56 MustHaveRegister 90 MustHaveRegister 178 MustHaveRegister 182 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 395[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 250 MustHaveRegister 258 MustHaveRegister 362 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rcx|d]" v2|d -1 [34, 95[34 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [36, 94[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [38, 40[38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [40, 110[40 MustHaveRegister 58 ShouldHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d -1 [56, 109[56 MustHaveRegister 58 MustHaveRegister 106 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [90, 92[90 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v8|S SINGLE "[xmm0|S]" v8|S -1 [92, 102[92 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d v3|d [94, 100[94 MustHaveRegister 96 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d v9|d [100, 104[100 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rcx|d]" v11|d -1 [98, 101[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r9|d]" v12|d v8|S [102, 104[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v14|d DWORD "[r10|d]" v14|d v10|d [104, 108[104 MustHaveRegister 106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r10|d]" v15|d v14|d [108, 112[108 MustHaveRegister 110 MustHaveRegister  "OneSpillStore"
  v16|q QWORD "[rax|q]" v16|q rax|q [902, 911[902 MustHaveRegister 906 MustHaveRegister 910 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[r11|q]" v18|q -1 [904, 905[904 MustHaveRegister  "NoDefinitionFound"
  v19|d DWORD "[r10|d]" v19|d v16|q [906, 908[906 MustHaveRegister 908 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[r11|q]" v21|q -1 [910, 911[910 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rbx|q]" v22|q -1 [142, 146[142 MustHaveRegister  "StoreAtDefinition"
  v23|d DWORD "[r10|d]" v23|d -1 [178, 252[[610, 632[178 MustHaveRegister 180 MustHaveRegister 248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d -1 [180, 214[[610, 620[180 MustHaveRegister 212 ShouldHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rdi|d]" v25|d -1 [182, 276[182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 254 MustHaveRegister  "OneSpillStore"
  v26|d DWORD "[r8|d]" v26|d -1 [184, 358[[610, 632[184 MustHaveRegister 272 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r9|d]" v27|d -1 [186, 274[[610, 632[186 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rcx|d]" v28|d -1 [188, 374[[610, 632[188 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbp|d]" v29|d -1 [190, 387[190 MustHaveRegister 374 ShouldHaveRegister 382 ShouldHaveRegister  "OneSpillStore"
  v30|d DWORD "[r13|d]" v30|d -1 [192, 383[192 MustHaveRegister 382 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[r14|d]" v31|d -1 [194, 224[194 MustHaveRegister  "OneSpillStore"
  v32|d DWORD "[rax|d]" v32|d -1 [196, 364[[610, 632[196 MustHaveRegister 200 ShouldHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d -1 [198, 424[[610, 632[198 MustHaveRegister 200 MustHaveRegister 386 ShouldHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[r11|d]" v34|d -1 [250, 354[250 MustHaveRegister 256 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v23|d [252, 276[252 MustHaveRegister  "StoreAtDefinition"
  v36|q QWORD "[r14|q]" v36|q v25|d [254, 276[254 MustHaveRegister  "StoreAtDefinition"
  v37|q QWORD "[r11|q]" v37|q v34|d [354, 399[354 MustHaveRegister 356 ShouldHaveRegister  "OneSpillStore"
  v38|q QWORD "[r9|q]" v38|q v37|q [356, 372[356 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[r8|q]" v39|q v26|d [358, 399[358 MustHaveRegister 360 ShouldHaveRegister  "OneSpillStore"
  v40|q QWORD "[r14|q]" v40|q v39|q [360, 380[360 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdi|d]" v41|d -1 [362, 423[362 MustHaveRegister 364 ShouldHaveRegister 386 ShouldHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d v32|d [364, 399[364 MustHaveRegister 366 ShouldHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[r10|q]" v43|q -1 [366, 368[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v43|q [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[r10|q]" v45|q -1 [370, 372[370 MustHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[r10|q]" v46|q v45|q [372, 394[372 MustHaveRegister 394 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d v28|d [374, 397[374 MustHaveRegister 376 ShouldHaveRegister 384 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r9|q]" v48|q -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r9|q]" v49|q -1 [378, 380[378 MustHaveRegister 380 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[r9|q]" v50|q v49|q [380, 396[380 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[r14|d]" v51|d v30|d [382, 385[382 MustHaveRegister 384 MustHaveRegister  "OneSpillStore"
  v52|d DWORD "[r13|d]" v52|d v51|d [384, 393[384 MustHaveRegister 390 ShouldHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r14|d]" v53|d v33|d [386, 450[[654, 696[[1052, 1062[[1094, 1104[[1168, 1199[386 MustHaveRegister 388 MustHaveRegister 408 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rbp|d]" v54|d v53|d [388, 392[388 MustHaveRegister 390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v55|d DWORD "[rbp|d]" v55|d v54|d [392, 398[392 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rax|d]" v56|d rax|q [402, 450[[1052, 1062[[1094, 1104[[1168, 1199[402 MustHaveRegister 404 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r10|d]" v57|d v56|d [404, 520[[654, 702[[978, 988[[1010, 1030[[1104, 1135[404 MustHaveRegister 492 MustHaveRegister 702 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v42|d [406, 422[[654, 694[406 MustHaveRegister 408 ShouldHaveRegister 422 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q rax|q [708, 711[708 MustHaveRegister 710 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r11|d]" v60|d v58|d [422, 520[422 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 448 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[r11|d]" v61|d -1 [1178, 1194[1194 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r9|q]" v62|q -1 [1178, 1196[1196 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r14|q]" v63|q v31|d [474, 478[474 MustHaveRegister 478 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [472, 475[472 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rsi|q]" v65|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v66|d DWORD "[rsi|d]" v66|d v57|d [492, 532[492 MustHaveRegister 494 MustHaveRegister 506 MustHaveRegister 518 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rbx|q]" v67|q v22|q [534, 537[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rbx|q]" v68|q v67|q [538, 588[[632, 654[[956, 977[[1062, 1083[550 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r10|d]" v69|d -1 [550, 586[[632, 654[550 MustHaveRegister 552 MustHaveRegister 574 MustHaveRegister 586 ShouldHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v70|d DWORD "[rsi|d]" v70|d -1 [732, 734[732 MustHaveRegister 734 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rsi|d]" v71|d v70|d [734, 740[734 MustHaveRegister 736 ShouldHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rsi|d]" v72|d v71|d [740, 742[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v73|d DWORD "[r10|d]" v73|d -1 [738, 741[738 MustHaveRegister 740 MustHaveRegister  "NoSpillStore"
  v74|d DWORD "[r8|d]" v74|d -1 [1114, 1130[1130 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r9|q]" v75|q -1 [1114, 1132[1132 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[r10|d]" v76|d -1 [1146, 1162[1162 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[r11|q]" v77|q -1 [1146, 1164[1164 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [924, 940[940 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q -1 [924, 942[942 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[vstack:8|q]" v0|q v0|q [276, 393[ "StoreAtDefinition"
  v81|q QWORD "[vstack:9|q]" v1|q v1|q [395, 399[ "StoreAtDefinition"
  v82|d DWORD "[vstack:13|d]" v15|d v15|d [762, 895[ "OneSpillStore"
  v83|q QWORD "[vstack:0|q]" v22|q v22|q [588, 605[ "StoreAtDefinition"
  v84|q QWORD "[vstack:0|q]" v22|q v22|q [146, 588[534 ShouldHaveRegister  "StoreAtDefinition"
  v85|q QWORD "[vstack:4|q]" v35|q v35|q [276, 399[ "StoreAtDefinition"
  v86|q QWORD "[vstack:2|q]" v36|q v36|q [705, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[ "StoreAtDefinition"
  v87|d DWORD "[r14|d]" v31|d v31|d [450, 474[[610, 632[474 MustHaveRegister  "OneSpillStore"
  v88|d DWORD "[vstack:1|d]" v31|d v31|d [224, 450[ "OneSpillStore"
  v89|q QWORD "[vstack:8|q]" v0|q v0|q [393, 588[ "StoreAtDefinition"
  v90|q QWORD "[vstack:4|q]" v35|q v35|q [399, 554[[632, 644[[654, 712[[978, 988[[1010, 1030[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[688 ShouldHaveRegister  "StoreAtDefinition"
  v91|q QWORD "[vstack:10|q]" v37|q v37|q [399, 450[[654, 692[[1052, 1062[[1094, 1104[[1168, 1178[692 ShouldHaveRegister  "OneSpillStore"
  v92|q QWORD "[vstack:11|q]" v39|q v39|q [399, 450[ "OneSpillStore"
  v93|q QWORD "[rbx|q]" v36|q v36|q [654, 705[698 ShouldHaveRegister  "StoreAtDefinition"
  v94|q QWORD "[vstack:2|q]" v36|q v36|q [276, 554[[632, 644[ "StoreAtDefinition"
  v95|d DWORD "[rdi|d]" v25|d v25|d [508, 532[[610, 632[518 MustHaveRegister 532 MustHaveRegister  "OneSpillStore"
  v96|d DWORD "[vstack:3|d]" v25|d v25|d [276, 508[ "OneSpillStore"
  v97|d DWORD "[rbp|d]" v42|d v42|d [399, 450[[1052, 1062[[1094, 1104[[1168, 1199[406 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r13|d]" v47|d v47|d [397, 450[[1052, 1062[[1094, 1104[[1168, 1199[404 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[vstack:5|d]" v30|d v30|d [383, 494[[610, 632[494 ShouldHaveRegister  "OneSpillStore"
  v100|d DWORD "[rax|d]" v51|d v51|d [654, 704[704 MustHaveRegister  "OneSpillStore"
  v101|d DWORD "[vstack:6|d]" v51|d v51|d [385, 450[ "OneSpillStore"
  v102|d DWORD "[vstack:7|d]" v29|d v29|d [387, 493[[610, 632[492 ShouldHaveRegister  "OneSpillStore"
  v103|q QWORD "[vstack:8|q]" v0|q v0|q [605, 744[609 LiveAtLoopEnd  "StoreAtDefinition"
  v104|q QWORD "[vstack:9|q]" v1|q v1|q [399, 438[ "StoreAtDefinition"
  v105|q QWORD "[r10|q]" v0|q v0|q [588, 605[604 ShouldHaveRegister  "StoreAtDefinition"
  v106|q QWORD "[rdx|q]" v1|q v1|q [438, 588[448 MustHaveRegister 470 MustHaveRegister  "StoreAtDefinition"
  v107|q QWORD "[rdi|q]" v35|q v35|q [1178, 1199[ "StoreAtDefinition"
  v108|q QWORD "[rbx|q]" v37|q v37|q [1178, 1199[ "OneSpillStore"
  v109|q QWORD "[r8|q]" v39|q v39|q [654, 693[ "OneSpillStore"
  v110|q QWORD "[vstack:9|q]" v1|q v1|q [588, 605[ "StoreAtDefinition"
  v111|q QWORD "[vstack:9|q]" v1|q v1|q [605, 712[609 LiveAtLoopEnd 690 ShouldHaveRegister  "StoreAtDefinition"
  v112|q QWORD "[vstack:0|q]" v22|q v22|q [605, 712[609 LiveAtLoopEnd  "StoreAtDefinition"
  v113|q QWORD "[rdx|q]" v1|q v1|q [712, 744[732 MustHaveRegister 734 MustHaveRegister  "StoreAtDefinition"
  v114|q QWORD "[rsi|q]" v0|q v0|q [762, 893[ "StoreAtDefinition"
  v115|q QWORD "[rbp|q]" v39|q v39|q [693, 700[700 MustHaveRegister  "OneSpillStore"
  v116|d DWORD "[r10|d]" v51|d v51|d [1052, 1062[[1094, 1104[[1168, 1199[ "OneSpillStore"
  v117|q QWORD "[r8|q]" v39|q v39|q [1052, 1062[[1094, 1104[[1168, 1199[ "OneSpillStore"
  v118|q QWORD "[rcx|q]" v36|q v36|q [1178, 1199[ "StoreAtDefinition"
  v119|q QWORD "[vstack:9|q]" v1|q v1|q [762, 895[ "StoreAtDefinition"
  v120|q QWORD "[r11|q]" v0|q v0|q [893, 895[894 ShouldHaveRegister  "StoreAtDefinition"
  v121|d DWORD "[vstack:13|d]" v15|d v15|d [895, 898[898 ShouldHaveRegister  "OneSpillStore"
  v122|q QWORD "[vstack:9|q]" v1|q v1|q [895, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1178[ "StoreAtDefinition"
  v123|q QWORD "[vstack:8|q]" v0|q v0|q [895, 903[ "StoreAtDefinition"
  v124|d DWORD "[r11|d]" v60|d v60|d [978, 988[[1010, 1030[[1104, 1135[ "NoSpillStore"
  v125|q QWORD "[rsi|q]" v0|q v0|q [903, 945[[946, 977[[978, 1009[[1010, 1051[[1052, 1083[[1084, 1135[[1136, 1167[[1168, 1199[904 MustHaveRegister 908 MustHaveRegister 910 MustHaveRegister  "StoreAtDefinition"
  v126|q QWORD "[rdx|q]" v1|q v1|q [1178, 1199[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOVE input: v25|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v85|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = STACKMOVE (input: v81|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  402  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOVE input: v96|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [v68|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = STACKMOVE (input: v110|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = STACKMOVE (input: v83|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v99|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v102|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  708  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:14|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  902  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] // MoveResolver resolve mapping <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] // MoveResolver resolve mapping <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[13460|0x3494] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [v74|DWORD, v75|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [v76|DWORD, v77|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [v61|DWORD, v62|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV input: [v4|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction v6|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v5|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v7|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v8|SINGLE = MOVSS input: [v7|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction v9|DWORD = SUB (x: v3|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction v11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction v10|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v11|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction v12|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v8|SINGLE {tmp: v13|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction v14|DWORD = IMUL (x: v10|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: v14|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction v15|DWORD = CMOVE (falseValue: v14|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v5|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction v23|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v24|DWORD = MOV input: [v23|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction v25|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v26|DWORD[_] = MOV input: [v25|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction v27|DWORD = MOVSXB input: [v25|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction v28|DWORD = MOV input: [v25|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction v29|DWORD = MOV input: [v25|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction v30|DWORD = MOV input: [v25|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction v31|DWORD = MOV input: [v25|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction v32|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction v33|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: v33|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v31|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction v34|DWORD[_] = MOV input: [v1|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  254  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v34|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v96|DWORD[_] = MOVE input: v25|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction v38|QWORD[*] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction v40|QWORD[*] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction v41|DWORD = MOV input: [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction v42|DWORD = ADD (x: v32|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction v43|QWORD = MOVSXD value: v42|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction v44|QWORD = SHL value: v43|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction v45|QWORD = LEA address: [v44|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction v46|QWORD[*] = ADD (x: v45|QWORD, y: v38|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction v47|DWORD = ADD (x: v28|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction v48|QWORD = MOVSXD value: v47|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction v50|QWORD[*] = ADD (x: v49|QWORD, y: v40|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction v51|DWORD = ADD (x: v30|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction v52|DWORD = SUB (x: v51|DWORD, ~y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction v53|DWORD = ADD (x: v33|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction v54|DWORD = SUB (x: v53|DWORD, ~y: v42|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: v54|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction v55|DWORD = CMOVE (falseValue: v54|DWORD, ~trueValue: v52|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: v46|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  402  <|@ instruction v56|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v57|DWORD = ADD (x: v56|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v58|DWORD = ADD (x: v42|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v58|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction v60|DWORD = SUB (x: v58|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v33|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: v60|DWORD, y: [v1|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction v64|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction v63|QWORD = UNCOMPRESSPOINTER (input: v31|DWORD, ~baseRegister: v64|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction v65|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: v65|QWORD, y: v63|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction v66|DWORD = SUB (x: v57|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: v66|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v66|DWORD, y: v66|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[_] = MOVE input: v96|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: v66|DWORD, y: [v25|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [v25|DWORD[_] * 8 + 24], y: v66|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v67|QWORD[.] = MOVE input: v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v69|DWORD = MOV input: [v68|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: v24|DWORD, y: v24|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v87|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v99|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v102|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: v37|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: v58|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: v39|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: v57|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: v51|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  708  <|@ instruction v59|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction v70|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction v71|DWORD = SUB (x: v70|DWORD, ~y: [v1|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: v71|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction v73|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction v72|DWORD = CMOVE (falseValue: v71|DWORD, ~trueValue: v73|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: v72|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v114|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:14|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v15|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  902  <|@ instruction v16|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v17|QWORD, temp2: v18|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction v19|DWORD[_] = COMPRESSPOINTER (input: v16|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v19|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v16|QWORD[.]) {temp: v20|QWORD, temp2: v21|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v68|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] // MoveResolver resolve mapping <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v68|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] // MoveResolver resolve mapping <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVE input: long[13460|0x3494] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v74|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v75|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v1|QWORD[.] v60|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v1|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v1|QWORD[.] v60|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v36|QWORD[.] v57|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v76|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v77|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v101|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v61|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v62|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v56|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] v37|QWORD[.] v42|DWORD v53|DWORD v39|QWORD[.] v47|DWORD v51|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v35|QWORD[.] v1|QWORD[.] v36|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  254  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  404  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: vstack:7|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD[_] = MOVE input: vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rdx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:8|QWORD[.] - - - vstack:13|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:8|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] // MoveResolver resolve mapping <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] // MoveResolver resolve mapping <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: vstack:9|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: vstack:9|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: vstack:9|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - vstack:2|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  144  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  182  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  190  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  192  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  194  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  198  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  250  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  254  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  258  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  274  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  360  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  364  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  370  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  372  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  378  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  380  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  382  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  384  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  394  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  398  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  404  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  474  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  478  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: vstack:7|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD[_] = MOVE input: vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rdx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  552  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  734  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  738  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  740  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  742  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:8|QWORD[.] - - - vstack:13|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:8|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  906  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  910  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr  976  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] // MoveResolver resolve mapping <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1008  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] // MoveResolver resolve mapping <|@ <|@
      nr 1018  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] // MoveResolver resolve mapping <|@ <|@
      nr 1028  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1080  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1082  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] // MoveResolver resolve mapping <|@ <|@
      nr 1092  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1094  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1134  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: vstack:9|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: vstack:9|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: vstack:9|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - vstack:2|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] // MoveResolver resolve mapping <|@ <|@
      nr 1144  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1196  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1198  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction vstack:9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction vstack:3|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction vstack:6|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction vstack:11|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction vstack:10|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: vstack:7|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rdx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r13|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbp|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction vstack:13|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:8|QWORD[.] - - - vstack:13|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:8|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  810  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: vstack:9|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: vstack:9|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: vstack:9|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - vstack:2|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] vstack:9|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  768  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [302, 1083[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [382, 844[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [456, 1292[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [480, 936[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [452, 1292[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [388, 888[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [592, 794[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [390, 886[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [30, 1296[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [32, 1366[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [614, 810[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[vstack:11|q]" vstack:11|q -1 [612, 796[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [114, 252[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:64|q]" vstack:0|q -1 [302, 1083[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [382, 844[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:80|q]" vstack:2|q -1 [456, 1292[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:84|d]" vstack:3|d -1 [480, 936[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:72|q]" vstack:4|q -1 [452, 1292[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [388, 888[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:40|d]" vstack:6|d -1 [592, 794[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:36|d]" vstack:7|d -1 [390, 886[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:48|q]" vstack:8|q -1 [30, 1296[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:56|q]" vstack:9|q -1 [32, 1366[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:104|q]" vstack:10|q -1 [614, 810[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[stack:96|q]" vstack:11|q -1 [612, 796[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:28|d]" vstack:13|d -1 [114, 252[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r13|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  810  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  768  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r13|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  810  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  768  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r13|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbp|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@reference-map: [rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@reference-map: [rsi:0, stack:48, stack:56, stack:72]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@reference-map: [rsi:0, stack:48, stack:56, stack:72]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@reference-map: [rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0]
live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@reference-map: [rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:48, stack:56, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605854778419096692
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction CMP x: r10|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  100  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  102  <|@ instruction r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  104  <|@ instruction r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  108  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605853216938254708
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182014643597144
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  448  <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  460  <|@ instruction CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B45" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rdx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38] <|@ <|@
      nr  476  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  560  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  564  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  568  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  572  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  574  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  576  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  578  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  582  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  586  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  620  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B24" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  868  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  872  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418867519446
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  978  <|@ instruction rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B15" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rdx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38] <|@ <|@
      nr  996  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418846873099
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531199792926451779
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131] <|@ <|@
      nr 1078  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B37" 
    successors "B8" "B49" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182457573877722
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  340  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21] <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  350  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  360  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406461676
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543017065406458894
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531193651457333893
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531190945299241114
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64, stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1106  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1108  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1112  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr 1114  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4594478581814218288
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4550527849545598380
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:48|QWORD[.] - - - stack:28|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18] <|@ <|@
      nr  252  <|@ instruction rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:48|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:48|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18] <|@ <|@
      nr  256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  260  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  264  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b <|@ <|@
      nr  266  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B50" 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr 1306  <|@ instruction r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed] <|@ <|@
      nr 1308  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors 
    xhandlers
    flags 
    probability 4356594882629225735
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@reference-map: [rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1254  <|@ instruction r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed] <|@ <|@
      nr 1256  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1290  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1292  <|@ st <@st|@reference-map: [rsi:0, stack:48, stack:56, stack:72]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  960  <|@ instruction r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed] <|@ <|@
      nr  962  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B25" "B43" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1240  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1242  <|@ st <@st|@reference-map: [rsi:0, stack:48, stack:56, stack:72]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: stack:56|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: stack:56|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: stack:56|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:80|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  930  <|@ instruction r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed] <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@reference-map: [rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:49] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed] <|@ <|@
      nr  904  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B44" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r9|QWORD = MOVE input: long[13460|0x3494] <|@ <|@
      nr 1218  <|@ instruction r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd] <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1320  <|@ instruction r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed] <|@ <|@
      nr 1322  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r9|QWORD = MOVE input: long[12180|0x2f94] <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed] <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  728  <|@ instruction rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  838  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0]
live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rbx|QWORD[.] rbp|DWORD r14|DWORD r8|QWORD[.] r13|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: rdi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction r9|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr  726  <|@ instruction r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed] <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD <|@ <|@
      nr 1178  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1180  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction r9|QWORD = MOVE input: long[12820|0x3214] <|@ <|@
      nr  808  <|@ instruction r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed] <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD <|@ <|@
      nr 1364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@reference-map: [rsi:0, stack:72]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1184  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD <|@ <|@
      nr 1202  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1204  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:48, stack:56, stack:72]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:72|QWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] stack:56|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #33         // haveLeftoverChar:boolean
     4: ifeq          13
     7: aload_0       
     8: aload_1       
     9: iconst_0      
    10: invokevirtual #68         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    13: aload_0       
    14: aload_1       
    15: invokevirtual #69         // java.nio.Buffer.remaining:()int
    18: invokevirtual #70         // growByteBufferIfNeeded:(int)void
    21: aload_1       
    22: invokevirtual #59         // java.nio.Buffer.hasRemaining:()boolean
    25: ifeq          144
    28: aload_0       
    29: getfield      #39         // encoder:java.nio.charset.CharsetEncoder
    32: aload_1       
    33: aload_0       
    34: getfield      #41         // bb:java.nio.ByteBuffer
    37: iconst_0      
    38: invokevirtual #62         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    41: astore_2      
    42: aload_2       
    43: invokevirtual #63         // java.nio.charset.CoderResult.isUnderflow:()boolean
    46: ifeq          99
    49: getstatic     #47         // $assertionsDisabled:boolean
    52: ifne          75
    55: aload_1       
    56: invokevirtual #69         // java.nio.Buffer.remaining:()int
    59: iconst_1      
    60: if_icmple     75
    63: new           #189        // java.lang.AssertionError
    66: dup           
    67: aload_1       
    68: invokevirtual #69         // java.nio.Buffer.remaining:()int
    71: invokespecial #50         // java.lang.AssertionError.<init>:(int)void
    74: athrow        
    75: aload_1       
    76: invokevirtual #69         // java.nio.Buffer.remaining:()int
    79: iconst_1      
    80: if_icmpne     144
    83: aload_0       
    84: iconst_1      
    85: putfield      #33         // haveLeftoverChar:boolean
    88: aload_0       
    89: aload_1       
    90: invokevirtual #60         // java.nio.CharBuffer.get:()char
    93: putfield      #57         // leftoverChar:char
    96: goto          144
    99: aload_2       
   100: invokevirtual #64         // java.nio.charset.CoderResult.isOverflow:()boolean
   103: ifeq          137
   106: getstatic     #47         // $assertionsDisabled:boolean
   109: ifne          130
   112: aload_0       
   113: getfield      #41         // bb:java.nio.ByteBuffer
   116: invokevirtual #46         // java.nio.Buffer.position:()int
   119: ifgt          130
   122: new           #189        // java.lang.AssertionError
   125: dup           
   126: invokespecial #48         // java.lang.AssertionError.<init>:()void
   129: athrow        
   130: aload_0       
   131: invokevirtual #65         // writeBytes:()void
   134: goto          21
   137: aload_2       
   138: invokevirtual #66         // java.nio.charset.CoderResult.throwException:()void
   141: goto          21
   144: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec789041817f20000000000f854608000090909090909090909090909048896c2470488974245048895424488b4a18448b521c448b5e24468b1cdd20000000807e1b000f85b50700009090909090448b4614453bc30f8e730400009090909090909090909090909090448b4e20c4a17a1004cd10000000442bd14183fa01b900000000440f4cd1b80000807fc4c1797ec14423c841c1f917b995000000412bc9f7c1e0ffffff752ac4c1797ec14181e1ffff7f004181c900008000c5f97ec085c07d0341f7d941d3f94183c10141d1f9eb37c57a2cc84181f900000080752ac5f97ec081e0ffffff7f4533c981f80000807f7f15c5f97ec085c041b900000080b8ffffff7f440f49c8450fafd1453bd0450f4fd0453bd30f8fb90300009090909090909048bbaddeaddeaddeadde48895c2440e9450200006666660f1f840000000000666666906666660f1f8400000000006666669090909090904183fb010f85780200009090904489742464909090909090909090909042c704d51400000001000000448b5a3049c1e2034c89542438448bf749c1e6034c89742430428504dd00000000807a2c000f85e70500009090909090428504c5000000004584c90f8566040000897c242c909090909090909090909090909090909090909090909090909090909090909090909090909049c1e3034d8bcb49c1e0034d8bf08b7a2803c74c63d049d1e24d8d52104d03d103cd4c63c94d8d49104d03ce458bf54403f544896c2460458bee442be94489742458448bf34403f7896c245c418bee2be8413bed410f4fed498bf2498bd1448be98bcd4c894424204c895c24188be8e800000000448bd04503d5448bdd4403d8453bf30f8fad0100009090909090442bdf443bdb0f8fec040000909090904585db0f8c8a040000488b54244890909090443b5a0c0f8c31050000448b74246490909090909090909044895a1848be0000002b787f00004e8d343648beaddeaddeaddeadde493bf60f85150400009090909090418bf22b74245c3b7424600f8fe80300009090909085f60f8c960300008b7c242c909090903b34fd0c0000000f8c4a03000090909090908934fd18000000488b5c24409090909090448b530c4585d20f85d4000000909090909090904585d20f8442010000909090904183fa010f85570400004c8b54245090909090909090498bf2666690e8000000000f1f840000000000488b542448488b742450909090909090909090909090909090448b5620468b1cd5140000008b7e24448b04fd30000000440fbe0cfd2c0000008b0cfd180000008b2cfd28000000448b2cfd1c000000448b34fd080000008b42188b5a1c3bd80f8f7ffdffffe92e03000044896c2460896c245c909090904585db0f85010200009090904489742464488b542448488b742450e963fdffff909090904183fa010f8510040000909090488b542448e914ffffff8b4424584c8b442420488b5c243090909090909090909090909090909090488b742438488b542448488b4c2418498be8458bc3458bce488bfb48892c24448954240889442410666690e8000000000f1f840000000000488bd8488b542448e99cfeffff9090909090909090908b721c2b721883fe0141ba00000000410f4cf283fe010f84fe01000090909090909090488b6c24704883c478493ba7500400000f879d030000c5f877c3909090e94afcffff448954246490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bde666690e8000000000f1f8400000000008b742464666690e8000000000f1f840000000000488b74245041807f40000f842e000000448b5e2449c1e3034d85db0f841d0000004d8b57284983fa000f84090300004983ea084d8957284d0357384d891a4c8bd049c1ea03448956244c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84af0200004983eb084d895f484d035f584d8913488b542448e92cfbffff488b74245090909049c7c3140a000041baedc6fdff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c39416000041baedeffdff90909090909090458997840400004d899f90040000e8000000000f1f840000000000488b74245090909049c7c11432000041b8edd7fdff90909090909090458987840400004d898f90040000e8000000000f1f840000000000488b74245090909049c7c1942f000041b8eddbfdffebc7488b7424509090909090909041c78784040000edcefdff49c7879004000094070000e8000000000f1f840000000000488b74245090909049c7c1142d000041b8eddffdffeb81488b74245090909049c7c19434000041b8cde7feffe967ffffff90909049c7c39402000041baedfffdffe9e9feffff448b5424584c8b442420488b74245090909049c7c1942f000041bbede7fdff488b5c2418488b4c2430488b7c2438488b5424489090909090909045899f840400004d898f90040000e8000000000f1f840000000000448b5424584c8b442420488b74245090909049c7c1142d000041bbedebfdffeba990909049c7c31414000041baedf7fdffe990feffff488b7424509090909090909041c78784040000edd3fdff49c7879004000014050000e8000000000f1f840000000000448b5424584c8b442420488b74245090909049c7c11432000041bbede3fdffe941ffffff9090909090909041c78784040000ed03feff49c7879004000014000000e8000000000f1f840000000000488b7424509090909090909041c78784040000edcafdff49c78790040000940c0000e8000000000f1f84000000000048896c2470e800000000e9abf7fffff4488d0d4ffcffff49898f68040000e95df7fffff44c891c24e800000000e9f8fcfffff44c891424e800000000e952fdfffff441c78784040000f59efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f593feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f557feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f560feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f585feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f579feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD  <||@
  Comment 75 30 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 80 32 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 85 34 rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 92 38 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 96 40 r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 96 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 96 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 42 CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null  <||@
  Comment 114 block B1 null  <||@
  Comment 114 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 46 NOP  <||@
  Comment 115 48 NOP  <||@
  Comment 116 50 NOP  <||@
  Comment 117 52 NOP  <||@
  Comment 118 54 NOP  <||@
  Comment 119 56 r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 123 58 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD  <||@
  Comment 132 block B2 null  <||@
  Comment 132 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 62 NOP  <||@
  Comment 133 64 NOP  <||@
  Comment 134 66 NOP  <||@
  Comment 135 68 NOP  <||@
  Comment 136 70 NOP  <||@
  Comment 137 72 NOP  <||@
  Comment 138 74 NOP  <||@
  Comment 139 76 NOP  <||@
  Comment 140 78 NOP  <||@
  Comment 141 80 NOP  <||@
  Comment 142 82 NOP  <||@
  Comment 143 84 NOP  <||@
  Comment 144 86 NOP  <||@
  Comment 145 88 NOP  <||@
  Comment 146 90 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 150 92 xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0]  <||@
  Comment 150 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 150 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 160 94 r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 163 96 CMP x: r10|DWORD y: 1 size: DWORD  <||@
  Comment 167 98 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 172 100 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 176 102 r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL}  <||@
  Comment 306 104 r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 310 106 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 313 108 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 317 110 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 326 block B4 null  <||@
  Comment 326 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 326 272 NOP  <||@
  Comment 327 274 NOP  <||@
  Comment 328 276 NOP  <||@
  Comment 329 278 JUMP ~outgoingValues: [] destination: B4 -> B6  <||@
  Comment 329 block B6 null  <||@
  Comment 329 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 292 NOP  <||@
  Comment 330 294 NOP  <||@
  Comment 331 296 NOP  <||@
  Comment 332 298 NOP  <||@
  Comment 333 300 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470]  <||@
  Comment 333 {Object[CoderResult@167784470]}  <||@
  Comment 343 302 stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 348 304 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 353 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 353 362 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 364 NOP  <||@
  Comment 385 366 NOP  <||@
  Comment 386 368 NOP  <||@
  Comment 387 370 NOP  <||@
  Comment 388 372 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null  <||@
  Comment 398 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 398 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 398 376 NOP  <||@
  Comment 399 378 NOP  <||@
  Comment 400 380 NOP  <||@
  Comment 401 382 stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 406 384 JUMP ~outgoingValues: [] destination: B9 -> B12  <||@
  Comment 406 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 406 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 406 424 NOP  <||@
  Comment 407 426 NOP  <||@
  Comment 408 428 NOP  <||@
  Comment 409 430 NOP  <||@
  Comment 410 432 NOP  <||@
  Comment 411 434 NOP  <||@
  Comment 412 436 NOP  <||@
  Comment 413 438 NOP  <||@
  Comment 414 440 NOP  <||@
  Comment 415 442 NOP  <||@
  Comment 416 444 NOP  <||@
  Comment 417 446 MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 429 448 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD  <||@
  Comment 433 450 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 437 452 stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 442 454 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 449 456 stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 454 458 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38]  <||@
  Comment 454 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 454 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 462 460 CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null  <||@
  Comment 472 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 472 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 464 NOP  <||@
  Comment 473 466 NOP  <||@
  Comment 474 468 NOP  <||@
  Comment 475 470 NOP  <||@
  Comment 476 472 NOP  <||@
  Comment 477 474 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38]  <||@
  Comment 477 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 477 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 485 476 TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45  <||@
  Comment 494 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 494 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 480 stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD  <||@
  Comment 498 482 NOP  <||@
  Comment 499 484 NOP  <||@
  Comment 500 486 NOP  <||@
  Comment 501 488 NOP  <||@
  Comment 502 490 NOP  <||@
  Comment 503 492 NOP  <||@
  Comment 504 494 NOP  <||@
  Comment 505 496 NOP  <||@
  Comment 506 498 NOP  <||@
  Comment 507 500 NOP  <||@
  Comment 508 502 NOP  <||@
  Comment 509 504 NOP  <||@
  Comment 510 506 NOP  <||@
  Comment 511 508 NOP  <||@
  Comment 512 510 NOP  <||@
  Comment 513 512 NOP  <||@
  Comment 514 514 NOP  <||@
  Comment 515 516 NOP  <||@
  Comment 516 518 NOP  <||@
  Comment 517 520 NOP  <||@
  Comment 518 522 NOP  <||@
  Comment 519 524 NOP  <||@
  Comment 520 526 NOP  <||@
  Comment 521 528 NOP  <||@
  Comment 522 530 NOP  <||@
  Comment 523 532 NOP  <||@
  Comment 524 534 NOP  <||@
  Comment 525 536 NOP  <||@
  Comment 526 538 NOP  <||@
  Comment 527 540 NOP  <||@
  Comment 528 542 NOP  <||@
  Comment 529 544 NOP  <||@
  Comment 530 546 NOP  <||@
  Comment 531 548 NOP  <||@
  Comment 532 550 NOP  <||@
  Comment 533 552 NOP  <||@
  Comment 534 554 NOP  <||@
  Comment 535 556 NOP  <||@
  Comment 536 558 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 540 560 r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 543 562 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 547 564 r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 550 566 rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 553 568 rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 555 570 r10|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 558 572 r10|QWORD = SHL value: r10|QWORD size: QWORD  <||@
  Comment 561 574 r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD  <||@
  Comment 565 576 r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD  <||@
  Comment 568 578 rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 570 580 r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 573 582 r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 577 584 r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD  <||@
  Comment 580 586 r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 586 588 stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 591 590 r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 597 592 stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 602 594 r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 608 596 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 612 598 rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 617 600 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 620 602 rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 624 604 rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD  <||@
  Comment 627 606 rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD  <||@
  Comment 630 608 r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 633 610 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 635 612 stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 640 614 stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 645 616 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 647 618 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 647 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 652 620 r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 658 622 r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 664 624 CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 673 block B16 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 673 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 696 NOP  <||@
  Comment 674 698 NOP  <||@
  Comment 675 700 NOP  <||@
  Comment 676 702 NOP  <||@
  Comment 677 704 NOP  <||@
  Comment 678 706 r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 681 708 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 690 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 690 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 740 NOP  <||@
  Comment 691 742 NOP  <||@
  Comment 692 744 NOP  <||@
  Comment 693 746 NOP  <||@
  Comment 694 748 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 703 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 703 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 703 780 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 708 782 NOP  <||@
  Comment 709 784 NOP  <||@
  Comment 710 786 NOP  <||@
  Comment 711 788 NOP  <||@
  Comment 712 790 CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD  <||@
  Comment 722 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 722 842 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 722 844 r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 727 846 NOP  <||@
  Comment 728 848 NOP  <||@
  Comment 729 850 NOP  <||@
  Comment 730 852 NOP  <||@
  Comment 731 854 NOP  <||@
  Comment 732 856 NOP  <||@
  Comment 733 858 NOP  <||@
  Comment 734 860 NOP  <||@
  Comment 735 862 NOP  <||@
  Comment 736 864 MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD  <||@
  Comment 740 866 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 750 868 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0  <||@
  Comment 754 870 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}  <||@
  Comment 754 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}}  <||@
  Comment 764 872 CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD  <||@
  Comment 773 block B24 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 773 874 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 773 876 NOP  <||@
  Comment 774 878 NOP  <||@
  Comment 775 880 NOP  <||@
  Comment 776 882 NOP  <||@
  Comment 777 884 NOP  <||@
  Comment 778 886 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD  <||@
  Comment 785 888 CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 795 block B26 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 795 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 795 908 NOP  <||@
  Comment 796 910 NOP  <||@
  Comment 797 912 NOP  <||@
  Comment 798 914 NOP  <||@
  Comment 799 916 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 807 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 807 934 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 807 936 rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD  <||@
  Comment 811 938 NOP  <||@
  Comment 812 940 NOP  <||@
  Comment 813 942 NOP  <||@
  Comment 814 944 NOP  <||@
  Comment 815 946 CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 828 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 828 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 966 NOP  <||@
  Comment 829 968 NOP  <||@
  Comment 830 970 NOP  <||@
  Comment 831 972 NOP  <||@
  Comment 832 974 NOP  <||@
  Comment 833 976 MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 840 978 rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 845 980 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 845 block B31 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 845 982 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 845 984 NOP  <||@
  Comment 846 986 NOP  <||@
  Comment 847 988 NOP  <||@
  Comment 848 990 NOP  <||@
  Comment 849 992 NOP  <||@
  Comment 850 994 r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38]  <||@
  Comment 850 [rdx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:80]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 850 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 854 996 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 863 block B32 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 863 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 863 1000 NOP  <||@
  Comment 864 1002 NOP  <||@
  Comment 865 1004 NOP  <||@
  Comment 866 1006 JUMP ~outgoingValues: [] destination: B32 -> B35  <||@
  Comment 866 block B35 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 866 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 866 1034 NOP  <||@
  Comment 867 1036 NOP  <||@
  Comment 868 1038 NOP  <||@
  Comment 869 1040 NOP  <||@
  Comment 870 1042 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD  <||@
  Comment 879 block B36 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 879 1044 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 879 1046 NOP  <||@
  Comment 880 1048 NOP  <||@
  Comment 881 1050 NOP  <||@
  Comment 882 1052 NOP  <||@
  Comment 883 1054 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null  <||@
  Comment 893 block B37 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 893 1056 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 893 1058 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 898 1060 NOP  <||@
  Comment 899 1062 NOP  <||@
  Comment 900 1064 NOP  <||@
  Comment 901 1066 NOP  <||@
  Comment 902 1068 NOP  <||@
  Comment 903 1070 NOP  <||@
  Comment 904 1072 NOP  <||@
  Comment 905 1074 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 908 1076 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131]  <||@
  Comment 911 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 911 INVOKESPECIAL  <||@
  Comment 916 [stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 924 1078 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 929 1080 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 934 1082 JUMP ~outgoingValues: [] destination: B37 -> B7  <||@
  Comment 934 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 934 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 934 308 NOP  <||@
  Comment 935 310 NOP  <||@
  Comment 936 312 NOP  <||@
  Comment 937 314 NOP  <||@
  Comment 938 316 NOP  <||@
  Comment 939 318 NOP  <||@
  Comment 940 320 NOP  <||@
  Comment 941 322 NOP  <||@
  Comment 942 324 NOP  <||@
  Comment 943 326 NOP  <||@
  Comment 944 328 NOP  <||@
  Comment 945 330 NOP  <||@
  Comment 946 332 NOP  <||@
  Comment 947 334 NOP  <||@
  Comment 948 336 NOP  <||@
  Comment 949 338 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 953 340 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21]  <||@
  Comment 953 [rdx:0, rsi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 953 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 961 342 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 964 344 r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21]  <||@
  Comment 964 [rdx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 964 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 972 346 r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD  <||@
  Comment 981 348 rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 988 350 rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD  <||@
  Comment 995 352 r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD  <||@
  Comment 1003 354 r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 1011 356 rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 1014 358 rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1017 360 CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD  <||@
  Comment 1030 block B10 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1030 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 388 stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1035 390 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1039 392 NOP  <||@
  Comment 1040 394 NOP  <||@
  Comment 1041 396 NOP  <||@
  Comment 1042 398 NOP  <||@
  Comment 1043 400 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD  <||@
  Comment 1052 block B11 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1052 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1052 404 NOP  <||@
  Comment 1053 406 NOP  <||@
  Comment 1054 408 NOP  <||@
  Comment 1055 410 stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1060 416 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1065 418 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1070 420 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1075 block B33 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1075 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1075 1010 NOP  <||@
  Comment 1076 1012 NOP  <||@
  Comment 1077 1014 NOP  <||@
  Comment 1078 1016 NOP  <||@
  Comment 1079 1018 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1089 block B34 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1089 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1089 1022 NOP  <||@
  Comment 1090 1024 NOP  <||@
  Comment 1091 1026 NOP  <||@
  Comment 1092 1028 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 1030 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1102 block B15 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1102 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1102 628 rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1106 630 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1111 632 rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 634 NOP  <||@
  Comment 1117 636 NOP  <||@
  Comment 1118 638 NOP  <||@
  Comment 1119 640 NOP  <||@
  Comment 1120 642 NOP  <||@
  Comment 1121 644 NOP  <||@
  Comment 1122 646 NOP  <||@
  Comment 1123 648 NOP  <||@
  Comment 1124 650 NOP  <||@
  Comment 1125 652 NOP  <||@
  Comment 1126 654 NOP  <||@
  Comment 1127 656 NOP  <||@
  Comment 1128 658 NOP  <||@
  Comment 1129 660 NOP  <||@
  Comment 1130 662 NOP  <||@
  Comment 1131 664 NOP  <||@
  Comment 1132 666 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1137 668 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1142 670 rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 672 rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 674 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1153 676 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1156 678 rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 680 out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1163 682 out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1168 684 out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1172 686 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38]  <||@
  Comment 1175 {HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>}  <||@
  Comment 1175 INVOKESPECIAL  <||@
  Comment 1180 [stack:48, stack:56, stack:64, stack:72, stack:80]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1188 688 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 690 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 692 JUMP ~outgoingValues: [] destination: B15 -> B31  <||@
  Comment 1201 block B38 null  <||@
  Comment 1201 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 1086 NOP  <||@
  Comment 1202 1088 NOP  <||@
  Comment 1203 1090 NOP  <||@
  Comment 1204 1092 NOP  <||@
  Comment 1205 1094 NOP  <||@
  Comment 1206 1096 NOP  <||@
  Comment 1207 1098 NOP  <||@
  Comment 1208 1100 NOP  <||@
  Comment 1209 1102 NOP  <||@
  Comment 1210 1104 rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1213 1106 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1216 1108 CMP x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1219 1110 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1225 1112 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: <  <||@
  Comment 1229 1114 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1238 block B40 null  <||@
  Comment 1238 1140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 1142 NOP  <||@
  Comment 1239 1144 NOP  <||@
  Comment 1240 1146 NOP  <||@
  Comment 1241 1148 NOP  <||@
  Comment 1242 1150 NOP  <||@
  Comment 1243 1152 NOP  <||@
  Comment 1244 1154 NOP  <||@
  Comment 1245 1156 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1254 POLL_RETURN_FAR  <||@
  Comment 1271 block B5 null  <||@
  Comment 1271 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1271 282 NOP  <||@
  Comment 1272 284 NOP  <||@
  Comment 1273 286 NOP  <||@
  Comment 1274 288 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 1279 block B3 null  <||@
  Comment 1279 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1279 114 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1284 116 NOP  <||@
  Comment 1285 118 NOP  <||@
  Comment 1286 120 NOP  <||@
  Comment 1287 122 NOP  <||@
  Comment 1288 124 NOP  <||@
  Comment 1289 126 NOP  <||@
  Comment 1290 128 NOP  <||@
  Comment 1291 130 NOP  <||@
  Comment 1292 132 NOP  <||@
  Comment 1293 134 NOP  <||@
  Comment 1294 136 NOP  <||@
  Comment 1295 138 NOP  <||@
  Comment 1296 140 NOP  <||@
  Comment 1297 142 NOP  <||@
  Comment 1298 144 NOP  <||@
  Comment 1299 146 NOP  <||@
  Comment 1300 148 NOP  <||@
  Comment 1301 150 NOP  <||@
  Comment 1302 152 NOP  <||@
  Comment 1303 154 NOP  <||@
  Comment 1304 156 NOP  <||@
  Comment 1305 158 NOP  <||@
  Comment 1306 160 NOP  <||@
  Comment 1307 162 NOP  <||@
  Comment 1308 164 NOP  <||@
  Comment 1309 166 NOP  <||@
  Comment 1310 168 NOP  <||@
  Comment 1311 170 NOP  <||@
  Comment 1312 172 NOP  <||@
  Comment 1313 174 NOP  <||@
  Comment 1314 176 NOP  <||@
  Comment 1315 178 NOP  <||@
  Comment 1316 180 NOP  <||@
  Comment 1317 182 NOP  <||@
  Comment 1318 184 NOP  <||@
  Comment 1319 186 NOP  <||@
  Comment 1320 188 NOP  <||@
  Comment 1321 190 NOP  <||@
  Comment 1322 192 NOP  <||@
  Comment 1323 194 NOP  <||@
  Comment 1324 196 NOP  <||@
  Comment 1325 198 NOP  <||@
  Comment 1326 200 NOP  <||@
  Comment 1327 202 NOP  <||@
  Comment 1328 204 NOP  <||@
  Comment 1329 206 NOP  <||@
  Comment 1330 208 NOP  <||@
  Comment 1331 210 NOP  <||@
  Comment 1332 212 NOP  <||@
  Comment 1333 214 NOP  <||@
  Comment 1334 216 NOP  <||@
  Comment 1335 218 NOP  <||@
  Comment 1336 220 NOP  <||@
  Comment 1337 222 NOP  <||@
  Comment 1338 224 NOP  <||@
  Comment 1339 226 NOP  <||@
  Comment 1340 228 NOP  <||@
  Comment 1341 230 NOP  <||@
  Comment 1342 232 NOP  <||@
  Comment 1343 234 NOP  <||@
  Comment 1344 236 NOP  <||@
  Comment 1345 238 NOP  <||@
  Comment 1346 240 NOP  <||@
  Comment 1347 242 NOP  <||@
  Comment 1348 244 NOP  <||@
  Comment 1349 246 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1352 250 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18]  <||@
  Comment 1355 {HotSpotMethod<StreamEncoder.implFlushBuffer()>}  <||@
  Comment 1355 INVOKESPECIAL  <||@
  Comment 1360 [stack:72, stack:80]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4              
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |stack:28|DWORD 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1368 252 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1372 254 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18]  <||@
  Comment 1375 {HotSpotMethod<ByteBuffer.allocate(int)>}  <||@
  Comment 1375 INVOKESTATIC  <||@
  Comment 1380 [stack:72, stack:80]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |   |   |  
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1388 256 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1393 258 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b  <||@
  Comment 1450 260 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 1457 262 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1461 264 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b  <||@
  Comment 1555 266 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1560 268 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 1565 block B48 null  <||@
  Comment 1565 1294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 1296 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 1298 NOP  <||@
  Comment 1571 1300 NOP  <||@
  Comment 1572 1302 NOP  <||@
  Comment 1573 1304 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1580 1306 r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed]  <||@
  Comment 1586 1308 JUMP ~outgoingValues: [] destination: B48 -> B50  <||@
  Comment 1586 block B50 null  <||@
  Comment 1586 1324 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1586 1326 NOP  <||@
  Comment 1587 1328 NOP  <||@
  Comment 1588 1330 NOP  <||@
  Comment 1589 1332 NOP  <||@
  Comment 1590 1334 NOP  <||@
  Comment 1591 1336 NOP  <||@
  Comment 1592 1338 NOP  <||@
  Comment 1593 1340 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1600 1342 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1607 1344 DEOPT info [bci:21]  <||@
  Comment 1607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1612 [rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1620 block B45 null  <||@
  Comment 1620 1244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1620 1246 NOP  <||@
  Comment 1621 1248 NOP  <||@
  Comment 1622 1250 NOP  <||@
  Comment 1623 1252 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 1630 1254 r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed]  <||@
  Comment 1636 1256 JUMP ~outgoingValues: [] destination: B45 -> B47  <||@
  Comment 1636 block B47 null  <||@
  Comment 1636 1272 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1636 1274 NOP  <||@
  Comment 1637 1276 NOP  <||@
  Comment 1638 1278 NOP  <||@
  Comment 1639 1280 NOP  <||@
  Comment 1640 1282 NOP  <||@
  Comment 1641 1284 NOP  <||@
  Comment 1642 1286 NOP  <||@
  Comment 1643 1288 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1650 1290 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1657 1292 DEOPT info [bci:54, 38]  <||@
  Comment 1657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1662 [rsi:0, stack:48, stack:56, stack:72]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1670 block B29 null  <||@
  Comment 1670 948 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1670 950 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1675 952 NOP  <||@
  Comment 1676 954 NOP  <||@
  Comment 1677 956 NOP  <||@
  Comment 1678 958 r9|QWORD = MOVE input: long[12820|0x3214]  <||@
  Comment 1685 960 r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed]  <||@
  Comment 1691 962 JUMP ~outgoingValues: [] destination: B29 -> B44  <||@
  Comment 1691 block B44 null  <||@
  Comment 1691 1222 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1691 1224 NOP  <||@
  Comment 1692 1226 NOP  <||@
  Comment 1693 1228 NOP  <||@
  Comment 1694 1230 NOP  <||@
  Comment 1695 1232 NOP  <||@
  Comment 1696 1234 NOP  <||@
  Comment 1697 1236 NOP  <||@
  Comment 1698 1238 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1705 1240 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1712 1242 DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38]  <||@
  Comment 1712 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1717 [rsi:0, stack:48, stack:56, stack:72]at java.nio.Buffer.position(Buffer.java:330) [bci: 50, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |r11|DWORD 
  at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:56|QWORD[.]  |- 
  at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |r11|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2                  |3         
     locals:  |-  |-  |stack:80|QWORD[.]  |r10|DWORD 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1725 block B27 null  <||@
  Comment 1725 918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1725 920 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1730 922 NOP  <||@
  Comment 1731 924 NOP  <||@
  Comment 1732 926 NOP  <||@
  Comment 1733 928 r9|QWORD = MOVE input: long[12180|0x2f94]  <||@
  Comment 1740 930 r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed]  <||@
  Comment 1746 932 JUMP ~outgoingValues: [] destination: B27 -> B44  <||@
  Comment 1748 block B39 null  <||@
  Comment 1748 1116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1748 1118 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 1120 NOP  <||@
  Comment 1754 1122 NOP  <||@
  Comment 1755 1124 NOP  <||@
  Comment 1756 1126 NOP  <||@
  Comment 1757 1128 NOP  <||@
  Comment 1758 1130 NOP  <||@
  Comment 1759 1132 NOP  <||@
  Comment 1760 1134 MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD  <||@
  Comment 1771 1136 MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD  <||@
  Comment 1782 1138 DEOPT info [bci:49]  <||@
  Comment 1782 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1787 [rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1795 block B25 null  <||@
  Comment 1795 890 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1795 892 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1800 894 NOP  <||@
  Comment 1801 896 NOP  <||@
  Comment 1802 898 NOP  <||@
  Comment 1803 900 r9|QWORD = MOVE input: long[11540|0x2d14]  <||@
  Comment 1810 902 r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed]  <||@
  Comment 1816 904 JUMP ~outgoingValues: [] destination: B25 -> B44  <||@
  Comment 1818 block B43 null  <||@
  Comment 1818 1206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1818 1208 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1823 1210 NOP  <||@
  Comment 1824 1212 NOP  <||@
  Comment 1825 1214 NOP  <||@
  Comment 1826 1216 r9|QWORD = MOVE input: long[13460|0x3494]  <||@
  Comment 1833 1218 r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd]  <||@
  Comment 1839 1220 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 1844 block B49 null  <||@
  Comment 1844 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1844 1312 NOP  <||@
  Comment 1845 1314 NOP  <||@
  Comment 1846 1316 NOP  <||@
  Comment 1847 1318 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1854 1320 r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed]  <||@
  Comment 1860 1322 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 1865 block B19 null  <||@
  Comment 1865 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1865 752 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1870 754 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1875 756 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1880 758 NOP  <||@
  Comment 1881 760 NOP  <||@
  Comment 1882 762 NOP  <||@
  Comment 1883 764 r9|QWORD = MOVE input: long[12180|0x2f94]  <||@
  Comment 1890 766 r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed]  <||@
  Comment 1896 776 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 1896 block B22 null  <||@
  Comment 1896 820 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1896 728 rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1901 730 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 732 rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1911 734 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1916 822 NOP  <||@
  Comment 1917 824 NOP  <||@
  Comment 1918 826 NOP  <||@
  Comment 1919 828 NOP  <||@
  Comment 1920 830 NOP  <||@
  Comment 1921 832 NOP  <||@
  Comment 1922 834 NOP  <||@
  Comment 1923 836 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1930 838 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1937 840 DEOPT info [bci:10, 78, 17, 57, 38]  <||@
  Comment 1937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1942 [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0]at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5 
     locals:  |-          |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |  
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78, duringCall: true, rethrow: false]
              |0             |1             |2             |3             |4          |5          |6            |7          |8          |9 
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |r14|DWORD  |r8|QWORD[.]  |r13|DWORD  |r10|DWORD  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 1950 block B17 null  <||@
  Comment 1950 710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1950 712 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1955 714 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1960 716 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 718 NOP  <||@
  Comment 1966 720 NOP  <||@
  Comment 1967 722 NOP  <||@
  Comment 1968 724 r9|QWORD = MOVE input: long[11540|0x2d14]  <||@
  Comment 1975 726 r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed]  <||@
  Comment 1981 736 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 1983 block B46 null  <||@
  Comment 1983 1258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1983 1260 NOP  <||@
  Comment 1984 1262 NOP  <||@
  Comment 1985 1264 NOP  <||@
  Comment 1986 1266 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1993 1268 r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed]  <||@
  Comment 1999 1270 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 2004 block B41 null  <||@
  Comment 2004 1158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2004 1160 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2009 1162 NOP  <||@
  Comment 2010 1164 NOP  <||@
  Comment 2011 1166 NOP  <||@
  Comment 2012 1168 NOP  <||@
  Comment 2013 1170 NOP  <||@
  Comment 2014 1172 NOP  <||@
  Comment 2015 1174 NOP  <||@
  Comment 2016 1176 MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD  <||@
  Comment 2027 1178 MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2038 1180 DEOPT info [bci:41]  <||@
  Comment 2038 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2043 [rbx:0, rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |                   |    <||@
  Comment 2051 block B21 null  <||@
  Comment 2051 792 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2051 794 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 2056 796 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 798 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 800 NOP  <||@
  Comment 2067 802 NOP  <||@
  Comment 2068 804 NOP  <||@
  Comment 2069 806 r9|QWORD = MOVE input: long[12820|0x3214]  <||@
  Comment 2076 808 r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed]  <||@
  Comment 2082 818 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 2087 block B51 null  <||@
  Comment 2087 1346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2087 1348 NOP  <||@
  Comment 2088 1350 NOP  <||@
  Comment 2089 1352 NOP  <||@
  Comment 2090 1354 NOP  <||@
  Comment 2091 1356 NOP  <||@
  Comment 2092 1358 NOP  <||@
  Comment 2093 1360 NOP  <||@
  Comment 2094 1362 MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD  <||@
  Comment 2105 1364 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2116 1366 DEOPT info [bci:0]  <||@
  Comment 2116 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2121 [rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 2129 block B42 null  <||@
  Comment 2129 1182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2129 1184 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 1186 NOP  <||@
  Comment 2135 1188 NOP  <||@
  Comment 2136 1190 NOP  <||@
  Comment 2137 1192 NOP  <||@
  Comment 2138 1194 NOP  <||@
  Comment 2139 1196 NOP  <||@
  Comment 2140 1198 NOP  <||@
  Comment 2141 1200 MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD  <||@
  Comment 2152 1202 MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD  <||@
  Comment 2163 1204 DEOPT info [bci:20, 57, 38]  <||@
  Comment 2163 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2168 [rbx:0, rsi:0, stack:48, stack:56, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 2181 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2206 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2216 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2231 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2269 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2299 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2304 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2339 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2369 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2374 [rdx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:80]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2404 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2409 [rdx:0, rsi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2439 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2444 [rdx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2452 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2452 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2458 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4957[sun.nio.cs.StreamEncoder.implWrite(CharBuffer)]"
  method "HotSpotCompilation-4957[sun.nio.cs.StreamEncoder.implWrite(CharBuffer)]"
  date 1724269719901
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ab9bb60 448b560849bc0000002b787f00004d03d44d33e4493bc20f850395befe66669089842400c0feff4883ec789041817f20030000000f854608000090909090909090909090909048896c2470488974245048895424488b4a18448b521c448b5e24468b1cdd20000000807e1b000f85b50700009090909090448b4614453bc30f8e730400009090909090909090909090909090448b4e20c4a17a1004cd10000000442bd14183fa01b900000000440f4cd1b80000807fc4c1797ec14423c841c1f917b995000000412bc9f7c1e0ffffff752ac4c1797ec14181e1ffff7f004181c900008000c5f97ec085c07d0341f7d941d3f94183c10141d1f9eb37c57a2cc84181f900000080752ac5f97ec081e0ffffff7f4533c981f80000807f7f15c5f97ec085c041b900000080b8ffffff7f440f49c8450fafd1453bd0450f4fd0453bd30f8fb90300009090909090909048bb5807e72d0600000048895c2440e9450200006666660f1f840000000000666666906666660f1f8400000000006666669090909090904183fb010f85780200009090904489742464909090909090909090909042c704d51400000001000000448b5a3049c1e2034c89542438448bf749c1e6034c89742430428504dd00000000807a2c000f85e70500009090909090428504c5000000004584c90f8566040000897c242c909090909090909090909090909090909090909090909090909090909090909090909090909049c1e3034d8bcb49c1e0034d8bf08b7a2803c74c63d049d1e24d8d52104d03d103cd4c63c94d8d49104d03ce458bf54403f544896c2460458bee442be94489742458448bf34403f7896c245c418bee2be8413bed410f4fed498bf2498bd1448be98bcd4c894424204c895c24188be8e814f8d3fe448bd04503d5448bdd4403d8453bf30f8fad0100009090909090442bdf443bdb0f8fec040000909090904585db0f8c8a040000488b54244890909090443b5a0c0f8c31050000448b74246490909090909090909044895a1848be0000002b787f00004e8d343648be18281c2b787f0000493bf60f85150400009090909090418bf22b74245c3b7424600f8fe80300009090909085f60f8c960300008b7c242c909090903b34fd0c0000000f8c4a03000090909090908934fd18000000488b5c24409090909090448b530c4585d20f85d4000000909090909090904585d20f8442010000909090904183fa010f85570400004c8b54245090909090909090498bf2666690e88c94befe0f1f840064050006488b542448488b742450909090909090909090909090909090448b5620468b1cd5140000008b7e24448b04fd30000000440fbe0cfd2c0000008b0cfd180000008b2cfd28000000448b2cfd1c000000448b34fd080000008b42188b5a1c3bd80f8f7ffdffffe92e03000044896c2460896c245c909090904585db0f85010200009090904489742464488b542448488b742450e963fdffff909090904183fa010f8510040000909090488b542448e914ffffff8b4424584c8b442420488b5c243090909090909090909090909090909090488b742438488b542448488b4c2418498be8458bc3458bce488bfb48892c24448954240889442410666690e88493befe0f1f84006c060009488bd8488b542448e99cfeffff9090909090909090908b721c2b721883fe0141ba00000000410f4cf283fe010f84fe01000090909090909090488b6c24704883c478493ba7500400000f879d030000c5f877c3909090e94afcffff448954246490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bde666690e8d092befe0f1f84002007000a8b742464666690e8bc98befe0f1f84003407000b488b74245041807f40000f842e000000448b5e2449c1e3034d85db0f841d0000004d8b57284983fa000f84090300004983ea084d8957284d0357384d891a4c8bd049c1ea03448956244c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84af0200004983eb084d895f484d035f584d8913488b542448e92cfbffff488b74245090909049c7c3140a000041baedc6fdff90909090909090458997840400004d899f90040000e8ceefbefe0f1f84000000000090909049c7c39416000041baedeffdff90909090909090458997840400004d899f90040000e89cefbefe0f1f840000000000488b74245090909049c7c11432000041b8edd7fdff90909090909090458987840400004d898f90040000e865efbefe0f1f840000000000488b74245090909049c7c1942f000041b8eddbfdffebc7488b7424509090909090909041c78784040000edcefdff49c7879004000094070000e81fefbefe0f1f840000000000488b74245090909049c7c1142d000041b8eddffdffeb81488b74245090909049c7c19434000041b8cde7feffe967ffffff90909049c7c39402000041baedfffdffe9e9feffff448b5424584c8b442420488b74245090909049c7c1942f000041bbede7fdff488b5c2418488b4c2430488b7c2438488b5424489090909090909045899f840400004d898f90040000e884eebefe0f1f840000000000448b5424584c8b442420488b74245090909049c7c1142d000041bbedebfdffeba990909049c7c31414000041baedf7fdffe990feffff488b7424509090909090909041c78784040000edd3fdff49c7879004000014050000e81feebefe0f1f840000000000448b5424584c8b442420488b74245090909049c7c11432000041bbede3fdffe941ffffff9090909090909041c78784040000ed03feff49c7879004000014000000e8d1edbefe0f1f840000000000488b7424509090909090909041c78784040000edcafdff49c78790040000940c0000e8a2edbefe0f1f84000000000048896c2470e836eebcfee9abf7fffff4488d0d4ffcffff49898f68040000e9fdfbbefef44c891c24e8f3bdd2fee9f8fcfffff44c891424e864dfd2fee952fdfffff441c78784040000f59efeff49c7879004000000000000e83dedbefe0f1f84000000000041c78784040000f593feff49c7879004000000000000e81aedbefe0f1f84000000000041c78784040000f557feff49c7879004000000000000e8f7ecbefe0f1f84000000000041c78784040000f560feff49c7879004000000000000e8d4ecbefe0f1f84000000000041c78784040000f585feff49c7879004000000000000e8b1ecbefe0f1f84000000000041c78784040000f579feff49c7879004000000000000e88eecbefe0f1f840000000000e8078ed2fef4e821eabefef448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@576c9814 slotKind: QWORD  <||@
  Comment 75 30 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 80 32 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 85 34 rcx|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 r10|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 92 38 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 96 40 r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 96 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 96 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 42 CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 y: 0 size: BYTE inlinedY: null  <||@
  Comment 114 block B1 null  <||@
  Comment 114 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 46 NOP  <||@
  Comment 115 48 NOP  <||@
  Comment 116 50 NOP  <||@
  Comment 117 52 NOP  <||@
  Comment 118 54 NOP  <||@
  Comment 119 56 r8|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 123 58 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8526023080679708 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: DWORD  <||@
  Comment 132 block B2 null  <||@
  Comment 132 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 62 NOP  <||@
  Comment 133 64 NOP  <||@
  Comment 134 66 NOP  <||@
  Comment 135 68 NOP  <||@
  Comment 136 70 NOP  <||@
  Comment 137 72 NOP  <||@
  Comment 138 74 NOP  <||@
  Comment 139 76 NOP  <||@
  Comment 140 78 NOP  <||@
  Comment 141 80 NOP  <||@
  Comment 142 82 NOP  <||@
  Comment 143 84 NOP  <||@
  Comment 144 86 NOP  <||@
  Comment 145 88 NOP  <||@
  Comment 146 90 r9|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 150 92 xmm0|SINGLE = MOVSS input: [r9|DWORD[_] * 8 + 16] size: SS state [bci:0]  <||@
  Comment 150 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 150 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 160 94 r10|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 163 96 CMP x: r10|DWORD y: 1 size: DWORD  <||@
  Comment 167 98 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 172 100 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 176 102 r9|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rax|DWORD, rcxTmp: rcx|ILLEGAL}  <||@
  Comment 306 104 r10|DWORD = IMUL (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 310 106 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 313 108 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 317 110 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 2.033294968682986E-4 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 326 block B4 null  <||@
  Comment 326 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 326 272 NOP  <||@
  Comment 327 274 NOP  <||@
  Comment 328 276 NOP  <||@
  Comment 329 278 JUMP ~outgoingValues: [] destination: B4 -> B6  <||@
  Comment 329 block B6 null  <||@
  Comment 329 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 292 NOP  <||@
  Comment 330 294 NOP  <||@
  Comment 331 296 NOP  <||@
  Comment 332 298 NOP  <||@
  Comment 333 300 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470]  <||@
  Comment 333 {Object[CoderResult@167784470]}  <||@
  Comment 343 302 stack:64|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 348 304 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 353 block B8 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 353 362 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 364 NOP  <||@
  Comment 385 366 NOP  <||@
  Comment 386 368 NOP  <||@
  Comment 387 370 NOP  <||@
  Comment 388 372 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999465205576051 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null  <||@
  Comment 398 block B9 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 398 374 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 398 376 NOP  <||@
  Comment 399 378 NOP  <||@
  Comment 400 380 NOP  <||@
  Comment 401 382 stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 406 384 JUMP ~outgoingValues: [] destination: B9 -> B12  <||@
  Comment 406 block B12 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 406 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 406 424 NOP  <||@
  Comment 407 426 NOP  <||@
  Comment 408 428 NOP  <||@
  Comment 409 430 NOP  <||@
  Comment 410 432 NOP  <||@
  Comment 411 434 NOP  <||@
  Comment 412 436 NOP  <||@
  Comment 413 438 NOP  <||@
  Comment 414 440 NOP  <||@
  Comment 415 442 NOP  <||@
  Comment 416 444 NOP  <||@
  Comment 417 446 MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 429 448 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 48] size: DWORD  <||@
  Comment 433 450 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 437 452 stack:72|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 442 454 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 449 456 stack:80|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 454 458 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38]  <||@
  Comment 454 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 454 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 462 460 CMPCONSTBRANCH x: [rdx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B46 y: 0 size: BYTE inlinedY: null  <||@
  Comment 472 block B13 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 472 462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 464 NOP  <||@
  Comment 473 466 NOP  <||@
  Comment 474 468 NOP  <||@
  Comment 475 470 NOP  <||@
  Comment 476 472 NOP  <||@
  Comment 477 474 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38]  <||@
  Comment 477 [rdx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:80]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 477 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 485 476 TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B45  <||@
  Comment 494 block B14 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 494 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 480 stack:84|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD  <||@
  Comment 498 482 NOP  <||@
  Comment 499 484 NOP  <||@
  Comment 500 486 NOP  <||@
  Comment 501 488 NOP  <||@
  Comment 502 490 NOP  <||@
  Comment 503 492 NOP  <||@
  Comment 504 494 NOP  <||@
  Comment 505 496 NOP  <||@
  Comment 506 498 NOP  <||@
  Comment 507 500 NOP  <||@
  Comment 508 502 NOP  <||@
  Comment 509 504 NOP  <||@
  Comment 510 506 NOP  <||@
  Comment 511 508 NOP  <||@
  Comment 512 510 NOP  <||@
  Comment 513 512 NOP  <||@
  Comment 514 514 NOP  <||@
  Comment 515 516 NOP  <||@
  Comment 516 518 NOP  <||@
  Comment 517 520 NOP  <||@
  Comment 518 522 NOP  <||@
  Comment 519 524 NOP  <||@
  Comment 520 526 NOP  <||@
  Comment 521 528 NOP  <||@
  Comment 522 530 NOP  <||@
  Comment 523 532 NOP  <||@
  Comment 524 534 NOP  <||@
  Comment 525 536 NOP  <||@
  Comment 526 538 NOP  <||@
  Comment 527 540 NOP  <||@
  Comment 528 542 NOP  <||@
  Comment 529 544 NOP  <||@
  Comment 530 546 NOP  <||@
  Comment 531 548 NOP  <||@
  Comment 532 550 NOP  <||@
  Comment 533 552 NOP  <||@
  Comment 534 554 NOP  <||@
  Comment 535 556 NOP  <||@
  Comment 536 558 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 540 560 r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 543 562 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 547 564 r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 550 566 rdi|DWORD = MOV input: [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 553 568 rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 555 570 r10|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 558 572 r10|QWORD = SHL value: r10|QWORD size: QWORD  <||@
  Comment 561 574 r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD  <||@
  Comment 565 576 r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD  <||@
  Comment 568 578 rcx|DWORD = ADD (x: rcx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 570 580 r9|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 573 582 r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 577 584 r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD  <||@
  Comment 580 586 r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 586 588 stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 591 590 r13|DWORD = SUB (x: r14|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 597 592 stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 602 594 r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 608 596 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 612 598 rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 617 600 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 620 602 rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 624 604 rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD  <||@
  Comment 627 606 rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD  <||@
  Comment 630 608 r13|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 633 610 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 635 612 stack:96|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 640 614 stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 645 616 rbp|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 647 618 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 647 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 652 620 r10|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 658 622 r11|DWORD = ADD (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 664 624 CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.594464037114946E-6 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 673 block B16 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 673 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 696 NOP  <||@
  Comment 674 698 NOP  <||@
  Comment 675 700 NOP  <||@
  Comment 676 702 NOP  <||@
  Comment 677 704 NOP  <||@
  Comment 678 706 r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 681 708 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 690 block B18 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 690 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 740 NOP  <||@
  Comment 691 742 NOP  <||@
  Comment 692 744 NOP  <||@
  Comment 693 746 NOP  <||@
  Comment 694 748 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 703 block B20 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 703 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 703 780 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 708 782 NOP  <||@
  Comment 709 784 NOP  <||@
  Comment 710 786 NOP  <||@
  Comment 711 788 NOP  <||@
  Comment 712 790 CMPBRANCH (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B23 size: DWORD  <||@
  Comment 722 block B23 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 722 842 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 722 844 r14|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 727 846 NOP  <||@
  Comment 728 848 NOP  <||@
  Comment 729 850 NOP  <||@
  Comment 730 852 NOP  <||@
  Comment 731 854 NOP  <||@
  Comment 732 856 NOP  <||@
  Comment 733 858 NOP  <||@
  Comment 734 860 NOP  <||@
  Comment 735 862 NOP  <||@
  Comment 736 864 MOV (x: [rdx|QWORD[.] + 24], y: r11|DWORD) size: DWORD  <||@
  Comment 740 866 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 750 868 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 140154094223360 shift: 0  <||@
  Comment 754 870 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}  <||@
  Comment 754 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}}  <||@
  Comment 764 872 CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B43 size: QWORD  <||@
  Comment 773 block B24 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 773 874 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 773 876 NOP  <||@
  Comment 774 878 NOP  <||@
  Comment 775 880 NOP  <||@
  Comment 776 882 NOP  <||@
  Comment 777 884 NOP  <||@
  Comment 778 886 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:36|DWORD) size: DWORD  <||@
  Comment 785 888 CMPBRANCH (x: rsi|DWORD, y: stack:32|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 795 block B26 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 795 906 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 795 908 NOP  <||@
  Comment 796 910 NOP  <||@
  Comment 797 912 NOP  <||@
  Comment 798 914 NOP  <||@
  Comment 799 916 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 807 block B28 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 807 934 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 807 936 rdi|DWORD[_] = MOVE input: stack:84|DWORD[_] moveKind: DWORD  <||@
  Comment 811 938 NOP  <||@
  Comment 812 940 NOP  <||@
  Comment 813 942 NOP  <||@
  Comment 814 944 NOP  <||@
  Comment 815 946 CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 828 block B30 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 828 964 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 828 966 NOP  <||@
  Comment 829 968 NOP  <||@
  Comment 830 970 NOP  <||@
  Comment 831 972 NOP  <||@
  Comment 832 974 NOP  <||@
  Comment 833 976 MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 840 978 rbx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 845 980 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 845 block B31 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 845 982 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 845 984 NOP  <||@
  Comment 846 986 NOP  <||@
  Comment 847 988 NOP  <||@
  Comment 848 990 NOP  <||@
  Comment 849 992 NOP  <||@
  Comment 850 994 r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38]  <||@
  Comment 850 [rdx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:80]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 850 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 854 996 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999914009515922 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 size: DWORD  <||@
  Comment 863 block B32 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 863 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 863 1000 NOP  <||@
  Comment 864 1002 NOP  <||@
  Comment 865 1004 NOP  <||@
  Comment 866 1006 JUMP ~outgoingValues: [] destination: B32 -> B35  <||@
  Comment 866 block B35 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 866 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 866 1034 NOP  <||@
  Comment 867 1036 NOP  <||@
  Comment 868 1038 NOP  <||@
  Comment 869 1040 NOP  <||@
  Comment 870 1042 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999913905476284 condition: = trueDestination: B35 -> B38 falseDestination: B35 -> B36 size: DWORD  <||@
  Comment 879 block B36 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 879 1044 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 879 1046 NOP  <||@
  Comment 880 1048 NOP  <||@
  Comment 881 1050 NOP  <||@
  Comment 882 1052 NOP  <||@
  Comment 883 1054 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B41 y: 1 size: DWORD inlinedY: null  <||@
  Comment 893 block B37 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 893 1056 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 893 1058 r10|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 898 1060 NOP  <||@
  Comment 899 1062 NOP  <||@
  Comment 900 1064 NOP  <||@
  Comment 901 1066 NOP  <||@
  Comment 902 1068 NOP  <||@
  Comment 903 1070 NOP  <||@
  Comment 904 1072 NOP  <||@
  Comment 905 1074 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 908 1076 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131]  <||@
  Comment 911 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 911 INVOKESPECIAL  <||@
  Comment 916 [stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 924 1078 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 929 1080 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 934 1082 JUMP ~outgoingValues: [] destination: B37 -> B7  <||@
  Comment 934 block B7 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 934 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 934 308 NOP  <||@
  Comment 935 310 NOP  <||@
  Comment 936 312 NOP  <||@
  Comment 937 314 NOP  <||@
  Comment 938 316 NOP  <||@
  Comment 939 318 NOP  <||@
  Comment 940 320 NOP  <||@
  Comment 941 322 NOP  <||@
  Comment 942 324 NOP  <||@
  Comment 943 326 NOP  <||@
  Comment 944 328 NOP  <||@
  Comment 945 330 NOP  <||@
  Comment 946 332 NOP  <||@
  Comment 947 334 NOP  <||@
  Comment 948 336 NOP  <||@
  Comment 949 338 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 953 340 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21]  <||@
  Comment 953 [rdx:0, rsi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 953 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 961 342 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 964 344 r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21]  <||@
  Comment 964 [rdx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 964 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 972 346 r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD  <||@
  Comment 981 348 rcx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 988 350 rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD  <||@
  Comment 995 352 r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD  <||@
  Comment 1003 354 r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 1011 356 rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 1014 358 rbx|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1017 360 CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B49 size: DWORD  <||@
  Comment 1030 block B10 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1030 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1030 388 stack:32|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1035 390 stack:36|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1039 392 NOP  <||@
  Comment 1040 394 NOP  <||@
  Comment 1041 396 NOP  <||@
  Comment 1042 398 NOP  <||@
  Comment 1043 400 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9999999999996475 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B48 size: DWORD  <||@
  Comment 1052 block B11 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1052 402 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1052 404 NOP  <||@
  Comment 1053 406 NOP  <||@
  Comment 1054 408 NOP  <||@
  Comment 1055 410 stack:28|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1060 416 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1065 418 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1070 420 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1075 block B33 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1075 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1075 1010 NOP  <||@
  Comment 1076 1012 NOP  <||@
  Comment 1077 1014 NOP  <||@
  Comment 1078 1016 NOP  <||@
  Comment 1079 1018 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B42 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1089 block B34 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1089 1020 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1089 1022 NOP  <||@
  Comment 1090 1024 NOP  <||@
  Comment 1091 1026 NOP  <||@
  Comment 1092 1028 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 1030 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1102 block B15 loop 0 depth 1 header:16|LoopBegin  <||@
  Comment 1102 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1102 628 rax|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1106 630 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1111 632 rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1116 634 NOP  <||@
  Comment 1117 636 NOP  <||@
  Comment 1118 638 NOP  <||@
  Comment 1119 640 NOP  <||@
  Comment 1120 642 NOP  <||@
  Comment 1121 644 NOP  <||@
  Comment 1122 646 NOP  <||@
  Comment 1123 648 NOP  <||@
  Comment 1124 650 NOP  <||@
  Comment 1125 652 NOP  <||@
  Comment 1126 654 NOP  <||@
  Comment 1127 656 NOP  <||@
  Comment 1128 658 NOP  <||@
  Comment 1129 660 NOP  <||@
  Comment 1130 662 NOP  <||@
  Comment 1131 664 NOP  <||@
  Comment 1132 666 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1137 668 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1142 670 rcx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1147 672 rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 674 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1153 676 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1156 678 rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1159 680 out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1163 682 out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1168 684 out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1172 686 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38]  <||@
  Comment 1175 {HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>}  <||@
  Comment 1175 INVOKESPECIAL  <||@
  Comment 1180 [stack:48, stack:56, stack:64, stack:72, stack:80]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1188 688 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1191 690 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 692 JUMP ~outgoingValues: [] destination: B15 -> B31  <||@
  Comment 1201 block B38 null  <||@
  Comment 1201 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1201 1086 NOP  <||@
  Comment 1202 1088 NOP  <||@
  Comment 1203 1090 NOP  <||@
  Comment 1204 1092 NOP  <||@
  Comment 1205 1094 NOP  <||@
  Comment 1206 1096 NOP  <||@
  Comment 1207 1098 NOP  <||@
  Comment 1208 1100 NOP  <||@
  Comment 1209 1102 NOP  <||@
  Comment 1210 1104 rsi|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1213 1106 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rdx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1216 1108 CMP x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1219 1110 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1225 1112 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: <  <||@
  Comment 1229 1114 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1238 block B40 null  <||@
  Comment 1238 1140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 1142 NOP  <||@
  Comment 1239 1144 NOP  <||@
  Comment 1240 1146 NOP  <||@
  Comment 1241 1148 NOP  <||@
  Comment 1242 1150 NOP  <||@
  Comment 1243 1152 NOP  <||@
  Comment 1244 1154 NOP  <||@
  Comment 1245 1156 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1254 POLL_RETURN_FAR  <||@
  Comment 1271 block B5 null  <||@
  Comment 1271 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1271 282 NOP  <||@
  Comment 1272 284 NOP  <||@
  Comment 1273 286 NOP  <||@
  Comment 1274 288 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 1279 block B3 null  <||@
  Comment 1279 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1279 114 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1284 116 NOP  <||@
  Comment 1285 118 NOP  <||@
  Comment 1286 120 NOP  <||@
  Comment 1287 122 NOP  <||@
  Comment 1288 124 NOP  <||@
  Comment 1289 126 NOP  <||@
  Comment 1290 128 NOP  <||@
  Comment 1291 130 NOP  <||@
  Comment 1292 132 NOP  <||@
  Comment 1293 134 NOP  <||@
  Comment 1294 136 NOP  <||@
  Comment 1295 138 NOP  <||@
  Comment 1296 140 NOP  <||@
  Comment 1297 142 NOP  <||@
  Comment 1298 144 NOP  <||@
  Comment 1299 146 NOP  <||@
  Comment 1300 148 NOP  <||@
  Comment 1301 150 NOP  <||@
  Comment 1302 152 NOP  <||@
  Comment 1303 154 NOP  <||@
  Comment 1304 156 NOP  <||@
  Comment 1305 158 NOP  <||@
  Comment 1306 160 NOP  <||@
  Comment 1307 162 NOP  <||@
  Comment 1308 164 NOP  <||@
  Comment 1309 166 NOP  <||@
  Comment 1310 168 NOP  <||@
  Comment 1311 170 NOP  <||@
  Comment 1312 172 NOP  <||@
  Comment 1313 174 NOP  <||@
  Comment 1314 176 NOP  <||@
  Comment 1315 178 NOP  <||@
  Comment 1316 180 NOP  <||@
  Comment 1317 182 NOP  <||@
  Comment 1318 184 NOP  <||@
  Comment 1319 186 NOP  <||@
  Comment 1320 188 NOP  <||@
  Comment 1321 190 NOP  <||@
  Comment 1322 192 NOP  <||@
  Comment 1323 194 NOP  <||@
  Comment 1324 196 NOP  <||@
  Comment 1325 198 NOP  <||@
  Comment 1326 200 NOP  <||@
  Comment 1327 202 NOP  <||@
  Comment 1328 204 NOP  <||@
  Comment 1329 206 NOP  <||@
  Comment 1330 208 NOP  <||@
  Comment 1331 210 NOP  <||@
  Comment 1332 212 NOP  <||@
  Comment 1333 214 NOP  <||@
  Comment 1334 216 NOP  <||@
  Comment 1335 218 NOP  <||@
  Comment 1336 220 NOP  <||@
  Comment 1337 222 NOP  <||@
  Comment 1338 224 NOP  <||@
  Comment 1339 226 NOP  <||@
  Comment 1340 228 NOP  <||@
  Comment 1341 230 NOP  <||@
  Comment 1342 232 NOP  <||@
  Comment 1343 234 NOP  <||@
  Comment 1344 236 NOP  <||@
  Comment 1345 238 NOP  <||@
  Comment 1346 240 NOP  <||@
  Comment 1347 242 NOP  <||@
  Comment 1348 244 NOP  <||@
  Comment 1349 246 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1352 250 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18]  <||@
  Comment 1355 {HotSpotMethod<StreamEncoder.implFlushBuffer()>}  <||@
  Comment 1355 INVOKESPECIAL  <||@
  Comment 1360 [stack:72, stack:80]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4              
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |stack:28|DWORD 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1368 252 rsi|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1372 254 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18]  <||@
  Comment 1375 {HotSpotMethod<ByteBuffer.allocate(int)>}  <||@
  Comment 1375 INVOKESTATIC  <||@
  Comment 1380 [stack:72, stack:80]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |   |   |  
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1388 256 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1393 258 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b  <||@
  Comment 1450 260 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@9aa41ec encoding: base: 0 shift: 3  <||@
  Comment 1457 262 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1461 264 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@717d999b  <||@
  Comment 1555 266 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1560 268 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 1565 block B48 null  <||@
  Comment 1565 1294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 1296 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1570 1298 NOP  <||@
  Comment 1571 1300 NOP  <||@
  Comment 1572 1302 NOP  <||@
  Comment 1573 1304 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1580 1306 r10|DWORD = MOVE input: int[-145683|0xfffffffffffdc6ed]  <||@
  Comment 1586 1308 JUMP ~outgoingValues: [] destination: B48 -> B50  <||@
  Comment 1586 block B50 null  <||@
  Comment 1586 1324 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1586 1326 NOP  <||@
  Comment 1587 1328 NOP  <||@
  Comment 1588 1330 NOP  <||@
  Comment 1589 1332 NOP  <||@
  Comment 1590 1334 NOP  <||@
  Comment 1591 1336 NOP  <||@
  Comment 1592 1338 NOP  <||@
  Comment 1593 1340 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1600 1342 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1607 1344 DEOPT info [bci:21]  <||@
  Comment 1607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1612 [rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1620 block B45 null  <||@
  Comment 1620 1244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1620 1246 NOP  <||@
  Comment 1621 1248 NOP  <||@
  Comment 1622 1250 NOP  <||@
  Comment 1623 1252 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 1630 1254 r10|DWORD = MOVE input: int[-135187|0xfffffffffffdefed]  <||@
  Comment 1636 1256 JUMP ~outgoingValues: [] destination: B45 -> B47  <||@
  Comment 1636 block B47 null  <||@
  Comment 1636 1272 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1636 1274 NOP  <||@
  Comment 1637 1276 NOP  <||@
  Comment 1638 1278 NOP  <||@
  Comment 1639 1280 NOP  <||@
  Comment 1640 1282 NOP  <||@
  Comment 1641 1284 NOP  <||@
  Comment 1642 1286 NOP  <||@
  Comment 1643 1288 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1650 1290 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1657 1292 DEOPT info [bci:54, 38]  <||@
  Comment 1657 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1662 [rsi:0, stack:48, stack:56, stack:72]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1670 block B29 null  <||@
  Comment 1670 948 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1670 950 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1675 952 NOP  <||@
  Comment 1676 954 NOP  <||@
  Comment 1677 956 NOP  <||@
  Comment 1678 958 r9|QWORD = MOVE input: long[12820|0x3214]  <||@
  Comment 1685 960 r8|DWORD = MOVE input: int[-141331|0xfffffffffffdd7ed]  <||@
  Comment 1691 962 JUMP ~outgoingValues: [] destination: B29 -> B44  <||@
  Comment 1691 block B44 null  <||@
  Comment 1691 1222 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1691 1224 NOP  <||@
  Comment 1692 1226 NOP  <||@
  Comment 1693 1228 NOP  <||@
  Comment 1694 1230 NOP  <||@
  Comment 1695 1232 NOP  <||@
  Comment 1696 1234 NOP  <||@
  Comment 1697 1236 NOP  <||@
  Comment 1698 1238 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 1705 1240 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1712 1242 DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38]  <||@
  Comment 1712 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1717 [rsi:0, stack:48, stack:56, stack:72]at java.nio.Buffer.position(Buffer.java:330) [bci: 50, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |r11|DWORD 
  at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:56|QWORD[.]  |- 
  at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:56|QWORD[.]  |r11|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2                  |3         
     locals:  |-  |-  |stack:80|QWORD[.]  |r10|DWORD 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1725 block B27 null  <||@
  Comment 1725 918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1725 920 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1730 922 NOP  <||@
  Comment 1731 924 NOP  <||@
  Comment 1732 926 NOP  <||@
  Comment 1733 928 r9|QWORD = MOVE input: long[12180|0x2f94]  <||@
  Comment 1740 930 r8|DWORD = MOVE input: int[-140307|0xfffffffffffddbed]  <||@
  Comment 1746 932 JUMP ~outgoingValues: [] destination: B27 -> B44  <||@
  Comment 1748 block B39 null  <||@
  Comment 1748 1116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1748 1118 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 1120 NOP  <||@
  Comment 1754 1122 NOP  <||@
  Comment 1755 1124 NOP  <||@
  Comment 1756 1126 NOP  <||@
  Comment 1757 1128 NOP  <||@
  Comment 1758 1130 NOP  <||@
  Comment 1759 1132 NOP  <||@
  Comment 1760 1134 MOV x: [r15|QWORD + 1156] y: -143635 size: DWORD  <||@
  Comment 1771 1136 MOV x: [r15|QWORD + 1168] y: 1940 size: QWORD  <||@
  Comment 1782 1138 DEOPT info [bci:49]  <||@
  Comment 1782 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1787 [rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 1795 block B25 null  <||@
  Comment 1795 890 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1795 892 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1800 894 NOP  <||@
  Comment 1801 896 NOP  <||@
  Comment 1802 898 NOP  <||@
  Comment 1803 900 r9|QWORD = MOVE input: long[11540|0x2d14]  <||@
  Comment 1810 902 r8|DWORD = MOVE input: int[-139283|0xfffffffffffddfed]  <||@
  Comment 1816 904 JUMP ~outgoingValues: [] destination: B25 -> B44  <||@
  Comment 1818 block B43 null  <||@
  Comment 1818 1206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1818 1208 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1823 1210 NOP  <||@
  Comment 1824 1212 NOP  <||@
  Comment 1825 1214 NOP  <||@
  Comment 1826 1216 r9|QWORD = MOVE input: long[13460|0x3494]  <||@
  Comment 1833 1218 r8|DWORD = MOVE input: int[-71731|0xfffffffffffee7cd]  <||@
  Comment 1839 1220 JUMP ~outgoingValues: [] destination: B43 -> B44  <||@
  Comment 1844 block B49 null  <||@
  Comment 1844 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1844 1312 NOP  <||@
  Comment 1845 1314 NOP  <||@
  Comment 1846 1316 NOP  <||@
  Comment 1847 1318 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1854 1320 r10|DWORD = MOVE input: int[-131091|0xfffffffffffdffed]  <||@
  Comment 1860 1322 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 1865 block B19 null  <||@
  Comment 1865 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1865 752 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1870 754 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1875 756 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1880 758 NOP  <||@
  Comment 1881 760 NOP  <||@
  Comment 1882 762 NOP  <||@
  Comment 1883 764 r9|QWORD = MOVE input: long[12180|0x2f94]  <||@
  Comment 1890 766 r11|DWORD = MOVE input: int[-137235|0xfffffffffffde7ed]  <||@
  Comment 1896 776 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 1896 block B22 null  <||@
  Comment 1896 820 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1896 728 rbx|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1901 730 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 732 rdi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1911 734 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1916 822 NOP  <||@
  Comment 1917 824 NOP  <||@
  Comment 1918 826 NOP  <||@
  Comment 1919 828 NOP  <||@
  Comment 1920 830 NOP  <||@
  Comment 1921 832 NOP  <||@
  Comment 1922 834 NOP  <||@
  Comment 1923 836 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1930 838 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1937 840 DEOPT info [bci:10, 78, 17, 57, 38]  <||@
  Comment 1937 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1942 [rcx:0, rdx:0, rbx:0, rsi:0, rdi:0, r8:0]at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5 
     locals:  |-          |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |  
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78, duringCall: true, rethrow: false]
              |0             |1             |2             |3             |4          |5          |6            |7          |8          |9 
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |r14|DWORD  |r8|QWORD[.]  |r13|DWORD  |r10|DWORD  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |rdi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 1950 block B17 null  <||@
  Comment 1950 710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1950 712 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1955 714 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1960 716 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 718 NOP  <||@
  Comment 1966 720 NOP  <||@
  Comment 1967 722 NOP  <||@
  Comment 1968 724 r9|QWORD = MOVE input: long[11540|0x2d14]  <||@
  Comment 1975 726 r11|DWORD = MOVE input: int[-136211|0xfffffffffffdebed]  <||@
  Comment 1981 736 JUMP ~outgoingValues: [] destination: B17 -> B22  <||@
  Comment 1983 block B46 null  <||@
  Comment 1983 1258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1983 1260 NOP  <||@
  Comment 1984 1262 NOP  <||@
  Comment 1985 1264 NOP  <||@
  Comment 1986 1266 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1993 1268 r10|DWORD = MOVE input: int[-133139|0xfffffffffffdf7ed]  <||@
  Comment 1999 1270 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 2004 block B41 null  <||@
  Comment 2004 1158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2004 1160 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2009 1162 NOP  <||@
  Comment 2010 1164 NOP  <||@
  Comment 2011 1166 NOP  <||@
  Comment 2012 1168 NOP  <||@
  Comment 2013 1170 NOP  <||@
  Comment 2014 1172 NOP  <||@
  Comment 2015 1174 NOP  <||@
  Comment 2016 1176 MOV x: [r15|QWORD + 1156] y: -142355 size: DWORD  <||@
  Comment 2027 1178 MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2038 1180 DEOPT info [bci:41]  <||@
  Comment 2038 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2043 [rbx:0, rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |                   |    <||@
  Comment 2051 block B21 null  <||@
  Comment 2051 792 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2051 794 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 2056 796 r8|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2061 798 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 800 NOP  <||@
  Comment 2067 802 NOP  <||@
  Comment 2068 804 NOP  <||@
  Comment 2069 806 r9|QWORD = MOVE input: long[12820|0x3214]  <||@
  Comment 2076 808 r11|DWORD = MOVE input: int[-138259|0xfffffffffffde3ed]  <||@
  Comment 2082 818 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 2087 block B51 null  <||@
  Comment 2087 1346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2087 1348 NOP  <||@
  Comment 2088 1350 NOP  <||@
  Comment 2089 1352 NOP  <||@
  Comment 2090 1354 NOP  <||@
  Comment 2091 1356 NOP  <||@
  Comment 2092 1358 NOP  <||@
  Comment 2093 1360 NOP  <||@
  Comment 2094 1362 MOV x: [r15|QWORD + 1156] y: -130067 size: DWORD  <||@
  Comment 2105 1364 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2116 1366 DEOPT info [bci:0]  <||@
  Comment 2116 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2121 [rsi:0, stack:72]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 2129 block B42 null  <||@
  Comment 2129 1182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2129 1184 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2134 1186 NOP  <||@
  Comment 2135 1188 NOP  <||@
  Comment 2136 1190 NOP  <||@
  Comment 2137 1192 NOP  <||@
  Comment 2138 1194 NOP  <||@
  Comment 2139 1196 NOP  <||@
  Comment 2140 1198 NOP  <||@
  Comment 2141 1200 MOV x: [r15|QWORD + 1156] y: -144659 size: DWORD  <||@
  Comment 2152 1202 MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD  <||@
  Comment 2163 1204 DEOPT info [bci:20, 57, 38]  <||@
  Comment 2163 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2168 [rbx:0, rsi:0, stack:48, stack:56, stack:72]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1                  |2 
     locals:  |rsi|QWORD[.]  |stack:56|QWORD[.]  |-   <||@
  Comment 2181 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2206 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2216 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2231 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2264 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2269 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2299 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2304 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2339 [rdx:0, rsi:0, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2369 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2374 [rdx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:80]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:48|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2404 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2409 [rdx:0, rsi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2439 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2444 [rdx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:80]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 2452 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2452 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2458 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2458 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
