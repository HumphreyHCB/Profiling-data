begin_compilation
  name " HotSpotCompilation-5350[java.io.BufferedOutputStream.write(byte[], int, int)]"
  method "HotSpotCompilation-5350[java.io.BufferedOutputStream.write(byte[], int, int)]"
  date 1724269741136
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a560 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a560  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.BufferedOutputStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v591 v597 ?35 ?16 ?169 ?28 ?491 v595 v318 ?132 v600 v596 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a560 a572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a560 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 1]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
=== Succesors ===
next: a561 
=== Usages ===
a263 v592 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - #next: a561  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v599 ?16 ?132 v325 j547 ?491 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v292 ?16 ?132 v325 j548 ?491 v300 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i161 ?16 v126 ?132 v325 v142 ?491 v296 j557 i299 i302 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 197
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v587 a561 a562 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a560 
=== Succesors ===
=== Usages ===
a561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a561 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-67595|0xfffffffffffef7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: a562 
=== Usages ===
v593 
=== Predecessor ===
a560 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v592 lastLocationAccess: - #next: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a561 
=== Succesors ===
=== Usages ===
a562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a562 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-68619|0xfffffffffffef3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
a271 v594 v609 v613 
=== Predecessor ===
a561 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v593 lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a562 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v613 
=== Succesors ===
next: j563 
=== Usages ===
=== Predecessor ===
a562 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v613 #next: j563  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j91 
index: - 
=== Succesors ===
=== Usages ===
j563 j576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: a564 
=== Usages ===
v589 
=== Predecessor ===
v587 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: a564  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
a564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
lastLocationAccess: - 
=== Succesors ===
next: i274 
=== Usages ===
v109 a373 v546 
=== Predecessor ===
j563 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 lastLocationAccess: - #next: i274  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a562 
=== Succesors ===
=== Usages ===
i274 i369 v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a562  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 v296 v76 v372 v372 v372 i274 v101 v117 v163 v221 v239 v292 ?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 ?234 v371 ?489 v372 i274 i116 i162 ?176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
expectedValue: i51 
newValue: i41 
stateAfter: - 
=== Succesors ===
next: v104 
=== Usages ===
v101 
=== Predecessor ===
a564 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - expectedValue: i51 newValue: i41 stateAfter: - #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i51 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i274 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
v546 ?122 v371 ?74 ?489 v372 ?115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a562 
=== Succesors ===
=== Usages ===
a565 v374 v544 v546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a562  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: BufferedOutputStream.java
sourceLine: 198
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a263 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 1]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a560 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a560  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?16 
values: a263 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?16 values: a263  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?24 
=== Succesors ===
=== Usages ===
?74 ?88 ?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?24  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 j518 j518 j518 j518 j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
i274 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a565 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a565 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
a368 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a368 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a565 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a565  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a368 
y: a564 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a368 y: a564  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
a565 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v111 #falseSuccessor: v110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
=== Succesors ===
next: v488 
=== Usages ===
i116 ?115 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i32
=== Inputs ===
x: i369 
y: i41 
=== Succesors ===
=== Usages ===
v117 v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i369 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i51 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v487 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v486 #falseSuccessor: v487  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a271 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a271  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i369 a271 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i369 a271  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - value: i116 stateAfter: - #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i73 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i73  <|@  <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a271 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a271 i41  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a271 
=== Succesors ===
=== Usages ===
?489 ?490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a271  <|@  <|@
tid ?489 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
values: a271 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74 values: a271 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v371 
stateDuring: ?489 
=== Succesors ===
next: v79 
=== Usages ===
v76 
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v371 stateDuring: ?489 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i51 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.7420367877972185
stamp: void
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
i73 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v78 #falseSuccessor: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i83 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a271 a80 i41 i51 i51 i51 j81 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a271 a80 i41 i51 i51 i51 j81  <|@  <|@
tid ?490 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v372 
stateDuring: ?490 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v372 stateDuring: ?490 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v609 
value: - 
stateBefore: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v609 value: - stateBefore: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a373 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a564 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
value: a373 
stateAfter: - 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - value: a373 stateAfter: - #next: v546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v609 
value: a564 
object: a271 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v609 value: a564 object: a271 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v87 v90 v123 
=== Succesors ===
next: i566 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v87 v90 v123 #next: i566  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.maxBufSize
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:212) [bci: 2]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
v126 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:212) [bci: 5]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i566 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i566  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:212) [bci: 5]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.999996150958756
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
i566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 23]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i567 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i567  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
=== Succesors ===
=== Usages ===
v519 i567 i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-74251|0xfffffffffffeddf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v599 
lastLocationAccess: - 
=== Succesors ===
next: a568 
=== Usages ===
i299 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v599 lastLocationAccess: - #next: a568  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 17]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
=== Succesors ===
next: i569 
=== Usages ===
a284 v598 
=== Predecessor ===
i567 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a568 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-74507|0xfffffffffffedcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 20]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v598 
lastLocationAccess: - 
=== Succesors ===
next: i570 
=== Usages ===
v167 i141 i302 
=== Predecessor ===
a568 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v598 lastLocationAccess: - #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i570 v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:138) [bci: 1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
i161 i141 j553 v294 v303 
=== Predecessor ===
i569 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:138) [bci: 5]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i4 
y: i570 
=== Succesors ===
=== Usages ===
i162 v317 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i570  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:138) [bci: 7]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i161 
y: i41 
=== Succesors ===
=== Usages ===
v163 v167 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i161 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:139) [bci: 10]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i162 
y: i51 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i162 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:139) [bci: 10]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
i570 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v449 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:139) [bci: 10]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: 9620
stableDimension: 0
stamp: i64 [9620]
stampKind: i64
value: long[9620|0x2594]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -114707
stableDimension: 0
stamp: i32 [-114707]
stampKind: i32
value: int[-114707|0xfffffffffffe3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 16]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:142) [bci: 24]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i569 
y: i162 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i569 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:142) [bci: 24]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v453 #falseSuccessor: v454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:142) [bci: 24]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: 10260
stableDimension: 0
stamp: i64 [10260]
stampKind: i64
value: long[10260|0x2814]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i526 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -115731
stableDimension: 0
stamp: i32 [-115731]
stampKind: i32
value: int[-115731|0xfffffffffffe3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:146) [bci: 58]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 38]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i569 
y: i570 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i569 y: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 39]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i4 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i141 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 39]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 39]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: 8340
stableDimension: 0
stamp: i64 [8340]
stampKind: i64
value: long[8340|0x2094]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755]
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 46]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 2]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i51 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v461 #falseSuccessor: v462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -117785
stableDimension: 0
stamp: i32 [-117785]
stampKind: i32
value: int[-117785|0xfffffffffffe33e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:399) [bci: 33]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i570 
y: i51 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i570 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v465 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -118809
stableDimension: 0
stamp: i32 [-118809]
stampKind: i32
value: int[-118809|0xfffffffffffe2fe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i51 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v469 #falseSuccessor: v470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -119833
stableDimension: 0
stamp: i32 [-119833]
stampKind: i32
value: int[-119833|0xfffffffffffe2be7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i567 
y: i4 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i567 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i299 
y: i3 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i299 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -120857
stableDimension: 0
stamp: i32 [-120857]
stampKind: i32
value: int[-120857|0xfffffffffffe27e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i569 
y: i4 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i569 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i302 
y: i570 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i302 y: i570  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v477 #falseSuccessor: v478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -121881
stableDimension: 0
stamp: i32 [-121881]
stampKind: i32
value: int[-121881|0xfffffffffffe23e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32 [-121881 - -114707] bits:1...10001xxx111110x1x1
valueDescription: i32
=== Inputs ===
merge: v514 
values: i523 i526 i529 i532 i534 i536 i538 i540 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: i523 i526 i529 i532 i534 i536 i538 i540  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i64 [0 - 10260] bits:0...0x0xx0xx00x0x00
valueDescription: i64
=== Inputs ===
merge: v514 
values: j524 j527 j530 j81 j81 j81 j81 j81 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: j524 j527 j530 j81 j81 j81 j81 j81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v522 v525 v528 v531 v533 v535 v537 v539 
=== Succesors ===
next: v519 
=== Usages ===
i517 j518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v522 v525 v528 v531 v533 v535 v537 v539 #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
stateBefore: ?88 
actionAndReason: i517 
speculation: j518 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?88 actionAndReason: i517 speculation: j518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: j547 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: j552 
=== Usages ===
v610 
=== Predecessor ===
v478 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 17]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a568 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i64
=== Inputs ===
object: a284 
=== Succesors ===
next: v558 
=== Usages ===
v611 
=== Predecessor ===
j547 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a284 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: j548 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j548  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i570 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j552 
index: j553 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j553  <|@  <|@
f <@~|@floating>@ <|@
tid j557 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v610 v611 j557 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v610 v611 j557 #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: BufferedOutputStream.count
location: BufferedOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:225) [bci: 67]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: i161 
stateAfter: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: i161 stateAfter: - #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 8]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedOutputStream;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedOutputStream.flushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 200
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?132 ?492 ?491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?491 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 216
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a1 a2 i3 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedOutputStream.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v318 
stateDuring: ?491 
=== Succesors ===
next: a571 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v318 stateDuring: ?491 #next: a571  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a571 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 13]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
lastLocationAccess: - 
=== Succesors ===
next: v581 
=== Usages ===
a321 v612 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v600 lastLocationAccess: - #next: v581  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedOutputStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
sourceFile: BufferedOutputStream.java
sourceLine: 217
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a571 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?132 
object: v612 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
a571 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?132 object: v612 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 13]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: Uncompress
stamp: a java.io.OutputStream
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a571  <|@  <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/OutputStream;, resolved>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<OutputStream.write(byte[], int, int)>
=== Inputs ===
arguments: a321 a2 i3 i4 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a321 a2 i3 i4  <|@  <|@
tid ?492 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 217
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
bci: 19
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#OutputStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v325 
stateDuring: ?492 
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v325 stateDuring: ?492 #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v173 
=== Succesors ===
next: a572 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v173 #next: a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a572 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 22]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
=== Succesors ===
next: a573 
=== Usages ===
a327 v601 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - #next: a573  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
sourceFile: BufferedOutputStream.java
sourceLine: 202
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i338 a573 a574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a572 
=== Succesors ===
=== Usages ===
a573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a573 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-83979|0xfffffffffffeb7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: a574 
=== Usages ===
a331 v602 
=== Predecessor ===
a572 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v601 lastLocationAccess: - #next: a574  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a573 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-85003|0xfffffffffffeb3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: i338 
=== Usages ===
a335 v603 v604 v605 
=== Predecessor ===
a573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v602 lastLocationAccess: - #next: i338  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a574 
=== Succesors ===
=== Usages ===
i338 v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-86027|0xfffffffffffeaff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v603 
lastLocationAccess: - 
=== Succesors ===
next: a575 
=== Usages ===
i201 v184 ?176 
=== Predecessor ===
a574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v603 lastLocationAccess: - #next: a575  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a574 
=== Succesors ===
=== Usages ===
a575 v365 v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a575 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
=== Succesors ===
next: j576 
=== Usages ===
a341 
=== Predecessor ===
i338 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: a577 
=== Usages ===
v590 
=== Predecessor ===
a575 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: a577  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j576 
index: - 
=== Succesors ===
=== Usages ===
a577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j576 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a577 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
v182 
=== Predecessor ===
j576 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v590 lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a575 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a575  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a341 
y: a577 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a341 y: a577  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a573 
=== Succesors ===
=== Usages ===
?49 ?58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a573  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: BufferedOutputStream.java
sourceLine: 202
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a327 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 22]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a572 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a572  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a327 
=== Succesors ===
=== Usages ===
?58 ?49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a327  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
a577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i41 
=== Succesors ===
=== Usages ===
v55 v188 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i338 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v187 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
precise: true
stamp: void
=== Inputs ===
address: v604 
value: - 
stateBefore: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v604 value: - stateBefore: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid a381 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
value: a381 
stateAfter: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - value: a381 stateAfter: - #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v192 v194 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v192 v194 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
=== Inputs ===
x: i338 
y: i200 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i338 y: i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
value: i201 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - value: i201 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.867397541512695
stamp: void
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a345 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a345  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a574 
=== Succesors ===
=== Usages ===
a345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
v606 v541 
=== Predecessor ===
v53 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a345 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a345  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
a345 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v206 #falseSuccessor: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a350  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a345 
=== Succesors ===
=== Usages ===
a350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: v217 
=== Usages ===
a351 v542 v607 v608 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a350 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a350  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v212 
=== Usages ===
=== Predecessor ===
a350 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v216 #falseSuccessor: v212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v216 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i355 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i355  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a350 
=== Succesors ===
=== Usages ===
i357 i358 i355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
v221 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i51 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i355 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
i355 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v224 #falseSuccessor: v222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a331 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a331  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
=== Succesors ===
=== Usages ===
?231 ?493 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a350 
=== Succesors ===
=== Usages ===
?231 ?238 ?234 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a350  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?255 
values: - a351 
=== Succesors ===
=== Usages ===
?234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?255 values: - a351  <|@  <|@
tid ?234 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?231 
values: a351 i41 
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a351 i41  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 i236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v232 
=== Succesors ===
next: i357 
=== Usages ===
v240 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v232 #next: i357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: i358 
=== Usages ===
i236 i358 ?238 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i357 
y: i230 
=== Succesors ===
=== Usages ===
i358 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i357 y: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
expectedValue: i357 
newValue: i236 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
v239 
=== Predecessor ===
i357 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - expectedValue: i357 newValue: i236 stateAfter: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i358 
y: i51 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i358 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
i358 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v245 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?234 
values: i51 a228 a351 j229 - i230 i357 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?234 values: i51 a228 a351 j229 - i230 i357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v233 
=== Succesors ===
next: a578 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v233 #next: a578  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a350 
=== Succesors ===
=== Usages ===
a578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a578 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v249 
=== Usages ===
a362 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid a362 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a578 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a578  <|@  <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a362 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a362  <|@  <|@
tid ?493 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?255 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v363 
stateDuring: ?493 
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
a578 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v363 stateDuring: ?493 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v64 v66 v256 v257 v258 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v64 v66 v256 v257 v258 #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:209) [bci: 72]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a331 
=== Succesors ===
=== Usages ===
?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a331  <|@  <|@
f <@~|@floating>@ <|@
tid a335 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a574 
=== Succesors ===
=== Usages ===
?202 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a574  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?49 
values: a335 
=== Succesors ===
=== Usages ===
?176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?49 values: a335  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?202 
values: i338 a335 i41 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?202 values: i338 a335 i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
reason: UnreachedCode
speculation: {0x0000000000002a94[index: 340, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?176 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?176  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a560 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a560  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.io.BufferedOutputStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v591 v597 ?35 ?16 ?169 ?28 ?491 v595 v318 ?132 v600 v596 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a560 a572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a560 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 1]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
=== Succesors ===
next: a561 
=== Usages ===
a263 v592 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - #next: a561  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v599 ?16 ?132 v325 j547 ?491 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v292 ?16 ?132 v325 j548 ?491 v300 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i161 ?16 v126 ?132 v325 v142 ?491 v296 j557 i299 i302 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 197
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v587 a561 a562 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a560 
=== Succesors ===
=== Usages ===
a561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a561 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-67595|0xfffffffffffef7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 1]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: a562 
=== Usages ===
v593 
=== Predecessor ===
a560 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v592 lastLocationAccess: - #next: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a561 
=== Succesors ===
=== Usages ===
a562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a561  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a562 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-68619|0xfffffffffffef3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
a271 v594 v609 v613 
=== Predecessor ===
a561 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v593 lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v6|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a562 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: v613 
=== Succesors ===
next: j563 
=== Usages ===
=== Predecessor ===
a562 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: v613 #next: j563  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@CurrentJavaThread|@jdk.graal.compiler.hotspot.nodes.CurrentJavaThreadNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [r15|QWORD + 896] <|@
d <@d|@=== Debug Properties ===
displacement: 896
stamp: void*
stride: S1
=== Inputs ===
base: j91 
index: - 
=== Succesors ===
=== Usages ===
j563 j576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j91 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j563 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: a564 
=== Usages ===
v589 
=== Predecessor ===
v587 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: a564  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v7|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j563 
index: - 
=== Succesors ===
=== Usages ===
a564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j563 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a564 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:224) [bci: 0]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
lastLocationAccess: - 
=== Succesors ===
next: i274 
=== Usages ===
v109 a373 v546 
=== Predecessor ===
j563 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 lastLocationAccess: - #next: i274  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a562 
=== Succesors ===
=== Usages ===
i274 i369 v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a562  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v294 v296 v76 v372 v372 v372 i274 v101 v117 v163 v221 v239 v292 ?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 4]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 ?234 v371 ?489 v372 i274 i116 i162 ?176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.compareAndSetInt(Object, long, int, int) [bci: -1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:569) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 7]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
expectedValue: i51 
newValue: i41 
stateAfter: - 
=== Succesors ===
next: v104 
=== Usages ===
v101 
=== Predecessor ===
a564 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - expectedValue: i51 newValue: i41 stateAfter: - #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i51 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i274 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid a271 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 1]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a562 
=== Succesors ===
=== Usages ===
v546 ?122 v371 ?74 ?489 v372 ?115 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a562  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [v6|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a562 
=== Succesors ===
=== Usages ===
a565 v374 v544 v546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a562  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: BufferedOutputStream.java
sourceLine: 198
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a263 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 1]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a560 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a560  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: InternalLock.java
sourceLine: 74
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?16 
values: a263 
=== Succesors ===
=== Usages ===
?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?16 values: a263  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 322
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?24 
=== Succesors ===
=== Usages ===
?74 ?88 ?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?24  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 14]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 j518 j518 j518 j518 j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225) [bci: 10]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.13475912048564476
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
i274 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 20]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a565 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a565 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
a368 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid a368 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 21]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a565 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a565  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a368 
y: a564 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a368 y: a564  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:228) [bci: 25]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9997028739455198
stamp: void
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v110 
=== Usages ===
=== Predecessor ===
a565 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v111 #falseSuccessor: v110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 28]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
=== Succesors ===
next: v488 
=== Usages ===
i116 ?115 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 33]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: i32
=== Inputs ===
x: i369 
y: i41 
=== Succesors ===
=== Usages ===
v117 v370 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i369 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i51 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v487 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v486 #falseSuccessor: v487  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 1
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 152
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a271 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a271  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<ReentrantLock$NonfairSync.initialTryLock()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 29]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 229
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
values: i369 a271 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122 values: i369 a271  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:230) [bci: 36]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xbb20e35b]: UnreachedCode@6[HotSpotMethod<ReentrantLock$NonfairSync.initialTryLock()>, 39]}
stamp: void
=== Inputs ===
stateBefore: ?115 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 49]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:232) [bci: 51]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - value: i116 stateAfter: - #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 4]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v370 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:235) [bci: 56]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i73 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i73  <|@  <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>
=== Inputs ===
arguments: a271 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a271 i41  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
sourceFile: ReentrantLock.java
sourceLine: 153
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
values: a271 
=== Succesors ===
=== Usages ===
?489 ?490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124 values: a271  <|@  <|@
tid ?489 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 989
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
values: a271 i41 
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74 values: a271 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i73 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#ReentrantLock$NonfairSync.tryAcquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v371 
stateDuring: ?489 
=== Succesors ===
next: v79 
=== Usages ===
v76 
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v371 stateDuring: ?489 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i73 
y: i51 
=== Succesors ===
=== Usages ===
v79 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i73 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 5]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.7420367877972185
stamp: void
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v78 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
i73 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v78 #falseSuccessor: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 8]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i83 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i83  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 9]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;, resolved>, UnresolvedJavaType<Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<long>]
stamp: void
targetMethod: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>
=== Inputs ===
arguments: a271 a80 i41 i51 i51 i51 j81 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a271 a80 i41 i51 i51 i51 j81  <|@  <|@
tid ?490 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.acquire(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 990
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?74 
=== Succesors ===
=== Usages ===
i83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i83 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractQueuedSynchronizer.acquire
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v372 
stateDuring: ?490 
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v372 stateDuring: ?490 #next: v90  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
i83 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:991) [bci: 19]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 13]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v609 
value: - 
stateBefore: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v609 value: - stateBefore: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid a373 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
op: Compress
stamp: n! java.lang.Thread
=== Inputs ===
value: a564 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
value: a373 
stateAfter: - 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - value: a373 stateAfter: - #next: v546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226) [bci: 15]
at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v609 
value: a564 
object: a271 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v609 value: a564 object: a271 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v85 v87 v90 v123 
=== Succesors ===
next: i566 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v85 v87 v90 v123 #next: i566  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.maxBufSize
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:212) [bci: 2]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
v126 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:212) [bci: 5]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i566 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i566  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:212) [bci: 5]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: PROFILED designatedSuccessorProbability: 0.999996150958756
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
i566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 23]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i567 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i567  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: return
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.lock()>
localsSize: 1
locksSize: 0
sourceFile: ReentrantLock.java
sourceLine: 154
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?124 
=== Succesors ===
=== Usages ===
v519 i567 i569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?124  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i567 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-74251|0xfffffffffffeddf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v599 
lastLocationAccess: - 
=== Succesors ===
next: a568 
=== Usages ===
i299 
=== Predecessor ===
v128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v599 lastLocationAccess: - #next: a568  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 17]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
=== Succesors ===
next: i569 
=== Usages ===
a284 v598 
=== Predecessor ===
i567 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - #next: i569  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v24|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a568 
=== Succesors ===
=== Usages ===
i569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i569 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-74507|0xfffffffffffedcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 20]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v598 
lastLocationAccess: - 
=== Succesors ===
next: i570 
=== Usages ===
v167 i141 i302 
=== Predecessor ===
a568 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v598 lastLocationAccess: - #next: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i570 v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i570 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:138) [bci: 1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
=== Succesors ===
next: v451 
=== Usages ===
i161 i141 j553 v294 v303 
=== Predecessor ===
i569 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:138) [bci: 5]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i4 
y: i570 
=== Succesors ===
=== Usages ===
i162 v317 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i570  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:138) [bci: 7]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i161 
y: i41 
=== Succesors ===
=== Usages ===
v163 v167 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i161 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:139) [bci: 10]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i162 
y: i51 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i162 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:139) [bci: 10]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
i570 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v449 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:139) [bci: 10]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result long[9620|0x2594] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: 9620
stableDimension: 0
stamp: i64 [9620]
stampKind: i64
value: long[9620|0x2594]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i523 <|@
result int[-114707|0xfffffffffffe3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -114707
stableDimension: 0
stamp: i32 [-114707]
stampKind: i32
value: int[-114707|0xfffffffffffe3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 16]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:142) [bci: 24]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i569 
y: i162 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i569 y: i162  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:142) [bci: 24]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v453 #falseSuccessor: v454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:142) [bci: 24]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result long[10260|0x2814] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: 10260
stableDimension: 0
stamp: i64 [10260]
stampKind: i64
value: long[10260|0x2814]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i526 <|@
result int[-115731|0xfffffffffffe3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -115731
stableDimension: 0
stamp: i32 [-115731]
stampKind: i32
value: int[-115731|0xfffffffffffe3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:146) [bci: 58]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 38]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i569 
y: i570 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i569 y: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 39]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i4 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i141 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 39]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:221) [bci: 39]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
result long[8340|0x2094] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: 8340
stableDimension: 0
stamp: i64 [8340]
stampKind: i64
value: long[8340|0x2094]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
result int[-116755|0xfffffffffffe37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -116755
stableDimension: 0
stamp: i32 [-116755]
stampKind: i32
value: int[-116755|0xfffffffffffe37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 46]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 2]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i51 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v462 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v461 #falseSuccessor: v462  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
result int[-117785|0xfffffffffffe33e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -117785
stableDimension: 0
stamp: i32 [-117785]
stampKind: i32
value: int[-117785|0xfffffffffffe33e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:399) [bci: 33]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i570 
y: i51 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i570 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v465 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i534 <|@
result int[-118809|0xfffffffffffe2fe7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -118809
stableDimension: 0
stamp: i32 [-118809]
stampKind: i32
value: int[-118809|0xfffffffffffe2fe7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i51 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v469 
falseSuccessor: v470 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v469 #falseSuccessor: v470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
result int[-119833|0xfffffffffffe2be7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -119833
stableDimension: 0
stamp: i32 [-119833]
stampKind: i32
value: int[-119833|0xfffffffffffe2be7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i299 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i567 
y: i4 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i567 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i299 
y: i3 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i299 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i538 <|@
result int[-120857|0xfffffffffffe27e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -120857
stableDimension: 0
stamp: i32 [-120857]
stampKind: i32
value: int[-120857|0xfffffffffffe27e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid i302 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32
=== Inputs ===
x: i569 
y: i4 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i569 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i302 
y: i570 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i302 y: i570  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v478 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v477 #falseSuccessor: v478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
result int[-121881|0xfffffffffffe23e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
rawvalue: -121881
stableDimension: 0
stamp: i32 [-121881]
stampKind: i32
value: int[-121881|0xfffffffffffe23e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i517 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i32 [-121881 - -114707] bits:1...10001xxx111110x1x1
valueDescription: i32
=== Inputs ===
merge: v514 
values: i523 i526 i529 i532 i534 i536 i538 i540 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: i523 i526 i529 i532 i534 i536 i538 i540  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i64 [0 - 10260] bits:0...0x0xx0xx00x0x00
valueDescription: i64
=== Inputs ===
merge: v514 
values: j524 j527 j530 j81 j81 j81 j81 j81 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v514 values: j524 j527 j530 j81 j81 j81 j81 j81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v522 v525 v528 v531 v533 v535 v537 v539 
=== Succesors ===
next: v519 
=== Usages ===
i517 j518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v522 v525 v528 v531 v533 v535 v537 v539 #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
stateBefore: ?88 
actionAndReason: i517 
speculation: j518 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?88 actionAndReason: i517 speculation: j518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: j547 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: j552 
=== Usages ===
v610 
=== Predecessor ===
v478 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid a284 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.growIfNeeded(BufferedOutputStream.java:141) [bci: 17]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:220) [bci: 25]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a568 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: i64
=== Inputs ===
object: a284 
=== Succesors ===
next: v558 
=== Usages ===
v611 
=== Predecessor ===
j547 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a284 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid j548 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v34|QWORD[*] + v37|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j547 
index: j548 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j548  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i570 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i570  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v36|QWORD[*] + v26|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j552 
index: j553 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: j553  <|@  <|@
f <@~|@floating>@ <|@
tid j557 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:224) [bci: 57]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v610 v611 j557 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v610 v611 j557 #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: BufferedOutputStream.count
location: BufferedOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:225) [bci: 67]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: i161 
stateAfter: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: i161 stateAfter: - #next: v173  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v317 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 8]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/BufferedOutputStream;, resolved>]
stamp: void
targetMethod: HotSpotMethod<BufferedOutputStream.flushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 200
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?132 ?492 ?491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?491 <|@
d <@d|@=== Debug Properties ===
bci: 9
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 216
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a1 a2 i3 i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
bci: 9
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#BufferedOutputStream.flushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v318 
stateDuring: ?491 
=== Succesors ===
next: a571 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v318 stateDuring: ?491 #next: a571  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a571 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.io.OutputStream
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: FilterOutputStream.out
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 13]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
stamp: n java.io.OutputStream
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
lastLocationAccess: - 
=== Succesors ===
next: v581 
=== Usages ===
a321 v612 
=== Predecessor ===
v131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v600 lastLocationAccess: - #next: v581  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedOutputStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
sourceFile: BufferedOutputStream.java
sourceLine: 217
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169 values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v39|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a571 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a571  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?132 
object: v612 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
a571 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?132 object: v612 #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid a321 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 13]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
op: Uncompress
stamp: a java.io.OutputStream
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a571  <|@  <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/OutputStream;, resolved>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<OutputStream.write(byte[], int, int)>
=== Inputs ===
arguments: a321 a2 i3 i4 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a321 a2 i3 i4  <|@  <|@
tid ?492 <|@
d <@d|@=== Debug Properties ===
bci: 19
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.implWrite(byte[], int, int)>
localsSize: 4
locksSize: 0
sourceFile: BufferedOutputStream.java
sourceLine: 217
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?169 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
bci: 19
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
polymorphic: false
stamp: void
targetMethod: Direct#OutputStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v325 
stateDuring: ?492 
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v325 stateDuring: ?492 #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v172 v173 
=== Succesors ===
next: a572 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v172 v173 #next: a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a572 <|@
result v41|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# jdk.internal.misc.InternalLock
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: BufferedOutputStream.lock
memoryOrder: PLAIN
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 22]
stamp: n# jdk.internal.misc.InternalLock
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
=== Succesors ===
next: a573 
=== Usages ===
a327 v601 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - #next: a573  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: aload_0
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
sourceFile: BufferedOutputStream.java
sourceLine: 202
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i338 a573 a574 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v41|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a572 
=== Succesors ===
=== Usages ===
a573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a573 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.ReentrantLock
barrierType: NONE
deoptReasonAndAction: int[-83979|0xfffffffffffeb7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: InternalLock.lock
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.util.concurrent.locks.ReentrantLock
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: a574 
=== Usages ===
a331 v602 
=== Predecessor ===
a572 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v601 lastLocationAccess: - #next: a574  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v42|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a573 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a573  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a574 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
barrierType: NONE
deoptReasonAndAction: int[-85003|0xfffffffffffeb3f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ReentrantLock.sync
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n# java.util.concurrent.locks.ReentrantLock$NonfairSync
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: i338 
=== Usages ===
a335 v603 v604 v605 
=== Predecessor ===
a573 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v602 lastLocationAccess: - #next: i338  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v43|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a574 
=== Succesors ===
=== Usages ===
i338 v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i338 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-86027|0xfffffffffffeaff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v603 
lastLocationAccess: - 
=== Succesors ===
next: a575 
=== Usages ===
i201 v184 ?176 
=== Predecessor ===
a574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v603 lastLocationAccess: - #next: a575  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v43|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a574 
=== Succesors ===
=== Usages ===
a575 v365 v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a575 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
=== Succesors ===
next: j576 
=== Usages ===
a341 
=== Predecessor ===
i338 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - #next: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j576 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: JavaThread::_vthread
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: a577 
=== Usages ===
v590 
=== Predecessor ===
a575 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: a577  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v46|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j576 
index: - 
=== Succesors ===
=== Usages ===
a577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j576 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a577 <|@
d <@d|@=== Debug Properties ===
accessStamp: a! java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: _vthread OopHandle contents
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Thread.currentThread() [bci: -1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 11]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: a! java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
lastLocationAccess: - 
=== Succesors ===
next: v483 
=== Usages ===
v182 
=== Predecessor ===
j576 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v590 lastLocationAccess: - #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 8]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a575 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a575  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a341 
y: a577 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a341 y: a577  <|@  <|@
f <@~|@floating>@ <|@
tid a331 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 1]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.ReentrantLock
=== Inputs ===
value: a573 
=== Succesors ===
=== Usages ===
?49 ?58 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a573  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<BufferedOutputStream.write(byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: BufferedOutputStream.java
sourceLine: 202
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid a327 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 22]
op: Uncompress
stamp: a# jdk.internal.misc.InternalLock
=== Inputs ===
value: a572 
=== Succesors ===
=== Usages ===
?42 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a572  <|@  <|@
tid ?42 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<InternalLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: InternalLock.java
sourceLine: 78
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a327 
=== Succesors ===
=== Usages ===
?58 ?49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a327  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v182 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
a577 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v182 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 25]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:176) [bci: 26]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i41 
=== Succesors ===
=== Usages ===
v55 v188 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i338 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:177) [bci: 36]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.8652302759969847
stamp: void
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v187 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 39]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
precise: true
stamp: void
=== Inputs ===
address: v604 
value: - 
stateBefore: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v604 value: - stateBefore: - #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid a381 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractOwnableSynchronizer.exclusiveOwnerThread
location: AbstractOwnableSynchronizer.exclusiveOwnerThread
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:178) [bci: 41]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
value: a381 
stateAfter: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - value: a381 stateAfter: - #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
v186 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 44]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v192 v194 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v192 v194 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
=== Inputs ===
x: i338 
y: i200 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i338 y: i200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractQueuedSynchronizer.state
location: AbstractQueuedSynchronizer.state
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:554) [bci: 2]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:179) [bci: 46]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
value: i201 
stateAfter: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - value: i201 stateAfter: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 5]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.867397541512695
stamp: void
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 8]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a345 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a345  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v43|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a574 
=== Succesors ===
=== Usages ===
a345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a345 <|@
result v53|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer.head
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
v606 v541 
=== Predecessor ===
v53 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a345 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a345  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.9993015402267503
stamp: void
=== Inputs ===
condition: v541 
=== Succesors ===
trueSuccessor: v206 
falseSuccessor: v205 
=== Usages ===
=== Predecessor ===
a345 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v541 #trueSuccessor: v206 #falseSuccessor: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v206 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a350 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a350  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [v53|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a345 
=== Succesors ===
=== Usages ===
a350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a350 <|@
result v54|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.next
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: v217 
=== Usages ===
a351 v542 v607 v608 
=== Predecessor ===
v205 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a350 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a350  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.899215972285532
stamp: void
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v212 
=== Usages ===
=== Predecessor ===
a350 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v216 #falseSuccessor: v212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v216 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 13]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: i355 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i355  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v54|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a350 
=== Succesors ===
=== Usages ===
i357 i358 i355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
v221 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i355 
y: i51 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i355 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: PROFILED designatedSuccessorProbability: 0.89280868385346
stamp: void
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
i355 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v224 #falseSuccessor: v222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v224 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 20]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 9]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a331 
=== Succesors ===
=== Usages ===
?255 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a331  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1060
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?58 
=== Succesors ===
=== Usages ===
?231 ?493 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?58  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:643) [bci: 5]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.util.concurrent.locks.AbstractQueuedSynchronizer$Node
=== Inputs ===
value: a350 
=== Succesors ===
=== Usages ===
?231 ?238 ?234 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a350  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 644
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?255 
values: - a351 
=== Succesors ===
=== Usages ===
?234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?255 values: - a351  <|@  <|@
tid ?234 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer$Node.getAndUnsetStatus(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 481
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?231 
values: a351 i41 
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a351 i41  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result Object[Unsafe@679697080] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: Unsafe@679697080
stableDimension: 0
stamp: a!# jdk.internal.misc.Unsafe
stampKind: a java.lang.Object
value: Object[Unsafe@679697080]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
result long[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 4]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: 12
stableDimension: 0
stamp: i64 [12]
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 9]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2]
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
?238 i236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
v222 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v232 
=== Succesors ===
next: i357 
=== Usages ===
v240 v244 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v232 #next: i357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i357 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.status
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.getIntVolatile(Object, long) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 3]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: i358 
=== Usages ===
i236 i358 ?238 
=== Predecessor ===
v233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 17]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i357 
y: i230 
=== Succesors ===
=== Usages ===
i358 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i357 y: i230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
expectedValue: i357 
newValue: i236 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
v239 
=== Predecessor ===
i357 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - expectedValue: i357 newValue: i236 stateAfter: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i358 
y: i51 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i358 y: i51  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
i358 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v245 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
tid ?238 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Unsafe.getAndBitwiseAndInt(Object, long, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.weakCompareAndSetInt(Object, long, int, int) [bci: -1]
at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 18]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: Unsafe.java
sourceLine: 3233
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?234 
values: i51 a228 a351 j229 - i230 i357 
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?234 values: i51 a228 a351 j229 - i230 i357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateBefore: ?238 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?238 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3232) [bci: 0]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
loopBegin: v233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3235) [bci: 24]
at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v233 
=== Succesors ===
next: a578 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v233 #next: a578  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [v54|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a350 
=== Succesors ===
=== Usages ===
a578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a578 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Thread
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractQueuedSynchronizer$Node.waiter
memoryOrder: PLAIN
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: n java.lang.Thread
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v249 
=== Usages ===
a362 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid a362 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 27]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a java.lang.Thread
=== Inputs ===
value: a578 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a578  <|@  <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Thread;>]
stamp: void
targetMethod: HotSpotMethod<LockSupport.unpark(Thread)>
=== Inputs ===
arguments: a362 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a362  <|@  <|@
tid ?493 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 645
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?255 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
bci: 30
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
polymorphic: false
stamp: void
targetMethod: Direct#LockSupport.unpark
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v363 
stateDuring: ?493 
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
a578 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v363 stateDuring: ?493 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:647) [bci: 33]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1063) [bci: 17]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v64 v66 v256 v257 v258 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v64 v66 v256 v257 v258 #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.BufferedOutputStream.write(BufferedOutputStream.java:209) [bci: 72]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v480  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ReentrantLock.unlock()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 494
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?42 
values: a331 
=== Succesors ===
=== Usages ===
?202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?42 values: a331  <|@  <|@
f <@~|@floating>@ <|@
tid a335 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 1]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
op: Uncompress
stamp: a# java.util.concurrent.locks.ReentrantLock$NonfairSync
=== Inputs ===
value: a574 
=== Succesors ===
=== Usages ===
?202 ?176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a574  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractQueuedSynchronizer.release(int)>
localsSize: 2
locksSize: 0
sourceFile: AbstractQueuedSynchronizer.java
sourceLine: 1059
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?49 
values: a335 
=== Succesors ===
=== Usages ===
?176 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?49 values: a335  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: iload_1
code: ResolvedJavaMethodBytecode<ReentrantLock$Sync.tryRelease(int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.concurrent.locks.AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:545) [bci: 1]
at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 1]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
sourceFile: ReentrantLock.java
sourceLine: 173
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?202 
values: i338 a335 i41 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?202 values: i338 a335 i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:174) [bci: 14]
at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
reason: UnreachedCode
speculation: {0x0000000000002a94[index: 340, len: 20, hash: 0xadceab53]: UnreachedCode@6[HotSpotMethod<ReentrantLock$Sync.tryRelease(int)>, 17]}
stamp: void
=== Inputs ===
stateBefore: ?176 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  752  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  802  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  958  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  752  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  802  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  958  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- v56|d [0, 1[[82, 87[[474, 475[[750, 752[[800, 802[[860, 863[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[474, 475[[750, 751[[790, 801[[910, 911[[956, 957[[968, 973[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v38|q [0, 60[[472, 475[[748, 751[[788, 801[[910, 911[[956, 957[[966, 973[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v9|q [0, 58[[470, 475[[746, 751[[786, 801[[908, 911[[954, 957[[964, 973[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[468, 475[[750, 751[[796, 801[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[474, 475[[750, 751[[792, 801[[910, 911[[956, 957[[970, 973[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[[750, 751[[794, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [58, 638[[676, 692[[702, 714[[724, 911[[914, 1013[[1014, 1095[[1096, 1127[58 MustHaveRegister 66 MustHaveRegister 284 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister 476 MustHaveRegister 514 MustHaveRegister 954 ShouldHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [60, 458[[724, 816[[914, 966[[976, 986[[1014, 1095[[1096, 1127[60 MustHaveRegister 308 MustHaveRegister 458 ShouldHaveRegister 966 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [62, 464[[724, 816[[914, 968[[976, 986[[1014, 1095[[1096, 1127[62 MustHaveRegister 360 MustHaveRegister 400 MustHaveRegister 464 ShouldHaveRegister 968 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [64, 466[[724, 816[[914, 970[[976, 986[[1014, 1095[[1096, 1127[64 MustHaveRegister 284 MustHaveRegister 316 ShouldHaveRegister 348 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister 414 ShouldHaveRegister 466 ShouldHaveRegister 970 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v6|d [78, 211[[214, 256[[724, 801[[1074, 1095[78 MustHaveRegister 210 MustHaveRegister 746 ShouldHaveRegister 786 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v4|d [80, 418[[724, 816[[976, 986[[1014, 1095[[1096, 1127[80 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [250, 256[[1074, 1095[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d rax|- [752, 754[752 MustHaveRegister 754 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|- [802, 803[802 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[v19|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[v20|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[v22|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[v23|d]" v23|d -1 [308, 398[308 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [310, 460[310 MustHaveRegister 312 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [312, 414[312 MustHaveRegister 332 ShouldHaveRegister 346 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [314, 470[314 MustHaveRegister 316 ShouldHaveRegister 346 ShouldHaveRegister 372 MustHaveRegister 416 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v26|d [316, 476[316 MustHaveRegister 318 ShouldHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v27|d [318, 332[318 MustHaveRegister 320 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v25|d [346, 348[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v23|d [398, 400[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v25|d [414, 416[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [1106, 1122[1122 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [1106, 1124[1124 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v1|q [458, 468[458 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v24|d [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|q [462, 470[462 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [958, 962[958 MustHaveRegister 960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [962, 964[962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [514, 530[514 MustHaveRegister 516 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [516, 528[516 MustHaveRegister 518 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [518, 634[[986, 1006[518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 582 MustHaveRegister 584 MustHaveRegister 616 MustHaveRegister 634 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [520, 620[[986, 1013[520 MustHaveRegister 544 ShouldHaveRegister 614 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [524, 532[524 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v45|d [526, 532[526 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v42|d [528, 638[[676, 692[[702, 714[[816, 911[[986, 1013[528 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v41|d [530, 638[[676, 692[[702, 714[[816, 911[[986, 1013[530 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[v51|q]" v51|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[v52|d]" v52|d v44|d [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [634, 638[[676, 688[634 MustHaveRegister 636 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [688, 692[[702, 714[[816, 904[688 MustHaveRegister 690 MustHaveRegister 712 MustHaveRegister 828 MustHaveRegister 856 MustHaveRegister 862 MustHaveRegister 881 LiveAtLoopEnd 904 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|d [828, 882[828 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [856, 879[856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v56|d [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [878, 879[878 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[v59|d]" v59|d -1 [904, 906[904 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|d [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v43|d [1006, 1013[1006 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- v56|d [0, 1[[82, 87[[474, 475[[750, 752[[800, 802[[860, 863[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[474, 475[[750, 751[[790, 801[[910, 911[[956, 957[[968, 973[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v38|q [0, 60[[472, 475[[748, 751[[788, 801[[910, 911[[956, 957[[966, 973[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v9|q [0, 58[[470, 475[[746, 751[[786, 801[[908, 911[[954, 957[[964, 973[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[468, 475[[750, 751[[796, 801[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[474, 475[[750, 751[[792, 801[[910, 911[[956, 957[[970, 973[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[[750, 751[[794, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [58, 418[58 MustHaveRegister 66 MustHaveRegister 284 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [60, 458[60 MustHaveRegister 308 MustHaveRegister 458 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [62, 464[62 MustHaveRegister 360 MustHaveRegister 400 MustHaveRegister 464 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [64, 466[64 MustHaveRegister 284 MustHaveRegister 316 ShouldHaveRegister 348 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister 414 ShouldHaveRegister 466 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v6|d [78, 211[[214, 256[[724, 749[78 MustHaveRegister 210 MustHaveRegister 746 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rax|q]" v10|q v4|d [80, 81[80 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rbx|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [250, 256[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|- [752, 754[752 MustHaveRegister 754 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [802, 803[802 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rax|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rbx|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rbx|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[rdi|d]" v23|d -1 [308, 398[308 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [310, 460[310 MustHaveRegister 312 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r11|d]" v25|d -1 [312, 414[312 MustHaveRegister 332 ShouldHaveRegister 346 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbx|d]" v26|d -1 [314, 470[314 MustHaveRegister 316 ShouldHaveRegister 346 ShouldHaveRegister 372 MustHaveRegister 416 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [316, 418[316 MustHaveRegister 318 ShouldHaveRegister  "OneSpillStore"
  v28|d DWORD "[rbp|d]" v28|d v27|d [318, 332[318 MustHaveRegister 320 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbp|d]" v29|d v25|d [346, 348[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v23|d [398, 400[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v25|d [414, 416[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [1106, 1122[1122 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[r11|q]" v33|q -1 [1106, 1124[1124 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v1|q [458, 468[458 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v24|d [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q v35|q [462, 470[462 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d -1 [958, 962[958 MustHaveRegister 960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q v39|d [962, 964[962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d -1 [514, 530[514 MustHaveRegister 516 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r10|d]" v42|d -1 [516, 528[516 MustHaveRegister 518 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [518, 634[[986, 1006[518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 582 MustHaveRegister 584 MustHaveRegister 616 MustHaveRegister 634 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [520, 620[[986, 1013[520 MustHaveRegister 544 ShouldHaveRegister 614 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [524, 532[524 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r9|q]" v47|q v45|d [526, 532[526 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[r10|q]" v48|q v42|d [528, 638[[676, 692[[702, 714[[816, 882[528 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v41|d [530, 638[[676, 692[[702, 714[[816, 882[530 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[r9|q]" v50|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[rcx|q]" v51|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r9|d]" v52|d v44|d [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r11|d]" v53|d -1 [634, 638[[676, 688[634 MustHaveRegister 636 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r11|d]" v54|d -1 [688, 692[[702, 714[[816, 904[688 MustHaveRegister 690 MustHaveRegister 712 MustHaveRegister 828 MustHaveRegister 856 MustHaveRegister 862 MustHaveRegister 881 LiveAtLoopEnd 904 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|d [828, 882[828 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d -1 [856, 879[856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d v56|d [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r9|q]" v58|q -1 [878, 879[878 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rsi|d]" v59|d -1 [904, 906[904 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v59|d [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q v43|d [1006, 1013[1006 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[vstack:0|q]" v0|q v0|q [418, 469[ "SpillInDominator"
  v63|q QWORD "[vstack:4|q]" v1|q v1|q [724, 747[ "OneSpillStore"
  v64|d DWORD "[vstack:6|d]" v2|d v2|d [724, 749[ "OneSpillStore"
  v65|d DWORD "[vstack:7|d]" v3|d v3|d [724, 749[ "OneSpillStore"
  v66|q QWORD "[vstack:5|q]" v9|q v9|q [749, 801[786 ShouldHaveRegister  "OneSpillStore"
  v67|q QWORD "[vstack:8|q]" v10|q v10|q [81, 418[ "OneSpillStore"
  v68|q QWORD "[vstack:8|q]" v10|q v10|q [724, 749[ "OneSpillStore"
  v69|d DWORD "[vstack:2|d]" v27|d v27|d [418, 473[ "OneSpillStore"
  v70|d DWORD "[vstack:2|d]" v27|d v27|d [473, 475[ "OneSpillStore"
  v71|q QWORD "[vstack:0|q]" v0|q v0|q [469, 473[ "SpillInDominator"
  v72|q QWORD "[vstack:0|q]" v0|q v0|q [473, 475[ "SpillInDominator"
  v73|q QWORD "[rsi|q]" v0|q v0|q [475, 638[[676, 692[[702, 714[476 MustHaveRegister 514 MustHaveRegister  "SpillInDominator"
  v74|d DWORD "[rax|d]" v27|d v27|d [475, 476[476 MustHaveRegister  "OneSpillStore"
  v75|q QWORD "[vstack:0|q]" v0|q v0|q [724, 745[ "SpillInDominator"
  v76|q QWORD "[vstack:9|q]" v48|q v48|q [882, 909[ "OneSpillStore"
  v77|q QWORD "[vstack:10|q]" v49|q v49|q [882, 909[ "OneSpillStore"
  v78|q QWORD "[vstack:0|q]" v0|q v0|q [745, 749[ "SpillInDominator"
  v79|q QWORD "[vstack:4|q]" v1|q v1|q [747, 816[[914, 966[[976, 986[[1014, 1095[[1096, 1106[966 ShouldHaveRegister  "OneSpillStore"
  v80|d DWORD "[vstack:6|d]" v2|d v2|d [749, 816[[914, 968[[976, 986[[1014, 1095[[1096, 1106[968 ShouldHaveRegister  "OneSpillStore"
  v81|d DWORD "[vstack:7|d]" v3|d v3|d [749, 816[[914, 970[[976, 986[[1014, 1095[[1096, 1106[970 ShouldHaveRegister  "OneSpillStore"
  v82|q QWORD "[vstack:8|q]" v10|q v10|q [749, 816[[976, 986[[1014, 1095[[1096, 1106[ "OneSpillStore"
  v83|q QWORD "[vstack:0|q]" v0|q v0|q [749, 911[ "SpillInDominator"
  v84|q QWORD "[rdx|q]" v1|q v1|q [1106, 1127[ "OneSpillStore"
  v85|q QWORD "[r11|q]" v9|q v9|q [1074, 1095[ "OneSpillStore"
  v86|q QWORD "[rsi|q]" v0|q v0|q [914, 953[ "SpillInDominator"
  v87|d DWORD "[rcx|d]" v2|d v2|d [1106, 1127[ "OneSpillStore"
  v88|d DWORD "[r8|d]" v3|d v3|d [1106, 1127[ "OneSpillStore"
  v89|q QWORD "[rax|q]" v10|q v10|q [1106, 1127[ "OneSpillStore"
  v90|q QWORD "[vstack:10|q]" v49|q v49|q [909, 911[ "OneSpillStore"
  v91|q QWORD "[vstack:9|q]" v48|q v48|q [909, 911[ "OneSpillStore"
  v92|q QWORD "[r10|q]" v48|q v48|q [986, 1013[ "OneSpillStore"
  v93|q QWORD "[rdx|q]" v49|q v49|q [986, 1013[ "OneSpillStore"
  v94|q QWORD "[r10|q]" v0|q v0|q [953, 955[954 ShouldHaveRegister  "SpillInDominator"
  v95|q QWORD "[vstack:0|q]" v0|q v0|q [955, 957[ "SpillInDominator"
  v96|d DWORD "[r10|d]" v14|d v14|d [1074, 1095[ "NoSpillStore"
  v97|q QWORD "[rsi|q]" v0|q v0|q [957, 963[958 MustHaveRegister  "SpillInDominator"
  v98|q QWORD "[vstack:0|q]" v0|q v0|q [963, 971[ "SpillInDominator"
  v99|q QWORD "[vstack:0|q]" v0|q v0|q [971, 1013[[1014, 1095[[1096, 1106[ "SpillInDominator"
  v100|q QWORD "[rsi|q]" v0|q v0|q [1106, 1127[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v62|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v71|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v70|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = STACKMOVE (input: v64|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = STACKMOVE (input: v78|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  752  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  802  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v77|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = STACKMOVE (input: v98|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- v56|d [0, 1[[82, 87[[474, 475[[750, 752[[800, 802[[860, 863[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[474, 475[[750, 751[[790, 801[[910, 911[[956, 957[[968, 973[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v38|q [0, 60[[472, 475[[748, 751[[788, 801[[910, 911[[956, 957[[966, 973[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v9|q [0, 58[[470, 475[[746, 751[[786, 801[[908, 911[[954, 957[[964, 973[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[468, 475[[750, 751[[796, 801[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[474, 475[[750, 751[[792, 801[[910, 911[[956, 957[[970, 973[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[[750, 751[[794, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [58, 418[58 MustHaveRegister 66 MustHaveRegister 284 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [60, 458[60 MustHaveRegister 308 MustHaveRegister 458 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [62, 464[62 MustHaveRegister 360 MustHaveRegister 400 MustHaveRegister 464 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [64, 466[64 MustHaveRegister 284 MustHaveRegister 316 ShouldHaveRegister 348 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister 414 ShouldHaveRegister 466 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v6|d [78, 211[[214, 256[[724, 749[78 MustHaveRegister 210 MustHaveRegister 746 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rax|q]" v10|q v4|d [80, 81[80 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rbx|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [250, 256[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|- [752, 754[752 MustHaveRegister 754 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [802, 803[802 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rax|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rbx|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rbx|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[rdi|d]" v23|d -1 [308, 398[308 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [310, 460[310 MustHaveRegister 312 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r11|d]" v25|d -1 [312, 414[312 MustHaveRegister 332 ShouldHaveRegister 346 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbx|d]" v26|d -1 [314, 470[314 MustHaveRegister 316 ShouldHaveRegister 346 ShouldHaveRegister 372 MustHaveRegister 416 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [316, 418[316 MustHaveRegister 318 ShouldHaveRegister  "OneSpillStore"
  v28|d DWORD "[rbp|d]" v28|d v27|d [318, 332[318 MustHaveRegister 320 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbp|d]" v29|d v25|d [346, 348[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v23|d [398, 400[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v25|d [414, 416[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [1106, 1122[1122 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[r11|q]" v33|q -1 [1106, 1124[1124 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v1|q [458, 468[458 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v24|d [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q v35|q [462, 470[462 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d -1 [958, 962[958 MustHaveRegister 960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q v39|d [962, 964[962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d -1 [514, 530[514 MustHaveRegister 516 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r10|d]" v42|d -1 [516, 528[516 MustHaveRegister 518 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [518, 634[[986, 1006[518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 582 MustHaveRegister 584 MustHaveRegister 616 MustHaveRegister 634 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [520, 620[[986, 1013[520 MustHaveRegister 544 ShouldHaveRegister 614 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [524, 532[524 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r9|q]" v47|q v45|d [526, 532[526 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[r10|q]" v48|q v42|d [528, 638[[676, 692[[702, 714[[816, 882[528 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v41|d [530, 638[[676, 692[[702, 714[[816, 882[530 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[r9|q]" v50|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[rcx|q]" v51|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r9|d]" v52|d v44|d [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r11|d]" v53|d -1 [634, 638[[676, 688[634 MustHaveRegister 636 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r11|d]" v54|d -1 [688, 692[[702, 714[[816, 904[688 MustHaveRegister 690 MustHaveRegister 712 MustHaveRegister 828 MustHaveRegister 856 MustHaveRegister 862 MustHaveRegister 881 LiveAtLoopEnd 904 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|d [828, 882[828 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d -1 [856, 879[856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d v56|d [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r9|q]" v58|q -1 [878, 879[878 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rsi|d]" v59|d -1 [904, 906[904 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v59|d [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q v43|d [1006, 1013[1006 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[vstack:0|q]" v0|q v0|q [418, 469[ "StoreAtDefinition"
  v63|q QWORD "[vstack:4|q]" v1|q v1|q [724, 747[ "OneSpillStore"
  v64|d DWORD "[vstack:6|d]" v2|d v2|d [724, 749[ "OneSpillStore"
  v65|d DWORD "[vstack:7|d]" v3|d v3|d [724, 749[ "OneSpillStore"
  v66|q QWORD "[vstack:5|q]" v9|q v9|q [749, 801[786 ShouldHaveRegister  "OneSpillStore"
  v67|q QWORD "[vstack:8|q]" v10|q v10|q [81, 418[ "OneSpillStore"
  v68|q QWORD "[vstack:8|q]" v10|q v10|q [724, 749[ "OneSpillStore"
  v69|d DWORD "[vstack:2|d]" v27|d v27|d [418, 473[ "OneSpillStore"
  v70|d DWORD "[vstack:2|d]" v27|d v27|d [473, 475[ "OneSpillStore"
  v71|q QWORD "[vstack:0|q]" v0|q v0|q [469, 473[ "StoreAtDefinition"
  v72|q QWORD "[vstack:0|q]" v0|q v0|q [473, 475[ "StoreAtDefinition"
  v73|q QWORD "[rsi|q]" v0|q v0|q [475, 638[[676, 692[[702, 714[476 MustHaveRegister 514 MustHaveRegister  "StoreAtDefinition"
  v74|d DWORD "[rax|d]" v27|d v27|d [475, 476[476 MustHaveRegister  "OneSpillStore"
  v75|q QWORD "[vstack:0|q]" v0|q v0|q [724, 745[ "StoreAtDefinition"
  v76|q QWORD "[vstack:9|q]" v48|q v48|q [882, 909[ "OneSpillStore"
  v77|q QWORD "[vstack:10|q]" v49|q v49|q [882, 909[ "OneSpillStore"
  v78|q QWORD "[vstack:0|q]" v0|q v0|q [745, 749[ "StoreAtDefinition"
  v79|q QWORD "[vstack:4|q]" v1|q v1|q [747, 816[[914, 966[[976, 986[[1014, 1095[[1096, 1106[966 ShouldHaveRegister  "OneSpillStore"
  v80|d DWORD "[vstack:6|d]" v2|d v2|d [749, 816[[914, 968[[976, 986[[1014, 1095[[1096, 1106[968 ShouldHaveRegister  "OneSpillStore"
  v81|d DWORD "[vstack:7|d]" v3|d v3|d [749, 816[[914, 970[[976, 986[[1014, 1095[[1096, 1106[970 ShouldHaveRegister  "OneSpillStore"
  v82|q QWORD "[vstack:8|q]" v10|q v10|q [749, 816[[976, 986[[1014, 1095[[1096, 1106[ "OneSpillStore"
  v83|q QWORD "[vstack:0|q]" v0|q v0|q [749, 911[ "StoreAtDefinition"
  v84|q QWORD "[rdx|q]" v1|q v1|q [1106, 1127[ "OneSpillStore"
  v85|q QWORD "[r11|q]" v9|q v9|q [1074, 1095[ "OneSpillStore"
  v86|q QWORD "[rsi|q]" v0|q v0|q [914, 953[ "StoreAtDefinition"
  v87|d DWORD "[rcx|d]" v2|d v2|d [1106, 1127[ "OneSpillStore"
  v88|d DWORD "[r8|d]" v3|d v3|d [1106, 1127[ "OneSpillStore"
  v89|q QWORD "[rax|q]" v10|q v10|q [1106, 1127[ "OneSpillStore"
  v90|q QWORD "[vstack:10|q]" v49|q v49|q [909, 911[ "OneSpillStore"
  v91|q QWORD "[vstack:9|q]" v48|q v48|q [909, 911[ "OneSpillStore"
  v92|q QWORD "[r10|q]" v48|q v48|q [986, 1013[ "OneSpillStore"
  v93|q QWORD "[rdx|q]" v49|q v49|q [986, 1013[ "OneSpillStore"
  v94|q QWORD "[r10|q]" v0|q v0|q [953, 955[954 ShouldHaveRegister  "StoreAtDefinition"
  v95|q QWORD "[vstack:0|q]" v0|q v0|q [955, 957[ "StoreAtDefinition"
  v96|d DWORD "[r10|d]" v14|d v14|d [1074, 1095[ "NoSpillStore"
  v97|q QWORD "[rsi|q]" v0|q v0|q [957, 963[958 MustHaveRegister  "StoreAtDefinition"
  v98|q QWORD "[vstack:0|q]" v0|q v0|q [963, 971[ "StoreAtDefinition"
  v99|q QWORD "[vstack:0|q]" v0|q v0|q [971, 1013[[1014, 1095[[1096, 1106[ "StoreAtDefinition"
  v100|q QWORD "[rsi|q]" v0|q v0|q [1106, 1127[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v62|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v71|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v70|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = STACKMOVE (input: v64|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = STACKMOVE (input: v78|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  752  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  802  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v77|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = STACKMOVE (input: v98|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [int[-116755|0xfffffffffffe37ed], long[8340|0x2094]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [int[-121881|0xfffffffffffe23e7], long[0|0x0]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [int[-120857|0xfffffffffffe27e7], long[0|0x0]] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [int[-119833|0xfffffffffffe2be7], long[0|0x0]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [int[-117785|0xfffffffffffe33e7], long[0|0x0]] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [int[-118809|0xfffffffffffe2fe7], long[0|0x0]] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-115731|0xfffffffffffe3bed], long[10260|0x2814]] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [int[-114707|0xfffffffffffe3fed], long[9620|0x2594]] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- v56|d [0, 1[[82, 87[[474, 475[[750, 752[[800, 802[[860, 863[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|d [0, 62[[474, 475[[750, 751[[790, 801[[910, 911[[956, 957[[968, 973[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v38|q [0, 60[[472, 475[[748, 751[[788, 801[[910, 911[[956, 957[[966, 973[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v9|q [0, 58[[470, 475[[746, 751[[786, 801[[908, 911[[954, 957[[964, 973[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[468, 475[[750, 751[[796, 801[[910, 911[[956, 957[[972, 973[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v3|d [0, 64[[474, 475[[750, 751[[792, 801[[910, 911[[956, 957[[970, 973[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[474, 475[[750, 751[[794, 801[[910, 911[[956, 957[[972, 973[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[474, 475[[750, 751[[800, 801[[910, 911[[956, 957[[972, 973[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [58, 418[58 MustHaveRegister 66 MustHaveRegister 284 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [60, 458[60 MustHaveRegister 308 MustHaveRegister 458 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [62, 464[62 MustHaveRegister 360 MustHaveRegister 400 MustHaveRegister 464 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [64, 466[64 MustHaveRegister 284 MustHaveRegister 316 ShouldHaveRegister 348 MustHaveRegister 384 MustHaveRegister 398 ShouldHaveRegister 414 ShouldHaveRegister 466 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[rax|d]" v4|d -1 [66, 80[66 MustHaveRegister 68 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d -1 [68, 70[68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [70, 208[[214, 268[70 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 86 MustHaveRegister 204 MustHaveRegister 208 MustHaveRegister 230 MustHaveRegister 250 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[r10|q]" v7|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [76, 211[[214, 234[76 MustHaveRegister 206 MustHaveRegister 210 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r11|q]" v9|q v6|d [78, 211[[214, 256[[724, 749[78 MustHaveRegister 210 MustHaveRegister 746 ShouldHaveRegister  "OneSpillStore"
  v10|q QWORD "[rax|q]" v10|q v4|d [80, 81[80 MustHaveRegister  "OneSpillStore"
  v11|d DWORD "[rbx|d]" v11|d -1 [84, 86[84 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q v12|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [250, 256[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbx|d]" v15|d v14|d [252, 268[252 MustHaveRegister 254 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|- [752, 754[752 MustHaveRegister 754 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|- [802, 803[802 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[rax|q]" v19|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[rbx|d]" v20|d v8|q [206, 208[206 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rbx|q]" v22|q -1 [210, 211[210 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[rdi|d]" v23|d -1 [308, 398[308 MustHaveRegister 398 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d -1 [310, 460[310 MustHaveRegister 312 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r11|d]" v25|d -1 [312, 414[312 MustHaveRegister 332 ShouldHaveRegister 346 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rbx|d]" v26|d -1 [314, 470[314 MustHaveRegister 316 ShouldHaveRegister 346 ShouldHaveRegister 372 MustHaveRegister 416 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [316, 418[316 MustHaveRegister 318 ShouldHaveRegister  "OneSpillStore"
  v28|d DWORD "[rbp|d]" v28|d v27|d [318, 332[318 MustHaveRegister 320 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbp|d]" v29|d v25|d [346, 348[346 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v23|d [398, 400[398 MustHaveRegister 400 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v25|d [414, 416[414 MustHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [1106, 1122[1122 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[r11|q]" v33|q -1 [1106, 1124[1124 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v1|q [458, 468[458 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[r10|q]" v35|q v24|d [460, 462[460 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[r10|q]" v36|q v35|q [462, 470[462 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r11|q]" v38|q -1 [466, 472[466 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d -1 [958, 962[958 MustHaveRegister 960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdx|q]" v40|q v39|d [962, 964[962 MustHaveRegister 964 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d -1 [514, 530[514 MustHaveRegister 516 MustHaveRegister 530 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r10|d]" v42|d -1 [516, 528[516 MustHaveRegister 518 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [518, 634[[986, 1006[518 MustHaveRegister 520 MustHaveRegister 522 MustHaveRegister 582 MustHaveRegister 584 MustHaveRegister 616 MustHaveRegister 634 MustHaveRegister 1006 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r8|d]" v44|d -1 [520, 620[[986, 1013[520 MustHaveRegister 544 ShouldHaveRegister 614 ShouldHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r9|d]" v45|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [524, 532[524 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r9|q]" v47|q v45|d [526, 532[526 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[r10|q]" v48|q v42|d [528, 638[[676, 692[[702, 714[[816, 882[528 MustHaveRegister  "OneSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v41|d [530, 638[[676, 692[[702, 714[[816, 882[530 MustHaveRegister  "OneSpillStore"
  v50|q QWORD "[r9|q]" v50|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[rcx|q]" v51|q -1 [582, 583[582 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r9|d]" v52|d v44|d [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r11|d]" v53|d -1 [634, 638[[676, 688[634 MustHaveRegister 636 MustHaveRegister 688 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r11|d]" v54|d -1 [688, 692[[702, 714[[816, 904[688 MustHaveRegister 690 MustHaveRegister 712 MustHaveRegister 828 MustHaveRegister 856 MustHaveRegister 862 MustHaveRegister 881 LiveAtLoopEnd 904 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v54|d [828, 882[828 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d -1 [856, 879[856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r9|d]" v57|d v56|d [858, 862[858 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r9|q]" v58|q -1 [878, 879[878 MustHaveRegister  "NoDefinitionFound"
  v59|d DWORD "[rsi|d]" v59|d -1 [904, 906[904 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v59|d [906, 908[906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q v43|d [1006, 1013[1006 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[vstack:0|q]" v0|q v0|q [418, 469[ "StoreAtDefinition"
  v63|q QWORD "[vstack:4|q]" v1|q v1|q [724, 747[ "OneSpillStore"
  v64|d DWORD "[vstack:6|d]" v2|d v2|d [724, 749[ "OneSpillStore"
  v65|d DWORD "[vstack:7|d]" v3|d v3|d [724, 749[ "OneSpillStore"
  v66|q QWORD "[vstack:5|q]" v9|q v9|q [749, 801[786 ShouldHaveRegister  "OneSpillStore"
  v67|q QWORD "[vstack:8|q]" v10|q v10|q [81, 418[ "OneSpillStore"
  v68|q QWORD "[vstack:8|q]" v10|q v10|q [724, 749[ "OneSpillStore"
  v69|d DWORD "[vstack:2|d]" v27|d v27|d [418, 473[ "OneSpillStore"
  v70|d DWORD "[vstack:2|d]" v27|d v27|d [473, 475[ "OneSpillStore"
  v71|q QWORD "[vstack:0|q]" v0|q v0|q [469, 473[ "StoreAtDefinition"
  v72|q QWORD "[vstack:0|q]" v0|q v0|q [473, 475[ "StoreAtDefinition"
  v73|q QWORD "[rsi|q]" v0|q v0|q [475, 638[[676, 692[[702, 714[476 MustHaveRegister 514 MustHaveRegister  "StoreAtDefinition"
  v74|d DWORD "[rax|d]" v27|d v27|d [475, 476[476 MustHaveRegister  "OneSpillStore"
  v75|q QWORD "[vstack:0|q]" v0|q v0|q [724, 745[ "StoreAtDefinition"
  v76|q QWORD "[vstack:9|q]" v48|q v48|q [882, 909[ "OneSpillStore"
  v77|q QWORD "[vstack:10|q]" v49|q v49|q [882, 909[ "OneSpillStore"
  v78|q QWORD "[vstack:0|q]" v0|q v0|q [745, 749[ "StoreAtDefinition"
  v79|q QWORD "[vstack:4|q]" v1|q v1|q [747, 816[[914, 966[[976, 986[[1014, 1095[[1096, 1106[966 ShouldHaveRegister  "OneSpillStore"
  v80|d DWORD "[vstack:6|d]" v2|d v2|d [749, 816[[914, 968[[976, 986[[1014, 1095[[1096, 1106[968 ShouldHaveRegister  "OneSpillStore"
  v81|d DWORD "[vstack:7|d]" v3|d v3|d [749, 816[[914, 970[[976, 986[[1014, 1095[[1096, 1106[970 ShouldHaveRegister  "OneSpillStore"
  v82|q QWORD "[vstack:8|q]" v10|q v10|q [749, 816[[976, 986[[1014, 1095[[1096, 1106[ "OneSpillStore"
  v83|q QWORD "[vstack:0|q]" v0|q v0|q [749, 911[ "StoreAtDefinition"
  v84|q QWORD "[rdx|q]" v1|q v1|q [1106, 1127[ "OneSpillStore"
  v85|q QWORD "[r11|q]" v9|q v9|q [1074, 1095[ "OneSpillStore"
  v86|q QWORD "[rsi|q]" v0|q v0|q [914, 953[ "StoreAtDefinition"
  v87|d DWORD "[rcx|d]" v2|d v2|d [1106, 1127[ "OneSpillStore"
  v88|d DWORD "[r8|d]" v3|d v3|d [1106, 1127[ "OneSpillStore"
  v89|q QWORD "[rax|q]" v10|q v10|q [1106, 1127[ "OneSpillStore"
  v90|q QWORD "[vstack:10|q]" v49|q v49|q [909, 911[ "OneSpillStore"
  v91|q QWORD "[vstack:9|q]" v48|q v48|q [909, 911[ "OneSpillStore"
  v92|q QWORD "[r10|q]" v48|q v48|q [986, 1013[ "OneSpillStore"
  v93|q QWORD "[rdx|q]" v49|q v49|q [986, 1013[ "OneSpillStore"
  v94|q QWORD "[r10|q]" v0|q v0|q [953, 955[954 ShouldHaveRegister  "StoreAtDefinition"
  v95|q QWORD "[vstack:0|q]" v0|q v0|q [955, 957[ "StoreAtDefinition"
  v96|d DWORD "[r10|d]" v14|d v14|d [1074, 1095[ "NoSpillStore"
  v97|q QWORD "[rsi|q]" v0|q v0|q [957, 963[958 MustHaveRegister  "StoreAtDefinition"
  v98|q QWORD "[vstack:0|q]" v0|q v0|q [963, 971[ "StoreAtDefinition"
  v99|q QWORD "[vstack:0|q]" v0|q v0|q [971, 1013[[1014, 1095[[1096, 1106[ "StoreAtDefinition"
  v100|q QWORD "[rsi|q]" v0|q v0|q [1106, 1127[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = STACKMOVE (input: v62|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = STACKMOVE (input: v71|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v70|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = STACKMOVE (input: v64|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = STACKMOVE (input: v78|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  752  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  802  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v77|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v97|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = STACKMOVE (input: v98|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v73|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[10260|0x2814] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [v32|DWORD, v33|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v6|DWORD[_] = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v6|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction v8|QWORD[.] = MOV input: [v7|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [v6|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: v11|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v6|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 12], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v9|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction v12|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v8|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v14|DWORD = MOV input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [v6|DWORD[_] * 8 + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v23|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction v24|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v25|DWORD = MOV input: [v24|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction v26|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction v27|DWORD = ADD (x: v26|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction v28|DWORD = INC value: v27|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v25|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v29|DWORD = SUB (x: v25|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: v26|DWORD, y: v26|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction v30|DWORD = SUB (x: v23|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v31|DWORD = SUB (x: v25|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: v26|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v27|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v34|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction v36|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction v37|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction v38|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v34|QWORD[*] + v37|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v36|QWORD[*] + v26|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = STACKMOVE (input: v69|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v70|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v27|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction v41|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v41|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v43|DWORD[_] = MOV input: [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction v45|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction v46|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction v47|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: v47|QWORD[.], y: [v46|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v43|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [v43|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction v52|DWORD = DEC value: v44|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [v43|DWORD[_] * 8 + 16], y: v52|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: v44|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction v53|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: v53|DWORD[_], y: v53|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction v54|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: v54|DWORD[_], y: v54|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = STACKMOVE (input: v68|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = STACKMOVE (input: v64|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: v9|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  752  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  802  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction v56|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction v57|DWORD = AND x: v56|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [v54|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: v57|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] v55|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] v56|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: v55|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - v55|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: v58|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction v59|DWORD[_] = MOV input: [v54|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = STACKMOVE (input: v77|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v95|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction v39|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [v39|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: v40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: v44|DWORD 
locals: v61|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: v61|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: v48|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: v49|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[10260|0x2814] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: v14|DWORD 
locals: v9|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: v9|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v81|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v80|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v33|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: v10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:9|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   66  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   74  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   78  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   84  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  206  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  208  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  310  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  314  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  316  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  462  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  466  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr  522  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  524  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr  526  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  584  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  620  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  636  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  754  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  790  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  794  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  796  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  798  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  800  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  858  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr  880  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  906  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  910  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:9|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  958  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  960  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1032  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1052  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction vstack:8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction vstack:2|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction vstack:5|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: vstack:5|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: vstack:5|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction vstack:10|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction vstack:9|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: vstack:9|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: vstack:10|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  564  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  782  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  648  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  518  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: vstack:8|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: vstack:0|QWORD[.] vstack:4|QWORD[.] vstack:6|DWORD vstack:7|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction vstack:7|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction vstack:6|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [58, 1328[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [818, 878[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [134, 946[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [206, 256[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [132, 948[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [130, 950[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [76, 782[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [1244, 1270[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [1242, 1270[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [58, 1328[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:36|d]" vstack:2|d -1 [818, 878[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:64|q]" vstack:4|q -1 [134, 946[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:72|q]" vstack:5|q -1 [206, 256[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:32|d]" vstack:6|d -1 [132, 948[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:28|d]" vstack:7|d -1 [130, 950[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:56|q]" vstack:8|q -1 [76, 782[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:56|q]" vstack:9|q -1 [1244, 1270[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:64|q]" vstack:10|q -1 [1242, 1270[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  564  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  782  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  648  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  518  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  564  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  782  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  736  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  740  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  690  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  606  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  648  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  518  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, rdi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [r11:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, rdi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   68  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr   70  <|@ instruction r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   80  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ instruction rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4605968616550409557
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  402  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" "B6" "B4" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  446  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11] <|@ <|@
      nr  450  <|@ instruction rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction rbp|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  456  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4607182384130935984
    begin_IR
      LIR
      nr  816  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  818  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  868  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  876  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  878  <|@ instruction rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  880  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  994  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21] <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21] <|@ <|@
      nr 1000  <|@ instruction r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD <|@ <|@
      nr 1004  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1010  <|@ instruction CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4605968521042415799
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184 <|@ <|@
      nr 1062  <|@ instruction MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B31" 
    successors "B34" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4605988042034753731
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1114  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 4605982585092529291
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B39" "B37" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4594023611320941860
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4594023229288966828
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  124  <|@ instruction rbx|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" 
    xhandlers
    flags 
    probability 4594021786679873447
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593945527351590132
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4558727132109398279
    begin_IR
      LIR
      nr 1126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr 1140  <|@ instruction TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4558163960150220820
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4544133800062879643
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4543169701812591904
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4541033751608576347
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  206  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2]
locals: stack:72|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11] <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4539390507327710713
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  248  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction out:0|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15]
locals: - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9]
locals: stack:72|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11] <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4532214768507312505
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B41" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r11:0, stack:32]
live-base-pointers: []
jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21]
stack: int[0|0x0] 
locals: Object[Unsafe@679697080] rsi|QWORD[.] long[12|0xc] - int[-2|0xfffffffffffffffe] r8|DWORD 
java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10]
locals: rsi|QWORD[.] int[1|0x1] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22]
locals: - rsi|QWORD[.] 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25] <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B42" "B43" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4533844619878043822
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr 1216  <|@ instruction r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD <|@ <|@
      nr 1222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4529341020250673326
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1242  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1270  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30]
locals: - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12]
locals: - - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: stack:56|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: stack:64|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25] <|@ <|@
      nr 1272  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4526158171720384512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ st <@st|@reference-map: [stack:16, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18] <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  940  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12]
locals: rsi|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18] <|@ <|@
      nr  942  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ st <@st|@reference-map: [stack:32]
live-base-pointers: []
java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19]
locals: - - - - 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18] <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [r11:0, stack:16, stack:24, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32]
stack: r10|DWORD 
locals: r11|QWORD[.] - - 
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1]
locals: r11|QWORD[.] 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: stack:56|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: stack:48|QWORD[.] stack:64|QWORD[.] stack:32|DWORD stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32, 1, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction r11|QWORD = MOVE input: long[9620|0x2594] <|@ <|@
      nr  474  <|@ instruction r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  486  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B15" "B17" "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  476  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12]
locals: - 
java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4]
locals: - 
jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4]
locals: rax|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12, 4, 4, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  594  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7] <|@ <|@
      nr  792  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7] <|@ <|@
      nr  746  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7] <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1324  <|@ instruction MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD <|@ <|@
      nr 1326  <|@ instruction MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:32]
live-base-pointers: []
java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4]
stack: r8|DWORD 
locals: r11|QWORD[.] int[1|0x1] - - 
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2]
locals: r11|QWORD[.] - 
java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5]
locals: r10|QWORD[.] 
jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4]
locals: rdx|QWORD[.] 
java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25]
locals: stack:48|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:4, 2, 5, 4, 25] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  552  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed] <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  502  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  506  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction r11|QWORD = MOVE input: long[10260|0x2814] <|@ <|@
      nr  516  <|@ instruction r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #7          // lock:jdk.internal.misc.InternalLock
     4: ifnull        46
     7: aload_0       
     8: getfield      #7          // lock:jdk.internal.misc.InternalLock
    11: invokevirtual #17         // jdk.internal.misc.InternalLock.lock:()void
    14: aload_0       
    15: aload_1       
    16: iload_2       
    17: iload_3       
    18: invokevirtual #22         // implWrite:(byte[], int, int)void
    21: aload_0       
    22: getfield      #7          // lock:jdk.internal.misc.InternalLock
    25: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    28: goto          43
    31: astore        4
    33: aload_0       
    34: getfield      #7          // lock:jdk.internal.misc.InternalLock
    37: invokevirtual #19         // jdk.internal.misc.InternalLock.unlock:()void
    40: aload         4
    42: athrow        
    43: goto          72
    46: aload_0       
    47: dup           
    48: astore        4
    50: monitorenter  
    51: aload_0       
    52: aload_1       
    53: iload_2       
    54: iload_3       
    55: invokevirtual #22         // implWrite:(byte[], int, int)void
    58: aload         4
    60: monitorexit   
    61: goto          72
    64: astore        5
    66: aload         4
    68: monitorexit   
    69: aload         5
    71: athrow        
    72: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f854d070000909090909090909090909090909090909090909090909090909048896c244048897424208b46208b3cc50c0000008b3cfd0c0000008504fd000000004d8b97800300004d8b12448bdf49c1e30348c1e0034889442418b800000000bb01000000f00fb11cfd100000000f85f9020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f84310000008b04fd0c00000048c1e0034885c00f841d000000498b5f284883fb000f84890600004883eb0849895f2849035f38488903498bda48c1eb03891cfd0c000000498bfb4933fa48c1ef160f8442000000498bfb48c1ef0948bb00e0368d787f00004803fb803f027429f083042400803f00741fc60700498b5f484885db0f84380600004883eb0849895f4849035f5848893b90909090443b461c0f8de2030000909090909090909090908b7a0c448b5624468b1cd50c0000008b5e188bc34103c08be8ffc585ed0f8c6604000090909090413beb0f8f9f0500009090909090418beb2beb443bc50f8f690500009090909085c90f8c840400009090909085db0f8cdb040000909090904585c00f8cf10400009090909090412bf83bcf0f8f9b0400009090909090452bd8413bdb0f8f6a0400008944242c9090909090909090909090909090909090909049c1e2038bf9458bd8488d7c3a10498d741a10498bd3e800000000488b7424208b44242c894618909090909090909090909090909090908b5620448b14d50c000000468b1cd50c000000468b04dd10000000468b0cdd0c000000498b8f8003000049c1e10349c1e20348c1e2034c3b090f8566040000909090904183f8010f85e1000000909090909090909090909090909090909041807f40000f8432000000428b0cdd0c00000048c1e1034885c90f841d0000004d8b4f284983f9000f84bd0400004983e9084d894f284d034f3849890942c704dd0c0000000000000090909090909090458bc841ffc946890cdd10000000f0830424004183f8010f85b70000009090909090468b1cdd140000004585db0f85a900000090909090909090909090488b6c24404883c448493ba7d804000072234883ec08498bff48b90000000000000000ffd14883c40848b90000000000000000ffe1493ba7500400000f872b040000c3909090e971ffffff909090909090908b1cfd0c00000048c1e3034c3bd30f8572000000909090909090448b14fd10000000418bdaffc385db0f8c0e0200009090909090891cfd10000000f083042400e98ffdffff909090e95affffff9090909090468b1cdd140000004585db0f8508000000909090e93cffffff9090909042833cdd0c000000000f85c0000000909090e921ffffff4489442434894c2430488954241090909090909090909090498bf3ba010000004c895c2408666690e8000000000f1f84000000000085c00f85600000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8000000000f1f840000000000448b4424348b4c2430488b542410488b742420e9b1fcffff909090448b4424348b4c2430488b542410488b742420e996fcffff9090909090418bf348c1e603e9170000000f1f84000000000090909090904d8b8f580400004185019090909090909090909090468b04dd0c000000458bc84183e1fe418bc0f0460fb10cdd0c00000075c848895424104c8954241890909090909090909090428b34dd1800000048c1e603666690e8000000000f1f840000000000e9e3fdffff4489442434894c24304889542410909090909090909090909090909090909090904c8bd66690e8000000000f1f840000000000488b7424208b56108504d50000000048c1e203488bf2488b5424108b4c2430448b4424349048b8ffffffffffffffffe8000000000f1f840000000000488b742420e976fcffff4489442434894c243048895424109090909090909041c78784040000ed1afeff49c7879004000094020000e8000000000f1f8400000000004489442434894c2430488954241090909049c7c39425000041baed3ffeff488b442418488b74242090909090909090458997840400004d899f90040000e8000000000f1f8400000000004489442434894c2430488954241090909049c7c30000000041bae733feffebb44489442434894c2430488954241090909049c7c30000000041bae723feffeb944489442434894c2430488954241090909049c7c30000000041bae727feffe971ffffff4489442434894c2430488954241090909049c7c30000000041bae72ffeffe94effffff4489442434894c2430488954241090909049c7c30000000041bae72bfeffe92bffffff90909090909090909049c1e30341c78784040000ed1ffeff49c78790040000942a0000e8000000000f1f8400000000004489442434894c2430488954241090909049c7c39420000041baed37feffe9d8feffff4489442434894c2430488954241090909049c7c31428000041baed3bfeffe9b5feffff48896c2440e800000000e9a4f8fffff448890424e800000000e978f9fffff448893c24e800000000e9c9f9fffff448890c24e800000000e944fbfffff4488d0dc1fbffff49898f68040000e929f8fffff441c78784040000f5f7feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5ddfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5dcfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b7feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5affeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 89 56 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD  <||@
  Comment 89 58 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 94 60 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 97 62 rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 97 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 64 rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 104 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 66 NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0]  <||@
  Comment 111 [rax:0, rdx:0, rsi:0, rdi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 68 r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 125 70 r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 128 72 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 135 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 139 76 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 144 78 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 80 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 154 82 rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD  <||@
  Comment 163 84 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 169 block B8 null  <||@
  Comment 169 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 169 288 NOP  <||@
  Comment 170 290 NOP  <||@
  Comment 171 292 NOP  <||@
  Comment 172 294 NOP  <||@
  Comment 173 296 NOP  <||@
  Comment 174 298 NOP  <||@
  Comment 175 300 NOP  <||@
  Comment 176 302 NOP  <||@
  Comment 177 304 NOP  <||@
  Comment 178 306 NOP  <||@
  Comment 179 308 NOP  <||@
  Comment 180 310 NOP  <||@
  Comment 181 312 NOP  <||@
  Comment 182 314 NOP  <||@
  Comment 183 316 NOP  <||@
  Comment 184 318 NOP  <||@
  Comment 185 320 NOP  <||@
  Comment 186 322 NOP  <||@
  Comment 187 324 NOP  <||@
  Comment 188 326 NOP  <||@
  Comment 189 328 NOP  <||@
  Comment 190 330 NOP  <||@
  Comment 191 332 NOP  <||@
  Comment 192 334 NOP  <||@
  Comment 193 336 NOP  <||@
  Comment 194 338 NOP  <||@
  Comment 195 340 NOP  <||@
  Comment 196 342 NOP  <||@
  Comment 197 344 NOP  <||@
  Comment 198 346 NOP  <||@
  Comment 199 348 NOP  <||@
  Comment 200 350 NOP  <||@
  Comment 201 352 NOP  <||@
  Comment 202 354 NOP  <||@
  Comment 203 356 NOP  <||@
  Comment 204 358 NOP  <||@
  Comment 205 360 NOP  <||@
  Comment 206 362 NOP  <||@
  Comment 207 364 NOP  <||@
  Comment 208 366 NOP  <||@
  Comment 209 368 NOP  <||@
  Comment 210 370 NOP  <||@
  Comment 211 372 NOP  <||@
  Comment 212 374 NOP  <||@
  Comment 213 376 NOP  <||@
  Comment 214 378 NOP  <||@
  Comment 215 380 NOP  <||@
  Comment 216 382 NOP  <||@
  Comment 217 384 NOP  <||@
  Comment 218 386 NOP  <||@
  Comment 219 388 NOP  <||@
  Comment 220 390 NOP  <||@
  Comment 221 392 NOP  <||@
  Comment 222 394 NOP  <||@
  Comment 223 396 NOP  <||@
  Comment 224 398 NOP  <||@
  Comment 225 400 AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184  <||@
  Comment 285 402 rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 292 404 MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 299 406 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184  <||@
  Comment 381 408 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 381 block B9 null  <||@
  Comment 381 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 381 412 NOP  <||@
  Comment 382 414 NOP  <||@
  Comment 383 416 NOP  <||@
  Comment 384 418 NOP  <||@
  Comment 385 420 CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD  <||@
  Comment 395 block B10 null  <||@
  Comment 395 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 395 424 NOP  <||@
  Comment 396 426 NOP  <||@
  Comment 397 428 NOP  <||@
  Comment 398 430 NOP  <||@
  Comment 399 432 NOP  <||@
  Comment 400 434 NOP  <||@
  Comment 401 436 NOP  <||@
  Comment 402 438 NOP  <||@
  Comment 403 440 NOP  <||@
  Comment 404 442 NOP  <||@
  Comment 405 444 rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11]  <||@
  Comment 405 [rdx:0, rsi:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 405 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 408 446 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 412 448 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11]  <||@
  Comment 412 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 412 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 420 450 rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 423 452 rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 428 454 rbp|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 432 456 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 440 block B12 null  <||@
  Comment 440 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 440 490 NOP  <||@
  Comment 441 492 NOP  <||@
  Comment 442 494 NOP  <||@
  Comment 443 496 NOP  <||@
  Comment 444 498 CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 453 block B14 null  <||@
  Comment 453 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 453 532 NOP  <||@
  Comment 454 534 NOP  <||@
  Comment 455 536 NOP  <||@
  Comment 456 538 NOP  <||@
  Comment 457 540 NOP  <||@
  Comment 458 542 rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 463 544 CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 472 block B16 null  <||@
  Comment 472 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 578 NOP  <||@
  Comment 473 580 NOP  <||@
  Comment 474 582 NOP  <||@
  Comment 475 584 NOP  <||@
  Comment 476 586 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 484 block B18 null  <||@
  Comment 484 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 484 620 NOP  <||@
  Comment 485 622 NOP  <||@
  Comment 486 624 NOP  <||@
  Comment 487 626 NOP  <||@
  Comment 488 628 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 496 block B20 null  <||@
  Comment 496 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 496 662 NOP  <||@
  Comment 497 664 NOP  <||@
  Comment 498 666 NOP  <||@
  Comment 499 668 NOP  <||@
  Comment 500 670 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 509 block B22 null  <||@
  Comment 509 702 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 704 NOP  <||@
  Comment 510 706 NOP  <||@
  Comment 511 708 NOP  <||@
  Comment 512 710 NOP  <||@
  Comment 513 712 NOP  <||@
  Comment 514 714 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 517 716 CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 525 block B24 null  <||@
  Comment 525 748 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 525 750 NOP  <||@
  Comment 526 752 NOP  <||@
  Comment 527 754 NOP  <||@
  Comment 528 756 NOP  <||@
  Comment 529 758 NOP  <||@
  Comment 530 760 r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 533 762 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD  <||@
  Comment 542 block B27 null  <||@
  Comment 542 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 542 818 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 546 820 NOP  <||@
  Comment 547 822 NOP  <||@
  Comment 548 824 NOP  <||@
  Comment 549 826 NOP  <||@
  Comment 550 828 NOP  <||@
  Comment 551 830 NOP  <||@
  Comment 552 832 NOP  <||@
  Comment 553 834 NOP  <||@
  Comment 554 836 NOP  <||@
  Comment 555 838 NOP  <||@
  Comment 556 840 NOP  <||@
  Comment 557 842 NOP  <||@
  Comment 558 844 NOP  <||@
  Comment 559 846 NOP  <||@
  Comment 560 848 NOP  <||@
  Comment 561 850 NOP  <||@
  Comment 562 852 NOP  <||@
  Comment 563 854 NOP  <||@
  Comment 564 856 NOP  <||@
  Comment 565 858 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 565 860 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 569 862 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 569 864 rdi|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 571 866 r11|QWORD = MOV value: r8|DWORD size: DWORD  <||@
  Comment 574 868 rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 579 870 rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 584 872 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 587 874 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 587 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 592 876 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 597 878 rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 601 880 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 604 882 JUMP ~outgoingValues: [] destination: B27 -> B29  <||@
  Comment 604 block B29 null  <||@
  Comment 604 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 604 960 NOP  <||@
  Comment 605 962 NOP  <||@
  Comment 606 964 NOP  <||@
  Comment 607 966 NOP  <||@
  Comment 608 968 NOP  <||@
  Comment 609 970 NOP  <||@
  Comment 610 972 NOP  <||@
  Comment 611 974 NOP  <||@
  Comment 612 976 NOP  <||@
  Comment 613 978 NOP  <||@
  Comment 614 980 NOP  <||@
  Comment 615 982 NOP  <||@
  Comment 616 984 NOP  <||@
  Comment 617 986 NOP  <||@
  Comment 618 988 NOP  <||@
  Comment 619 990 NOP  <||@
  Comment 620 992 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 623 994 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 623 [rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 623 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 631 996 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 631 [rdx:0, rsi:0, r10:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 631 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 639 998 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21]  <||@
  Comment 639 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 639 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 647 1000 r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 655 1002 rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 662 1004 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 666 1006 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 670 1008 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 674 1010 CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD  <||@
  Comment 683 block B30 null  <||@
  Comment 683 1012 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 683 1014 NOP  <||@
  Comment 684 1016 NOP  <||@
  Comment 685 1018 NOP  <||@
  Comment 686 1020 NOP  <||@
  Comment 687 1022 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null  <||@
  Comment 697 block B31 null  <||@
  Comment 697 1024 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 697 1026 NOP  <||@
  Comment 698 1028 NOP  <||@
  Comment 699 1030 NOP  <||@
  Comment 700 1032 NOP  <||@
  Comment 701 1034 NOP  <||@
  Comment 702 1036 NOP  <||@
  Comment 703 1038 NOP  <||@
  Comment 704 1040 NOP  <||@
  Comment 705 1042 NOP  <||@
  Comment 706 1044 NOP  <||@
  Comment 707 1046 NOP  <||@
  Comment 708 1048 NOP  <||@
  Comment 709 1050 NOP  <||@
  Comment 710 1052 NOP  <||@
  Comment 711 1054 NOP  <||@
  Comment 712 1056 NOP  <||@
  Comment 713 1058 NOP  <||@
  Comment 714 1060 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184  <||@
  Comment 775 1062 MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 787 1064 JUMP ~outgoingValues: [] destination: B31 -> B33  <||@
  Comment 787 block B33 null  <||@
  Comment 787 1076 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 787 1078 NOP  <||@
  Comment 788 1080 NOP  <||@
  Comment 789 1082 NOP  <||@
  Comment 790 1084 NOP  <||@
  Comment 791 1086 NOP  <||@
  Comment 792 1088 NOP  <||@
  Comment 793 1090 NOP  <||@
  Comment 794 1092 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 800 1094 MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 808 1096 MEMBAR barriers: 4  <||@
  Comment 813 1098 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null  <||@
  Comment 823 block B34 null  <||@
  Comment 823 1100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 1102 NOP  <||@
  Comment 824 1104 NOP  <||@
  Comment 825 1106 NOP  <||@
  Comment 826 1108 NOP  <||@
  Comment 827 1110 NOP  <||@
  Comment 828 1112 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 836 1114 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 845 block B35 null  <||@
  Comment 845 1116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 845 1118 NOP  <||@
  Comment 846 1120 NOP  <||@
  Comment 847 1122 NOP  <||@
  Comment 848 1124 JUMP ~outgoingValues: [] destination: B35 -> B45  <||@
  Comment 848 block B45 null  <||@
  Comment 848 1284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 848 1286 NOP  <||@
  Comment 849 1288 NOP  <||@
  Comment 850 1290 NOP  <||@
  Comment 851 1292 NOP  <||@
  Comment 852 1294 NOP  <||@
  Comment 853 1296 NOP  <||@
  Comment 854 1298 NOP  <||@
  Comment 855 1300 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 880 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 896 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 908 POLL_RETURN_FAR  <||@
  Comment 922 block B32 null  <||@
  Comment 922 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 922 1068 NOP  <||@
  Comment 923 1070 NOP  <||@
  Comment 924 1072 NOP  <||@
  Comment 925 1074 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 930 block B1 null  <||@
  Comment 930 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 930 88 NOP  <||@
  Comment 931 90 NOP  <||@
  Comment 932 92 NOP  <||@
  Comment 933 94 NOP  <||@
  Comment 934 96 NOP  <||@
  Comment 935 98 NOP  <||@
  Comment 936 100 NOP  <||@
  Comment 937 102 rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 944 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 948 106 CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD  <||@
  Comment 957 block B2 null  <||@
  Comment 957 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 957 110 NOP  <||@
  Comment 958 112 NOP  <||@
  Comment 959 114 NOP  <||@
  Comment 960 116 NOP  <||@
  Comment 961 118 NOP  <||@
  Comment 962 120 NOP  <||@
  Comment 963 122 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 971 124 rbx|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 976 126 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 984 block B4 null  <||@
  Comment 984 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 984 158 NOP  <||@
  Comment 985 160 NOP  <||@
  Comment 986 162 NOP  <||@
  Comment 987 164 NOP  <||@
  Comment 988 166 NOP  <||@
  Comment 989 168 MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 996 170 MEMBAR barriers: 4  <||@
  Comment 1001 172 JUMP ~outgoingValues: [] destination: B4 -> B9  <||@
  Comment 1006 block B44 null  <||@
  Comment 1006 1274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1006 1276 NOP  <||@
  Comment 1007 1278 NOP  <||@
  Comment 1008 1280 NOP  <||@
  Comment 1009 1282 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1014 block B36 null  <||@
  Comment 1014 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1014 1128 NOP  <||@
  Comment 1015 1130 NOP  <||@
  Comment 1016 1132 NOP  <||@
  Comment 1017 1134 NOP  <||@
  Comment 1018 1136 NOP  <||@
  Comment 1019 1138 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1027 1140 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1036 block B37 null  <||@
  Comment 1036 1142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1036 1144 NOP  <||@
  Comment 1037 1146 NOP  <||@
  Comment 1038 1148 NOP  <||@
  Comment 1039 1150 JUMP ~outgoingValues: [] destination: B37 -> B45  <||@
  Comment 1044 block B38 null  <||@
  Comment 1044 1152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1044 1154 NOP  <||@
  Comment 1045 1156 NOP  <||@
  Comment 1046 1158 NOP  <||@
  Comment 1047 1160 NOP  <||@
  Comment 1048 1162 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1063 block B39 null  <||@
  Comment 1063 1164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1063 1166 NOP  <||@
  Comment 1064 1168 NOP  <||@
  Comment 1065 1170 NOP  <||@
  Comment 1066 1172 JUMP ~outgoingValues: [] destination: B39 -> B45  <||@
  Comment 1071 block B5 null  <||@
  Comment 1071 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1071 176 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1076 178 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1080 180 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 182 NOP  <||@
  Comment 1086 184 NOP  <||@
  Comment 1087 186 NOP  <||@
  Comment 1088 188 NOP  <||@
  Comment 1089 190 NOP  <||@
  Comment 1090 192 NOP  <||@
  Comment 1091 194 NOP  <||@
  Comment 1092 196 NOP  <||@
  Comment 1093 198 NOP  <||@
  Comment 1094 200 NOP  <||@
  Comment 1095 202 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1098 204 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1103 206 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1108 208 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11]  <||@
  Comment 1111 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1111 INVOKESPECIAL  <||@
  Comment 1116 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:72|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1124 210 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 1132 block B6 null  <||@
  Comment 1132 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1132 214 NOP  <||@
  Comment 1133 216 NOP  <||@
  Comment 1134 218 NOP  <||@
  Comment 1135 220 NOP  <||@
  Comment 1136 222 NOP  <||@
  Comment 1137 224 NOP  <||@
  Comment 1138 226 NOP  <||@
  Comment 1139 228 NOP  <||@
  Comment 1140 230 NOP  <||@
  Comment 1141 232 NOP  <||@
  Comment 1142 234 NOP  <||@
  Comment 1143 236 NOP  <||@
  Comment 1144 238 NOP  <||@
  Comment 1145 240 NOP  <||@
  Comment 1146 242 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 244 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1158 246 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1163 248 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1169 250 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1175 252 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1180 254 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1188 256 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11]  <||@
  Comment 1191 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1191 INVOKESPECIAL  <||@
  Comment 1196 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1204 258 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1209 260 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1213 262 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 264 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 266 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 1228 block B7 null  <||@
  Comment 1228 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1228 270 NOP  <||@
  Comment 1229 272 NOP  <||@
  Comment 1230 274 NOP  <||@
  Comment 1231 276 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1236 278 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1240 280 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1245 282 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 284 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 1255 block B40 null  <||@
  Comment 1255 1174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1255 1176 NOP  <||@
  Comment 1256 1178 NOP  <||@
  Comment 1257 1180 NOP  <||@
  Comment 1258 1182 NOP  <||@
  Comment 1259 1184 NOP  <||@
  Comment 1260 1186 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1267 1188 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 1272 block B42 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1272 1224 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1280 1226 NOP  <||@
  Comment 1281 1228 NOP  <||@
  Comment 1282 1230 NOP  <||@
  Comment 1283 1232 NOP  <||@
  Comment 1284 1234 NOP  <||@
  Comment 1285 1236 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25]  <||@
  Comment 1292 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1292 {infopoint: SAFEPOINT}  <||@
  Comment 1292 POLL_FAR  <||@
  Comment 1295 1238 JUMP ~outgoingValues: [] destination: B42 -> B41  <||@
  Comment 1295 block B41 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1295 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1295 1192 NOP  <||@
  Comment 1296 1194 NOP  <||@
  Comment 1297 1196 NOP  <||@
  Comment 1298 1198 NOP  <||@
  Comment 1299 1200 NOP  <||@
  Comment 1300 1202 NOP  <||@
  Comment 1301 1204 NOP  <||@
  Comment 1302 1206 NOP  <||@
  Comment 1303 1208 NOP  <||@
  Comment 1304 1210 NOP  <||@
  Comment 1305 1212 NOP  <||@
  Comment 1306 1214 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1314 1216 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 1321 1218 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1324 1220 rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 1334 1222 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 1336 block B43 null  <||@
  Comment 1336 1240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1336 1242 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 1244 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 1246 NOP  <||@
  Comment 1347 1248 NOP  <||@
  Comment 1348 1250 NOP  <||@
  Comment 1349 1252 NOP  <||@
  Comment 1350 1254 NOP  <||@
  Comment 1351 1256 NOP  <||@
  Comment 1352 1258 NOP  <||@
  Comment 1353 1260 NOP  <||@
  Comment 1354 1262 NOP  <||@
  Comment 1355 1264 NOP  <||@
  Comment 1356 1266 rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1364 1268 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1368 1270 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25]  <||@
  Comment 1371 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1371 INVOKESTATIC  <||@
  Comment 1376 [stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1384 1272 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 1389 block B28 null  <||@
  Comment 1389 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1389 886 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1394 888 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1398 890 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1403 892 NOP  <||@
  Comment 1404 894 NOP  <||@
  Comment 1405 896 NOP  <||@
  Comment 1406 898 NOP  <||@
  Comment 1407 900 NOP  <||@
  Comment 1408 902 NOP  <||@
  Comment 1409 904 NOP  <||@
  Comment 1410 906 NOP  <||@
  Comment 1411 908 NOP  <||@
  Comment 1412 910 NOP  <||@
  Comment 1413 912 NOP  <||@
  Comment 1414 914 NOP  <||@
  Comment 1415 916 NOP  <||@
  Comment 1416 918 NOP  <||@
  Comment 1417 920 NOP  <||@
  Comment 1418 922 NOP  <||@
  Comment 1419 924 NOP  <||@
  Comment 1420 926 NOP  <||@
  Comment 1421 928 NOP  <||@
  Comment 1422 930 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1425 934 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18]  <||@
  Comment 1427 {HotSpotMethod<BufferedOutputStream.flushBuffer()>}  <||@
  Comment 1427 INVOKESPECIAL  <||@
  Comment 1432 [stack:16, stack:32]at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3              
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1440 936 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 938 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1448 940 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18]  <||@
  Comment 1448 [rdx:0, rsi:0, stack:16, stack:32]at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                  |2               |3              
     locals:  |rsi|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1448 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1455 942 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1459 944 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 946 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 948 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1471 950 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1476 952 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18]  <||@
  Comment 1477 INVOKEVIRTUAL  <||@
  Comment 1487 {HotSpotMethod<OutputStream.write(byte[], int, int)>}  <||@
  Comment 1492 [stack:32]at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1500 954 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 956 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 1510 block B3 null  <||@
  Comment 1510 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1510 130 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1515 132 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1519 134 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 136 NOP  <||@
  Comment 1525 138 NOP  <||@
  Comment 1526 140 NOP  <||@
  Comment 1527 142 NOP  <||@
  Comment 1528 144 NOP  <||@
  Comment 1529 146 NOP  <||@
  Comment 1530 148 NOP  <||@
  Comment 1531 150 MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD  <||@
  Comment 1542 152 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1553 154 DEOPT info [bci:32, 1, 4, 4, 11]  <||@
  Comment 1553 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1558 [r11:0, stack:16, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r11|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1566 block B11 null  <||@
  Comment 1566 458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1566 460 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1571 462 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1575 464 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1580 466 NOP  <||@
  Comment 1581 468 NOP  <||@
  Comment 1582 470 NOP  <||@
  Comment 1583 472 r11|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 1590 474 r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed]  <||@
  Comment 1596 486 JUMP ~outgoingValues: [] destination: B11 -> B26  <||@
  Comment 1596 block B26 null  <||@
  Comment 1596 794 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1596 476 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1601 484 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1606 796 NOP  <||@
  Comment 1607 798 NOP  <||@
  Comment 1608 800 NOP  <||@
  Comment 1609 802 NOP  <||@
  Comment 1610 804 NOP  <||@
  Comment 1611 806 NOP  <||@
  Comment 1612 808 NOP  <||@
  Comment 1613 810 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1620 812 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1627 814 DEOPT info [bci:12, 4, 4, 11]  <||@
  Comment 1627 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1632 [rax:0, rdx:0, rsi:0]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1640 block B17 null  <||@
  Comment 1640 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 590 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1645 592 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1649 594 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1654 596 NOP  <||@
  Comment 1655 598 NOP  <||@
  Comment 1656 600 NOP  <||@
  Comment 1657 602 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1664 604 r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7]  <||@
  Comment 1670 616 JUMP ~outgoingValues: [] destination: B17 -> B26  <||@
  Comment 1672 block B25 null  <||@
  Comment 1672 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1672 766 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1677 768 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1681 770 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1686 772 NOP  <||@
  Comment 1687 774 NOP  <||@
  Comment 1688 776 NOP  <||@
  Comment 1689 778 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1696 780 r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7]  <||@
  Comment 1702 792 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1704 block B23 null  <||@
  Comment 1704 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1704 720 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1709 722 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1713 724 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1718 726 NOP  <||@
  Comment 1719 728 NOP  <||@
  Comment 1720 730 NOP  <||@
  Comment 1721 732 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1728 734 r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7]  <||@
  Comment 1734 746 JUMP ~outgoingValues: [] destination: B23 -> B26  <||@
  Comment 1739 block B19 null  <||@
  Comment 1739 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1739 632 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1744 634 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1748 636 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 638 NOP  <||@
  Comment 1754 640 NOP  <||@
  Comment 1755 642 NOP  <||@
  Comment 1756 644 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1763 646 r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7]  <||@
  Comment 1769 658 JUMP ~outgoingValues: [] destination: B19 -> B26  <||@
  Comment 1774 block B21 null  <||@
  Comment 1774 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1774 674 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1779 676 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1783 678 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 680 NOP  <||@
  Comment 1789 682 NOP  <||@
  Comment 1790 684 NOP  <||@
  Comment 1791 686 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1798 688 r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7]  <||@
  Comment 1804 700 JUMP ~outgoingValues: [] destination: B21 -> B26  <||@
  Comment 1809 block B46 null  <||@
  Comment 1809 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1809 1304 NOP  <||@
  Comment 1810 1306 NOP  <||@
  Comment 1811 1308 NOP  <||@
  Comment 1812 1310 NOP  <||@
  Comment 1813 1312 NOP  <||@
  Comment 1814 1314 NOP  <||@
  Comment 1815 1316 NOP  <||@
  Comment 1816 1318 NOP  <||@
  Comment 1817 1320 NOP  <||@
  Comment 1818 1322 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1822 1324 MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD  <||@
  Comment 1833 1326 MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD  <||@
  Comment 1844 1328 DEOPT info [bci:4, 2, 5, 4, 25]  <||@
  Comment 1844 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1849 [rdx:0, r10:0, r11:0, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r11|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r8|DWORD      |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1857 block B15 null  <||@
  Comment 1857 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1857 548 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1862 550 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1866 552 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 554 NOP  <||@
  Comment 1872 556 NOP  <||@
  Comment 1873 558 NOP  <||@
  Comment 1874 560 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1881 562 r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed]  <||@
  Comment 1887 574 JUMP ~outgoingValues: [] destination: B15 -> B26  <||@
  Comment 1892 block B13 null  <||@
  Comment 1892 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1892 502 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1897 504 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1901 506 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 508 NOP  <||@
  Comment 1907 510 NOP  <||@
  Comment 1908 512 NOP  <||@
  Comment 1909 514 r11|QWORD = MOVE input: long[10260|0x2814]  <||@
  Comment 1916 516 r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed]  <||@
  Comment 1922 528 JUMP ~outgoingValues: [] destination: B13 -> B26  <||@
  Comment 1932 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1947 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1962 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1977 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2002 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2035 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2065 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2070 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2100 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2105 [rdx:0, rsi:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2140 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2170 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2175 [rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2210 [rdx:0, rsi:0, r10:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2245 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2253 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2253 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2259 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5350[java.io.BufferedOutputStream.write(byte[], int, int)]"
  method "HotSpotCompilation-5350[java.io.BufferedOutputStream.write(byte[], int, int)]"
  date 1724269741801
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae23ee0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85831196fe66669089842400c0feff4883ec489041817f20030000000f854d070000909090909090909090909090909090909090909090909090909048896c244048897424208b46208b3cc50c0000008b3cfd0c0000008504fd000000004d8b97800300004d8b12448bdf49c1e30348c1e0034889442418b800000000bb01000000f00fb11cfd100000000f85f9020000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f84310000008b04fd0c00000048c1e0034885c00f841d000000498b5f284883fb000f84890600004883eb0849895f2849035f38488903498bda48c1eb03891cfd0c000000498bfb4933fa48c1ef160f8442000000498bfb48c1ef0948bb00e0368d787f00004803fb803f027429f083042400803f00741fc60700498b5f484885db0f84380600004883eb0849895f4849035f5848893b90909090443b461c0f8de2030000909090909090909090908b7a0c448b5624468b1cd50c0000008b5e188bc34103c08be8ffc585ed0f8c6604000090909090413beb0f8f9f0500009090909090418beb2beb443bc50f8f690500009090909085c90f8c840400009090909085db0f8cdb040000909090904585c00f8cf10400009090909090412bf83bcf0f8f9b0400009090909090452bd8413bdb0f8f6a0400008944242c9090909090909090909090909090909090909049c1e2038bf9458bd8488d7c3a10498d741a10498bd3e8d05c94fe488b7424208b44242c894618909090909090909090909090909090908b5620448b14d50c000000468b1cd50c000000468b04dd10000000468b0cdd0c000000498b8f8003000049c1e10349c1e20348c1e2034c3b090f8566040000909090904183f8010f85e1000000909090909090909090909090909090909041807f40000f8432000000428b0cdd0c00000048c1e1034885c90f841d0000004d8b4f284983f9000f84bd0400004983e9084d894f284d034f3849890942c704dd0c0000000000000090909090909090458bc841ffc946890cdd10000000f0830424004183f8010f85b70000009090909090468b1cdd140000004585db0f85a900000090909090909090909090488b6c24404883c448493ba7d804000072234883ec08498bff48b9505d98b1787f0000ffd14883c40848b980d27399787f0000ffe1493ba7500400000f872b040000c3909090e971ffffff909090909090908b1cfd0c00000048c1e3034c3bd30f8572000000909090909090448b14fd10000000418bdaffc385db0f8c0e0200009090909090891cfd10000000f083042400e98ffdffff909090e95affffff9090909090468b1cdd140000004585db0f8508000000909090e93cffffff9090909042833cdd0c000000000f85c0000000909090e921ffffff4489442434894c2430488954241090909090909090909090498bf3ba010000004c895c2408666690e8441096fe0f1f84002c06000885c00f85600000009090909090909090909090909090488b74240848c7c200000000b90100000041b80000000041b900000000bf0000000048c7042400000000666690e8f40f96fe0f1f84007c060009448b4424348b4c2430488b542410488b742420e9b1fcffff909090448b4424348b4c2430488b542410488b742420e996fcffff9090909090418bf348c1e603e9170000000f1f84000000000090909090904d8b8f580400004185019090909090909090909090468b04dd0c000000458bc84183e1fe418bc0f0460fb10cdd0c00000075c848895424104c8954241890909090909090909090428b34dd1800000048c1e603666690e8401596fe0f1f84003007000be9e3fdffff4489442434894c24304889542410909090909090909090909090909090909090904c8bd66690e8080f96fe0f1f84006807000c488b7424208b56108504d50000000048c1e203488bf2488b5424108b4c2430448b4424349048b8ffffffffffffffffe8cc1196fe0f1f8400a407000e488b742420e976fcffff4489442434894c243048895424109090909090909041c78784040000ed1afeff49c7879004000094020000e8846c96fe0f1f8400000000004489442434894c2430488954241090909049c7c39425000041baed3ffeff488b442418488b74242090909090909090458997840400004d899f90040000e83a6c96fe0f1f8400000000004489442434894c2430488954241090909049c7c30000000041bae733feffebb44489442434894c2430488954241090909049c7c30000000041bae723feffeb944489442434894c2430488954241090909049c7c30000000041bae727feffe971ffffff4489442434894c2430488954241090909049c7c30000000041bae72ffeffe94effffff4489442434894c2430488954241090909049c7c30000000041bae72bfeffe92bffffff90909090909090909049c1e30341c78784040000ed1ffeff49c78790040000942a0000e8616b96fe0f1f8400000000004489442434894c2430488954241090909049c7c39420000041baed37feffe9d8feffff4489442434894c2430488954241090909049c7c31428000041baed3bfeffe9b5feffff48896c2440e8af6b94fee9a4f8fffff448890424e8803baafee978f9fffff448893c24e8f15caafee9c9f9fffff448890c24e8623baafee944fbfffff4488d0dc1fbffff49898f68040000e9497996fef441c78784040000f5f7feff49c7879004000000000000e8a76a96fe0f1f84000000000041c78784040000f5f3feff49c7879004000000000000e8846a96fe0f1f84000000000041c78784040000f5ddfeff49c7879004000000000000e8616a96fe0f1f84000000000041c78784040000f5dcfeff49c7879004000000000000e83e6a96fe0f1f84000000000041c78784040000f5b7feff49c7879004000000000000e81b6a96fe0f1f84000000000041c78784040000f5b3feff49c7879004000000000000e8f86996fe0f1f84000000000041c78784040000f5affeff49c7879004000000000000e8d56996fe0f1f840000000000e84e0baafef4e8686796fef4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 89 56 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6b8ae00a slotKind: QWORD  <||@
  Comment 89 58 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 94 60 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 97 62 rdi|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 97 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 64 rdi|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 104 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 104 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 111 66 NULLCHECK address: [rdi|DWORD[_] * 8] state [bci:0]  <||@
  Comment 111 [rax:0, rdx:0, rsi:0, rdi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 111 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 118 68 r10|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 125 70 r10|QWORD[.] = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 128 72 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 135 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 139 76 stack:56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 144 78 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 80 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 154 82 rax|DWORD = CAS (address: [rdi|DWORD[_] * 8 + 16], cmpValue: rax|DWORD, newValue: rbx|DWORD) accessKind: DWORD  <||@
  Comment 163 84 BRANCH trueDestinationProbability: 0.13475912048564476 condition: != trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 169 block B8 null  <||@
  Comment 169 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 169 288 NOP  <||@
  Comment 170 290 NOP  <||@
  Comment 171 292 NOP  <||@
  Comment 172 294 NOP  <||@
  Comment 173 296 NOP  <||@
  Comment 174 298 NOP  <||@
  Comment 175 300 NOP  <||@
  Comment 176 302 NOP  <||@
  Comment 177 304 NOP  <||@
  Comment 178 306 NOP  <||@
  Comment 179 308 NOP  <||@
  Comment 180 310 NOP  <||@
  Comment 181 312 NOP  <||@
  Comment 182 314 NOP  <||@
  Comment 183 316 NOP  <||@
  Comment 184 318 NOP  <||@
  Comment 185 320 NOP  <||@
  Comment 186 322 NOP  <||@
  Comment 187 324 NOP  <||@
  Comment 188 326 NOP  <||@
  Comment 189 328 NOP  <||@
  Comment 190 330 NOP  <||@
  Comment 191 332 NOP  <||@
  Comment 192 334 NOP  <||@
  Comment 193 336 NOP  <||@
  Comment 194 338 NOP  <||@
  Comment 195 340 NOP  <||@
  Comment 196 342 NOP  <||@
  Comment 197 344 NOP  <||@
  Comment 198 346 NOP  <||@
  Comment 199 348 NOP  <||@
  Comment 200 350 NOP  <||@
  Comment 201 352 NOP  <||@
  Comment 202 354 NOP  <||@
  Comment 203 356 NOP  <||@
  Comment 204 358 NOP  <||@
  Comment 205 360 NOP  <||@
  Comment 206 362 NOP  <||@
  Comment 207 364 NOP  <||@
  Comment 208 366 NOP  <||@
  Comment 209 368 NOP  <||@
  Comment 210 370 NOP  <||@
  Comment 211 372 NOP  <||@
  Comment 212 374 NOP  <||@
  Comment 213 376 NOP  <||@
  Comment 214 378 NOP  <||@
  Comment 215 380 NOP  <||@
  Comment 216 382 NOP  <||@
  Comment 217 384 NOP  <||@
  Comment 218 386 NOP  <||@
  Comment 219 388 NOP  <||@
  Comment 220 390 NOP  <||@
  Comment 221 392 NOP  <||@
  Comment 222 394 NOP  <||@
  Comment 223 396 NOP  <||@
  Comment 224 398 NOP  <||@
  Comment 225 400 AMD64G1PREWRITEBARRIER (~address: [rdi|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: rbx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184  <||@
  Comment 285 402 rbx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 292 404 MOV (x: [rdi|DWORD[_] * 8 + 12], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 299 406 AMD64G1POSTWRITEBARRIER (~address: r11|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdi|QWORD, temp2: rbx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184  <||@
  Comment 381 408 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 381 block B9 null  <||@
  Comment 381 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 381 412 NOP  <||@
  Comment 382 414 NOP  <||@
  Comment 383 416 NOP  <||@
  Comment 384 418 NOP  <||@
  Comment 385 420 CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 0.999996150958756 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: DWORD  <||@
  Comment 395 block B10 null  <||@
  Comment 395 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 395 424 NOP  <||@
  Comment 396 426 NOP  <||@
  Comment 397 428 NOP  <||@
  Comment 398 430 NOP  <||@
  Comment 399 432 NOP  <||@
  Comment 400 434 NOP  <||@
  Comment 401 436 NOP  <||@
  Comment 402 438 NOP  <||@
  Comment 403 440 NOP  <||@
  Comment 404 442 NOP  <||@
  Comment 405 444 rdi|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:12, 4, 4, 11]  <||@
  Comment 405 [rdx:0, rsi:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 405 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 408 446 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 412 448 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:12, 4, 4, 11]  <||@
  Comment 412 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 412 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 420 450 rbx|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 423 452 rax|DWORD = ADD (x: rbx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 428 454 rbp|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 432 456 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 440 block B12 null  <||@
  Comment 440 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 440 490 NOP  <||@
  Comment 441 492 NOP  <||@
  Comment 442 494 NOP  <||@
  Comment 443 496 NOP  <||@
  Comment 444 498 CMPBRANCH (x: rbp|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 453 block B14 null  <||@
  Comment 453 530 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 453 532 NOP  <||@
  Comment 454 534 NOP  <||@
  Comment 455 536 NOP  <||@
  Comment 456 538 NOP  <||@
  Comment 457 540 NOP  <||@
  Comment 458 542 rbp|DWORD = SUB (x: r11|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 463 544 CMPBRANCH (x: r8|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 472 block B16 null  <||@
  Comment 472 576 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 472 578 NOP  <||@
  Comment 473 580 NOP  <||@
  Comment 474 582 NOP  <||@
  Comment 475 584 NOP  <||@
  Comment 476 586 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 484 block B18 null  <||@
  Comment 484 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 484 620 NOP  <||@
  Comment 485 622 NOP  <||@
  Comment 486 624 NOP  <||@
  Comment 487 626 NOP  <||@
  Comment 488 628 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 496 block B20 null  <||@
  Comment 496 660 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 496 662 NOP  <||@
  Comment 497 664 NOP  <||@
  Comment 498 666 NOP  <||@
  Comment 499 668 NOP  <||@
  Comment 500 670 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 509 block B22 null  <||@
  Comment 509 702 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 704 NOP  <||@
  Comment 510 706 NOP  <||@
  Comment 511 708 NOP  <||@
  Comment 512 710 NOP  <||@
  Comment 513 712 NOP  <||@
  Comment 514 714 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 517 716 CMPBRANCH (x: rcx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: DWORD  <||@
  Comment 525 block B24 null  <||@
  Comment 525 748 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 525 750 NOP  <||@
  Comment 526 752 NOP  <||@
  Comment 527 754 NOP  <||@
  Comment 528 756 NOP  <||@
  Comment 529 758 NOP  <||@
  Comment 530 760 r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 533 762 CMPBRANCH (x: rbx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 size: DWORD  <||@
  Comment 542 block B27 null  <||@
  Comment 542 816 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 542 818 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 546 820 NOP  <||@
  Comment 547 822 NOP  <||@
  Comment 548 824 NOP  <||@
  Comment 549 826 NOP  <||@
  Comment 550 828 NOP  <||@
  Comment 551 830 NOP  <||@
  Comment 552 832 NOP  <||@
  Comment 553 834 NOP  <||@
  Comment 554 836 NOP  <||@
  Comment 555 838 NOP  <||@
  Comment 556 840 NOP  <||@
  Comment 557 842 NOP  <||@
  Comment 558 844 NOP  <||@
  Comment 559 846 NOP  <||@
  Comment 560 848 NOP  <||@
  Comment 561 850 NOP  <||@
  Comment 562 852 NOP  <||@
  Comment 563 854 NOP  <||@
  Comment 564 856 NOP  <||@
  Comment 565 858 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 565 860 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 569 862 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 569 864 rdi|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 571 866 r11|QWORD = MOV value: r8|DWORD size: DWORD  <||@
  Comment 574 868 rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 579 870 rsi|QWORD = LEA address: [r10|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 584 872 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 587 874 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 587 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 592 876 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 597 878 rax|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 601 880 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 604 882 JUMP ~outgoingValues: [] destination: B27 -> B29  <||@
  Comment 604 block B29 null  <||@
  Comment 604 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 604 960 NOP  <||@
  Comment 605 962 NOP  <||@
  Comment 606 964 NOP  <||@
  Comment 607 966 NOP  <||@
  Comment 608 968 NOP  <||@
  Comment 609 970 NOP  <||@
  Comment 610 972 NOP  <||@
  Comment 611 974 NOP  <||@
  Comment 612 976 NOP  <||@
  Comment 613 978 NOP  <||@
  Comment 614 980 NOP  <||@
  Comment 615 982 NOP  <||@
  Comment 616 984 NOP  <||@
  Comment 617 986 NOP  <||@
  Comment 618 988 NOP  <||@
  Comment 619 990 NOP  <||@
  Comment 620 992 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 623 994 r10|DWORD[_] = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 623 [rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 623 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 631 996 r11|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:21]  <||@
  Comment 631 [rdx:0, rsi:0, r10:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 631 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 639 998 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 16] size: DWORD state [bci:21]  <||@
  Comment 639 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 639 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 647 1000 r9|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 655 1002 rcx|QWORD = MOV input: [r15|QWORD + 896] size: QWORD  <||@
  Comment 662 1004 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 666 1006 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 670 1008 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 674 1010 CMPBRANCH (x: r9|QWORD[.], y: [rcx|QWORD]) trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B46 size: QWORD  <||@
  Comment 683 block B30 null  <||@
  Comment 683 1012 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 683 1014 NOP  <||@
  Comment 684 1016 NOP  <||@
  Comment 685 1018 NOP  <||@
  Comment 686 1020 NOP  <||@
  Comment 687 1022 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.8652302759969847 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 1 size: DWORD inlinedY: null  <||@
  Comment 697 block B31 null  <||@
  Comment 697 1024 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 697 1026 NOP  <||@
  Comment 698 1028 NOP  <||@
  Comment 699 1030 NOP  <||@
  Comment 700 1032 NOP  <||@
  Comment 701 1034 NOP  <||@
  Comment 702 1036 NOP  <||@
  Comment 703 1038 NOP  <||@
  Comment 704 1040 NOP  <||@
  Comment 705 1042 NOP  <||@
  Comment 706 1044 NOP  <||@
  Comment 707 1046 NOP  <||@
  Comment 708 1048 NOP  <||@
  Comment 709 1050 NOP  <||@
  Comment 710 1052 NOP  <||@
  Comment 711 1054 NOP  <||@
  Comment 712 1056 NOP  <||@
  Comment 713 1058 NOP  <||@
  Comment 714 1060 AMD64G1PREWRITEBARRIER (~address: [r11|DWORD[_] * 8 + 12], ~expectedObject: -) {temp: r9|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@3bef7184  <||@
  Comment 775 1062 MOV x: [r11|DWORD[_] * 8 + 12] y: 0 size: DWORD  <||@
  Comment 787 1064 JUMP ~outgoingValues: [] destination: B31 -> B33  <||@
  Comment 787 block B33 null  <||@
  Comment 787 1076 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 787 1078 NOP  <||@
  Comment 788 1080 NOP  <||@
  Comment 789 1082 NOP  <||@
  Comment 790 1084 NOP  <||@
  Comment 791 1086 NOP  <||@
  Comment 792 1088 NOP  <||@
  Comment 793 1090 NOP  <||@
  Comment 794 1092 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 800 1094 MOV (x: [r11|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 808 1096 MEMBAR barriers: 4  <||@
  Comment 813 1098 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.867397541512695 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B44 y: 1 size: DWORD inlinedY: null  <||@
  Comment 823 block B34 null  <||@
  Comment 823 1100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 1102 NOP  <||@
  Comment 824 1104 NOP  <||@
  Comment 825 1106 NOP  <||@
  Comment 826 1108 NOP  <||@
  Comment 827 1110 NOP  <||@
  Comment 828 1112 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 836 1114 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.9993015402267503 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 845 block B35 null  <||@
  Comment 845 1116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 845 1118 NOP  <||@
  Comment 846 1120 NOP  <||@
  Comment 847 1122 NOP  <||@
  Comment 848 1124 JUMP ~outgoingValues: [] destination: B35 -> B45  <||@
  Comment 848 block B45 null  <||@
  Comment 848 1284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 848 1286 NOP  <||@
  Comment 849 1288 NOP  <||@
  Comment 850 1290 NOP  <||@
  Comment 851 1292 NOP  <||@
  Comment 852 1294 NOP  <||@
  Comment 853 1296 NOP  <||@
  Comment 854 1298 NOP  <||@
  Comment 855 1300 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: true thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 880 {HotSpotForeignCallDescriptor{enableStackReservedZoneEntry(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[], transition=LEAF_NO_VZERO}@0x7f78b1985d50:CallingConvention[rdi|QWORD]:CallingConvention[rdi|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL}  <||@
  Comment 896 {Field[name=StubRoutines::_throw_delayed_StackOverflowError_entry, type=address, offset=0, address=0x7f78b2050498, value=140155947307648]:0x7f789973d280}  <||@
  Comment 908 POLL_RETURN_FAR  <||@
  Comment 922 block B32 null  <||@
  Comment 922 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 922 1068 NOP  <||@
  Comment 923 1070 NOP  <||@
  Comment 924 1072 NOP  <||@
  Comment 925 1074 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 930 block B1 null  <||@
  Comment 930 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 930 88 NOP  <||@
  Comment 931 90 NOP  <||@
  Comment 932 92 NOP  <||@
  Comment 933 94 NOP  <||@
  Comment 934 96 NOP  <||@
  Comment 935 98 NOP  <||@
  Comment 936 100 NOP  <||@
  Comment 937 102 rbx|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 944 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 948 106 CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.9997028739455198 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 size: QWORD  <||@
  Comment 957 block B2 null  <||@
  Comment 957 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 957 110 NOP  <||@
  Comment 958 112 NOP  <||@
  Comment 959 114 NOP  <||@
  Comment 960 116 NOP  <||@
  Comment 961 118 NOP  <||@
  Comment 962 120 NOP  <||@
  Comment 963 122 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 971 124 rbx|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 976 126 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 984 block B4 null  <||@
  Comment 984 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 984 158 NOP  <||@
  Comment 985 160 NOP  <||@
  Comment 986 162 NOP  <||@
  Comment 987 164 NOP  <||@
  Comment 988 166 NOP  <||@
  Comment 989 168 MOV (x: [rdi|DWORD[_] * 8 + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 996 170 MEMBAR barriers: 4  <||@
  Comment 1001 172 JUMP ~outgoingValues: [] destination: B4 -> B9  <||@
  Comment 1006 block B44 null  <||@
  Comment 1006 1274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1006 1276 NOP  <||@
  Comment 1007 1278 NOP  <||@
  Comment 1008 1280 NOP  <||@
  Comment 1009 1282 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1014 block B36 null  <||@
  Comment 1014 1126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1014 1128 NOP  <||@
  Comment 1015 1130 NOP  <||@
  Comment 1016 1132 NOP  <||@
  Comment 1017 1134 NOP  <||@
  Comment 1018 1136 NOP  <||@
  Comment 1019 1138 r11|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 1027 1140 TESTBRANCH (x: r11|DWORD[_], y: r11|DWORD[_]) trueDestinationProbability: 0.899215972285532 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1036 block B37 null  <||@
  Comment 1036 1142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1036 1144 NOP  <||@
  Comment 1037 1146 NOP  <||@
  Comment 1038 1148 NOP  <||@
  Comment 1039 1150 JUMP ~outgoingValues: [] destination: B37 -> B45  <||@
  Comment 1044 block B38 null  <||@
  Comment 1044 1152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1044 1154 NOP  <||@
  Comment 1045 1156 NOP  <||@
  Comment 1046 1158 NOP  <||@
  Comment 1047 1160 NOP  <||@
  Comment 1048 1162 CMPCONSTBRANCH x: [r11|DWORD[_] * 8 + 12] trueDestinationProbability: 0.89280868385346 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: DWORD inlinedY: null  <||@
  Comment 1063 block B39 null  <||@
  Comment 1063 1164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1063 1166 NOP  <||@
  Comment 1064 1168 NOP  <||@
  Comment 1065 1170 NOP  <||@
  Comment 1066 1172 JUMP ~outgoingValues: [] destination: B39 -> B45  <||@
  Comment 1071 block B5 null  <||@
  Comment 1071 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1071 176 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1076 178 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1080 180 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 182 NOP  <||@
  Comment 1086 184 NOP  <||@
  Comment 1087 186 NOP  <||@
  Comment 1088 188 NOP  <||@
  Comment 1089 190 NOP  <||@
  Comment 1090 192 NOP  <||@
  Comment 1091 194 NOP  <||@
  Comment 1092 196 NOP  <||@
  Comment 1093 198 NOP  <||@
  Comment 1094 200 NOP  <||@
  Comment 1095 202 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1098 204 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1103 206 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1108 208 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:2, 9, 4, 4, 11]  <||@
  Comment 1111 {HotSpotMethod<ReentrantLock$NonfairSync.tryAcquire(int)>}  <||@
  Comment 1111 INVOKESPECIAL  <||@
  Comment 1116 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:989) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1          
     locals:  |stack:72|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1124 210 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.7420367877972185 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 1132 block B6 null  <||@
  Comment 1132 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1132 214 NOP  <||@
  Comment 1133 216 NOP  <||@
  Comment 1134 218 NOP  <||@
  Comment 1135 220 NOP  <||@
  Comment 1136 222 NOP  <||@
  Comment 1137 224 NOP  <||@
  Comment 1138 226 NOP  <||@
  Comment 1139 228 NOP  <||@
  Comment 1140 230 NOP  <||@
  Comment 1141 232 NOP  <||@
  Comment 1142 234 NOP  <||@
  Comment 1143 236 NOP  <||@
  Comment 1144 238 NOP  <||@
  Comment 1145 240 NOP  <||@
  Comment 1146 242 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1151 244 rdx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1158 246 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1163 248 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1169 250 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1175 252 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1180 254 out:0|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1188 256 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD, out:0|QWORD] temps: [out:0|QWORD] callTarget: HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:15, 9, 4, 4, 11]  <||@
  Comment 1191 {HotSpotMethod<AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long)>}  <||@
  Comment 1191 INVOKESPECIAL  <||@
  Comment 1196 [stack:8, stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153) [bci: 9, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:72|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1204 258 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1209 260 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1213 262 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 264 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1223 266 JUMP ~outgoingValues: [] destination: B6 -> B9  <||@
  Comment 1228 block B7 null  <||@
  Comment 1228 268 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1228 270 NOP  <||@
  Comment 1229 272 NOP  <||@
  Comment 1230 274 NOP  <||@
  Comment 1231 276 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1236 278 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1240 280 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1245 282 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 284 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 1255 block B40 null  <||@
  Comment 1255 1174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1255 1176 NOP  <||@
  Comment 1256 1178 NOP  <||@
  Comment 1257 1180 NOP  <||@
  Comment 1258 1182 NOP  <||@
  Comment 1259 1184 NOP  <||@
  Comment 1260 1186 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1267 1188 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 1272 block B42 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1272 1224 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1280 1226 NOP  <||@
  Comment 1281 1228 NOP  <||@
  Comment 1282 1230 NOP  <||@
  Comment 1283 1232 NOP  <||@
  Comment 1284 1234 NOP  <||@
  Comment 1285 1236 SAFEPOINT temp: r9|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:21, 10, 22, 12, 5, 4, 25]  <||@
  Comment 1292 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at jdk.internal.misc.Unsafe.getAndBitwiseAndInt(Unsafe.java:3233) [bci: 21, duringCall: false, rethrow: false]
              |0                         |1             |2             |3  |4                           |5        
     locals:  |Object[Unsafe@679697080]  |rsi|QWORD[.]  |long[12|0xc]  |-  |int[-2|0xfffffffffffffffe]  |r8|DWORD 
     stack:   |int[0|0x0]                |              |              |   |                            |         
  at java.util.concurrent.locks.AbstractQueuedSynchronizer$Node.getAndUnsetStatus(AbstractQueuedSynchronizer.java:481) [bci: 10, duringCall: true, rethrow: false]
              |0             |1          
     locals:  |rsi|QWORD[.]  |int[1|0x1] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:644) [bci: 22, duringCall: true, rethrow: false]
              |0  |1            
     locals:  |-  |rsi|QWORD[.] 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1292 {infopoint: SAFEPOINT}  <||@
  Comment 1292 POLL_FAR  <||@
  Comment 1295 1238 JUMP ~outgoingValues: [] destination: B42 -> B41  <||@
  Comment 1295 block B41 loop 0 depth 1 header:233|LoopBegin  <||@
  Comment 1295 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1295 1192 NOP  <||@
  Comment 1296 1194 NOP  <||@
  Comment 1297 1196 NOP  <||@
  Comment 1298 1198 NOP  <||@
  Comment 1299 1200 NOP  <||@
  Comment 1300 1202 NOP  <||@
  Comment 1301 1204 NOP  <||@
  Comment 1302 1206 NOP  <||@
  Comment 1303 1208 NOP  <||@
  Comment 1304 1210 NOP  <||@
  Comment 1305 1212 NOP  <||@
  Comment 1306 1214 r8|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 1314 1216 r9|DWORD = AND x: r8|DWORD y: -2 size: DWORD  <||@
  Comment 1321 1218 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1324 1220 rax|DWORD = CAS (address: [r11|DWORD[_] * 8 + 12], cmpValue: rax|DWORD, newValue: r9|DWORD) accessKind: DWORD  <||@
  Comment 1334 1222 BRANCH trueDestinationProbability: 0.5 condition: != trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 1336 block B43 null  <||@
  Comment 1336 1240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1336 1242 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1341 1244 stack:56|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 1246 NOP  <||@
  Comment 1347 1248 NOP  <||@
  Comment 1348 1250 NOP  <||@
  Comment 1349 1252 NOP  <||@
  Comment 1350 1254 NOP  <||@
  Comment 1351 1256 NOP  <||@
  Comment 1352 1258 NOP  <||@
  Comment 1353 1260 NOP  <||@
  Comment 1354 1262 NOP  <||@
  Comment 1355 1264 NOP  <||@
  Comment 1356 1266 rsi|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1364 1268 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1368 1270 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<LockSupport.unpark(Thread)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:30, 12, 5, 4, 25]  <||@
  Comment 1371 {HotSpotMethod<LockSupport.unpark(Thread)>}  <||@
  Comment 1371 INVOKESTATIC  <||@
  Comment 1376 [stack:16, stack:24, stack:32]at java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer.java:645) [bci: 30, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1060) [bci: 12, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:64|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1384 1272 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 1389 block B28 null  <||@
  Comment 1389 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1389 886 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1394 888 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1398 890 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1403 892 NOP  <||@
  Comment 1404 894 NOP  <||@
  Comment 1405 896 NOP  <||@
  Comment 1406 898 NOP  <||@
  Comment 1407 900 NOP  <||@
  Comment 1408 902 NOP  <||@
  Comment 1409 904 NOP  <||@
  Comment 1410 906 NOP  <||@
  Comment 1411 908 NOP  <||@
  Comment 1412 910 NOP  <||@
  Comment 1413 912 NOP  <||@
  Comment 1414 914 NOP  <||@
  Comment 1415 916 NOP  <||@
  Comment 1416 918 NOP  <||@
  Comment 1417 920 NOP  <||@
  Comment 1418 922 NOP  <||@
  Comment 1419 924 NOP  <||@
  Comment 1420 926 NOP  <||@
  Comment 1421 928 NOP  <||@
  Comment 1422 930 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1425 934 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<BufferedOutputStream.flushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:9, 18]  <||@
  Comment 1427 {HotSpotMethod<BufferedOutputStream.flushBuffer()>}  <||@
  Comment 1427 INVOKESPECIAL  <||@
  Comment 1432 [stack:16, stack:32]at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:216) [bci: 9, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3              
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1440 936 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 938 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1448 940 NULLCHECK address: [rdx|DWORD[_] * 8] state [bci:12, 18]  <||@
  Comment 1448 [rdx:0, rsi:0, stack:16, stack:32]at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 12, duringCall: false, rethrow: false]
              |0             |1                  |2               |3              
     locals:  |rsi|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1448 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1455 942 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1459 944 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 946 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 948 rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1471 950 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1476 952 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<OutputStream.write(byte[], int, int)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:19, 18]  <||@
  Comment 1477 INVOKEVIRTUAL  <||@
  Comment 1487 {HotSpotMethod<OutputStream.write(byte[], int, int)>}  <||@
  Comment 1492 [stack:32]at java.io.BufferedOutputStream.implWrite(BufferedOutputStream.java:217) [bci: 19, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:200) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1500 954 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 956 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 1510 block B3 null  <||@
  Comment 1510 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1510 130 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1515 132 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1519 134 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1524 136 NOP  <||@
  Comment 1525 138 NOP  <||@
  Comment 1526 140 NOP  <||@
  Comment 1527 142 NOP  <||@
  Comment 1528 144 NOP  <||@
  Comment 1529 146 NOP  <||@
  Comment 1530 148 NOP  <||@
  Comment 1531 150 MOV x: [r15|QWORD + 1156] y: -124179 size: DWORD  <||@
  Comment 1542 152 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1553 154 DEOPT info [bci:32, 1, 4, 4, 11]  <||@
  Comment 1553 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1558 [r11:0, stack:16, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:229) [bci: 32, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |r11|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |   |  
  at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:152) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r11|QWORD[.] 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5 
     locals:  |stack:48|QWORD[.]  |stack:64|QWORD[.]  |stack:32|DWORD  |stack:28|DWORD  |-  |-   <||@
  Comment 1566 block B11 null  <||@
  Comment 1566 458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1566 460 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1571 462 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1575 464 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1580 466 NOP  <||@
  Comment 1581 468 NOP  <||@
  Comment 1582 470 NOP  <||@
  Comment 1583 472 r11|QWORD = MOVE input: long[9620|0x2594]  <||@
  Comment 1590 474 r10|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed]  <||@
  Comment 1596 486 JUMP ~outgoingValues: [] destination: B11 -> B26  <||@
  Comment 1596 block B26 null  <||@
  Comment 1596 794 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1596 476 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1601 484 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1606 796 NOP  <||@
  Comment 1607 798 NOP  <||@
  Comment 1608 800 NOP  <||@
  Comment 1609 802 NOP  <||@
  Comment 1610 804 NOP  <||@
  Comment 1611 806 NOP  <||@
  Comment 1612 808 NOP  <||@
  Comment 1613 810 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1620 812 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1627 814 DEOPT info [bci:12, 4, 4, 11]  <||@
  Comment 1627 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1632 [rax:0, rdx:0, rsi:0]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rax|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1640 block B17 null  <||@
  Comment 1640 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 590 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1645 592 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1649 594 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1654 596 NOP  <||@
  Comment 1655 598 NOP  <||@
  Comment 1656 600 NOP  <||@
  Comment 1657 602 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1664 604 r10|DWORD = MOVE input: int[-117785|0xfffffffffffe33e7]  <||@
  Comment 1670 616 JUMP ~outgoingValues: [] destination: B17 -> B26  <||@
  Comment 1672 block B25 null  <||@
  Comment 1672 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1672 766 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1677 768 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1681 770 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1686 772 NOP  <||@
  Comment 1687 774 NOP  <||@
  Comment 1688 776 NOP  <||@
  Comment 1689 778 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1696 780 r10|DWORD = MOVE input: int[-121881|0xfffffffffffe23e7]  <||@
  Comment 1702 792 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 1704 block B23 null  <||@
  Comment 1704 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1704 720 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1709 722 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1713 724 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1718 726 NOP  <||@
  Comment 1719 728 NOP  <||@
  Comment 1720 730 NOP  <||@
  Comment 1721 732 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1728 734 r10|DWORD = MOVE input: int[-120857|0xfffffffffffe27e7]  <||@
  Comment 1734 746 JUMP ~outgoingValues: [] destination: B23 -> B26  <||@
  Comment 1739 block B19 null  <||@
  Comment 1739 630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1739 632 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1744 634 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1748 636 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 638 NOP  <||@
  Comment 1754 640 NOP  <||@
  Comment 1755 642 NOP  <||@
  Comment 1756 644 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1763 646 r10|DWORD = MOVE input: int[-118809|0xfffffffffffe2fe7]  <||@
  Comment 1769 658 JUMP ~outgoingValues: [] destination: B19 -> B26  <||@
  Comment 1774 block B21 null  <||@
  Comment 1774 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1774 674 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1779 676 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1783 678 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 680 NOP  <||@
  Comment 1789 682 NOP  <||@
  Comment 1790 684 NOP  <||@
  Comment 1791 686 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1798 688 r10|DWORD = MOVE input: int[-119833|0xfffffffffffe2be7]  <||@
  Comment 1804 700 JUMP ~outgoingValues: [] destination: B21 -> B26  <||@
  Comment 1809 block B46 null  <||@
  Comment 1809 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1809 1304 NOP  <||@
  Comment 1810 1306 NOP  <||@
  Comment 1811 1308 NOP  <||@
  Comment 1812 1310 NOP  <||@
  Comment 1813 1312 NOP  <||@
  Comment 1814 1314 NOP  <||@
  Comment 1815 1316 NOP  <||@
  Comment 1816 1318 NOP  <||@
  Comment 1817 1320 NOP  <||@
  Comment 1818 1322 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@656db9c1 encoding: base: 0 shift: 3  <||@
  Comment 1822 1324 MOV x: [r15|QWORD + 1156] y: -122899 size: DWORD  <||@
  Comment 1833 1326 MOV x: [r15|QWORD + 1168] y: 10900 size: QWORD  <||@
  Comment 1844 1328 DEOPT info [bci:4, 2, 5, 4, 25]  <||@
  Comment 1844 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1849 [rdx:0, r10:0, r11:0, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(ReentrantLock.java:173) [bci: 4, duringCall: false, rethrow: false]
              |0             |1           |2  |3 
     locals:  |r11|QWORD[.]  |int[1|0x1]  |-  |- 
     stack:   |r8|DWORD      |            |   |  
  at java.util.concurrent.locks.AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1059) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.util.concurrent.locks.ReentrantLock.unlock(ReentrantLock.java:494) [bci: 5, duringCall: true, rethrow: false]
              |0            
     locals:  |r10|QWORD[.] 
  at jdk.internal.misc.InternalLock.unlock(InternalLock.java:78) [bci: 4, duringCall: true, rethrow: false]
              |0            
     locals:  |rdx|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:48|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 1857 block B15 null  <||@
  Comment 1857 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1857 548 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1862 550 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1866 552 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 554 NOP  <||@
  Comment 1872 556 NOP  <||@
  Comment 1873 558 NOP  <||@
  Comment 1874 560 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 1881 562 r10|DWORD = MOVE input: int[-116755|0xfffffffffffe37ed]  <||@
  Comment 1887 574 JUMP ~outgoingValues: [] destination: B15 -> B26  <||@
  Comment 1892 block B13 null  <||@
  Comment 1892 500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1892 502 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1897 504 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1901 506 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 508 NOP  <||@
  Comment 1907 510 NOP  <||@
  Comment 1908 512 NOP  <||@
  Comment 1909 514 r11|QWORD = MOVE input: long[10260|0x2814]  <||@
  Comment 1916 516 r10|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed]  <||@
  Comment 1922 528 JUMP ~outgoingValues: [] destination: B13 -> B26  <||@
  Comment 1932 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1947 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1962 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1977 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2002 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2035 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2065 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2070 [rax:0, rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:197) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2100 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2105 [rdx:0, rsi:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2135 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2140 [rdx:0, rsi:0, r10:0, stack:24, stack:32]at java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:154) [bci: 12, duringCall: false, rethrow: false]
              |0 
     locals:  |- 
  at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322) [bci: 4, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at jdk.internal.misc.InternalLock.lock(InternalLock.java:74) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:56|QWORD[.] 
  at java.io.BufferedOutputStream.write(BufferedOutputStream.java:198) [bci: 11, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 2170 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2175 [rdx:0, rsi:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2205 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2210 [rdx:0, rsi:0, r10:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2245 [rdx:0, rsi:0, r10:0, r11:0, stack:32]at java.io.BufferedOutputStream.write(BufferedOutputStream.java:202) [bci: 21, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 2253 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2253 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2259 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2259 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
