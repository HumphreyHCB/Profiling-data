begin_compilation
  name " HotSpotCompilation-11119[java.lang.StringConcatHelper.prepend(long, byte[], char, String)]"
  method "HotSpotCompilation-11119[java.lang.StringConcatHelper.prepend(long, byte[], char, String)]"
  date 1724269767671
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i243 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j20 v17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?24 ?27 j241 v249 j232 v248 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i26 ?24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?27 v250 v252 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: lload_0
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], char, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 236
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: j1 - a2 i3 a4 
=== Succesors ===
=== Usages ===
v203 i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: j1 - a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-23307|0xffffffffffffa4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v162 
=== Usages ===
v96 i128 i84 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v248 lastLocationAccess: - #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 11]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 11]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i64
=== Inputs ===
x: j1 
y: j19 
=== Succesors ===
=== Usages ===
i21 ?24 j28 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1 y: j19  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 14]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
resultBits: 32
stamp: i32
=== Inputs ===
value: j20 
=== Succesors ===
=== Usages ===
j145 v96 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j20  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i243 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i21 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 j202 j213 j213 j213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v159 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v159 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
v104 
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: 4294967296
stableDimension: 0
stamp: i64 [4294967296]
stampKind: i64
value: long[4294967296|0x100000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1 
y: j16 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j1 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i21 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: j145 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j145  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 20]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
resultBits: 8
stamp: i8
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v159 
address: v249 
lastLocationAccess: - 
value: i26 
stateAfter: - 
=== Succesors ===
next: a244 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v159 address: v249 lastLocationAccess: - value: i26 stateAfter: - #next: a244  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], char, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 236
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a2 - a4 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a2 - a4  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: goto
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], char)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
sourceFile: StringConcatHelper.java
sourceLine: 217
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?27 
values: j20 - a2 i3 
=== Succesors ===
=== Usages ===
v214 a244 i246 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?27 values: j20 - a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-43795|0xffffffffffff54ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v250 
lastLocationAccess: - 
=== Succesors ===
next: i245 
=== Usages ===
a108 v251 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v250 lastLocationAccess: - #next: i245  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: i246 
=== Usages ===
i116 
=== Predecessor ===
a244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a244 
=== Succesors ===
=== Usages ===
i246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-29963|0xffffffffffff8af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: v178 
=== Usages ===
i39 j237 v78 i70 i128 
=== Predecessor ===
i245 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v251 lastLocationAccess: - #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i245 
=== Succesors ===
=== Usages ===
i39 v44 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i245  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i246 
y: i116 
=== Succesors ===
=== Usages ===
j41 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i246 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j28 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
x: j20 
y: j41 
=== Succesors ===
=== Usages ===
v30 i32 v15 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j20 y: j41  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j28 
y: j16 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j28 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
i246 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 16]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 19]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 32
stamp: i32
=== Inputs ===
value: j28 
=== Succesors ===
=== Usages ===
j233 j247 v64 i70 v129 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j28  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i29 
=== Succesors ===
=== Usages ===
v190 v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i32 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i29 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i116 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid a108 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a244 
=== Succesors ===
=== Usages ===
j228 j239 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v45 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v46 #falseSuccessor: v45  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -45849
stableDimension: 0
stamp: i32 [-45849]
stampKind: i32
value: int[-45849|0xffffffffffff4ce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i243 
y: i246 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i243 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i32 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i128 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -46873
stableDimension: 0
stamp: i32 [-46873]
stampKind: i32
value: int[-46873|0xffffffffffff48e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j228 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a108 
=== Succesors ===
next: j232 
=== Usages ===
v253 
=== Predecessor ===
v185 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a108 #next: j232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v238 
=== Usages ===
v254 
=== Predecessor ===
j228 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j228 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j228 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j232 
index: j233 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j232 index: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v253 v254 j237 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
j232 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v253 v254 j237 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -47897
stableDimension: 0
stamp: i32 [-47897]
stampKind: i32
value: int[-47897|0xffffffffffff44e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j76 i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i243 
y: i69 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i243 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32
=== Inputs ===
x: i32 
y: i246 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i32 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i70 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i84 y: i70  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v192 #falseSuccessor: v193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -48921
stableDimension: 0
stamp: i32 [-48921]
stampKind: i32
value: int[-48921|0xffffffffffff40e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j239 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a108 
=== Succesors ===
next: j241 
=== Usages ===
j240 
=== Predecessor ===
v193 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a108 #next: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v78 
=== Usages ===
j242 
=== Predecessor ===
j239 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 j85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
x: j239 
y: j73 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j239 y: j73  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
j76 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i32  <|@  <|@
f <@~|@floating>@ <|@
tid j76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j247 
y: i69 
=== Succesors ===
=== Usages ===
j85 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j247 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j76 
y: j73 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j76 y: j73  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
x: j85 
y: j241 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j85 y: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j240 
dst: j242 
len: i246 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
j241 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j240 dst: j242 len: i246 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v82 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v82 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:238) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: j28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -44819
stableDimension: 0
stamp: i32 [-44819]
stampKind: i32
value: int[-44819|0xffffffffffff50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: i32 [-48921 - -44819] bits:1...1010xxx001110x1x1
valueDescription: i32
=== Inputs ===
merge: v209 
values: i218 i220 i223 i225 i227 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i218 i220 i223 i225 i227  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v209 
values: j200 j221 j200 j200 j200 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: j200 j221 j200 j200 j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v217 v219 v222 v224 v226 
=== Succesors ===
next: v214 
=== Usages ===
i212 j213 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v217 v219 v222 v224 v226 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?24 
actionAndReason: i212 
speculation: j213 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?24 actionAndReason: i212 speculation: j213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: -42771
stableDimension: 0
stamp: i32 [-42771]
stampKind: i32
value: int[-42771|0xffffffffffff58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: -24859
stableDimension: 0
stamp: i32 [-24859]
stampKind: i32
value: int[-24859|0xffffffffffff9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i32 [-42771 - -24859] bits:1...1xx011xx01110x101
valueDescription: i32
=== Inputs ===
merge: v197 
values: i205 i207 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v197 values: i205 i207  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v197 
values: j200 j208 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v197 values: j200 j208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v204 v206 
=== Succesors ===
next: v203 
=== Usages ===
i201 j202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v204 v206 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i201 
speculation: j202 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i201 speculation: j202  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i243 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j20 v17 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?24 ?27 j241 v249 j232 v248 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i26 ?24 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?27 v250 v252 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: lload_0
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], char, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 236
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: j1 - a2 i3 a4 
=== Succesors ===
=== Usages ===
v203 i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: j1 - a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-23307|0xffffffffffffa4f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v162 
=== Usages ===
v96 i128 i84 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v248 lastLocationAccess: - #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid j19 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 11]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j20 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 11]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i64
=== Inputs ===
x: j1 
y: j19 
=== Succesors ===
=== Usages ===
i21 ?24 j28 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1 y: j19  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 14]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
resultBits: 32
stamp: i32
=== Inputs ===
value: j20 
=== Succesors ===
=== Usages ===
j145 v96 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j20  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i243 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i21 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 j202 j213 j213 j213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v159 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v159 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
v104 
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: 4294967296
stableDimension: 0
stamp: i64 [4294967296]
stampKind: i64
value: long[4294967296|0x100000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1 
y: j16 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j1 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid j145 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i21 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v1|QWORD[.] + v8|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: j145 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: j145  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 20]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
resultBits: 8
stamp: i8
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v159 
address: v249 
lastLocationAccess: - 
value: i26 
stateAfter: - 
=== Succesors ===
next: a244 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v159 address: v249 lastLocationAccess: - value: i26 stateAfter: - #next: a244  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], char, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 236
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a2 - a4 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a2 - a4  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: goto
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], char)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
sourceFile: StringConcatHelper.java
sourceLine: 217
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?27 
values: j20 - a2 i3 
=== Succesors ===
=== Usages ===
v214 a244 i246 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?27 values: j20 - a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a244 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-43795|0xffffffffffff54ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v250 
lastLocationAccess: - 
=== Succesors ===
next: i245 
=== Usages ===
a108 v251 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v250 lastLocationAccess: - #next: i245  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i245 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: i246 
=== Usages ===
i116 
=== Predecessor ===
a244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v9|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a244 
=== Succesors ===
=== Usages ===
i246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i246 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-29963|0xffffffffffff8af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: v178 
=== Usages ===
i39 j237 v78 i70 i128 
=== Predecessor ===
i245 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v251 lastLocationAccess: - #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i245 
=== Succesors ===
=== Usages ===
i39 v44 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i245  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i246 
y: i116 
=== Succesors ===
=== Usages ===
j41 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i246 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid j41 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j28 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j28 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
x: j20 
y: j41 
=== Succesors ===
=== Usages ===
v30 i32 v15 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j20 y: j41  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j28 
y: j16 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j28 y: j16  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v176 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
i246 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v176 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 16]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 19]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 32
stamp: i32
=== Inputs ===
value: j28 
=== Succesors ===
=== Usages ===
j233 j247 v64 i70 v129 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j28  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i29 
=== Succesors ===
=== Usages ===
v190 v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i32 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i29 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i116 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid a108 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a244 
=== Succesors ===
=== Usages ===
j228 j239 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a244  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v45 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v46 #falseSuccessor: v45  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result int[-45849|0xffffffffffff4ce7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -45849
stableDimension: 0
stamp: i32 [-45849]
stampKind: i32
value: int[-45849|0xffffffffffff4ce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i243 
y: i246 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i243 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i32 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i128 y: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v129 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v129 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v224  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result int[-46873|0xffffffffffff48e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -46873
stableDimension: 0
stamp: i32 [-46873]
stampKind: i32
value: int[-46873|0xffffffffffff48e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j228 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j228  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j228 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a108 
=== Succesors ===
next: j232 
=== Usages ===
v253 
=== Predecessor ===
v185 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a108 #next: j232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j232 <|@
result v19|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v238 
=== Usages ===
v254 
=== Predecessor ===
j228 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
result [v18|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j228 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j228 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i32  <|@  <|@
f <@~|@floating>@ <|@
tid v254 <|@
result [v19|QWORD[*] + v20|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j232 
index: j233 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j232 index: j233  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i246 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v253 v254 j237 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
j232 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v253 v254 j237 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result int[-47897|0xffffffffffff44e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -47897
stableDimension: 0
stamp: i32 [-47897]
stampKind: i32
value: int[-47897|0xffffffffffff44e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j76 i84 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i243 
y: i69 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i243 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i32
=== Inputs ===
x: i32 
y: i246 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i32 y: i246  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i70 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i84 y: i70  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v71 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v71 #trueSuccessor: v192 #falseSuccessor: v193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result int[-48921|0xffffffffffff40e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -48921
stableDimension: 0
stamp: i32 [-48921]
stampKind: i32
value: int[-48921|0xffffffffffff40e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j239 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j239 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a108 
=== Succesors ===
next: j241 
=== Usages ===
j240 
=== Predecessor ===
v193 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a108 #next: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j241 <|@
result v25|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v78 
=== Usages ===
j242 
=== Predecessor ===
j239 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid j73 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 j85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j240 <|@
result v26|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
x: j239 
y: j73 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j239 y: j73  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
j76 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i32  <|@  <|@
f <@~|@floating>@ <|@
tid j76 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j247 
y: i69 
=== Succesors ===
=== Usages ===
j85 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j247 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid j85 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j76 
y: j73 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j76 y: j73  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: i64
=== Inputs ===
x: j85 
y: j241 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j85 y: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j240 
dst: j242 
len: i246 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
j241 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j240 dst: j242 len: i246 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
v78 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v80 v82 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v80 v82 #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:238) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: j28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v219 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result int[-44819|0xffffffffffff50ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
rawvalue: -44819
stableDimension: 0
stamp: i32 [-44819]
stampKind: i32
value: int[-44819|0xffffffffffff50ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v177 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: i32 [-48921 - -44819] bits:1...1010xxx001110x1x1
valueDescription: i32
=== Inputs ===
merge: v209 
values: i218 i220 i223 i225 i227 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i218 i220 i223 i225 i227  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v209 
values: j200 j221 j200 j200 j200 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: j200 j221 j200 j200 j200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v217 v219 v222 v224 v226 
=== Succesors ===
next: v214 
=== Usages ===
i212 j213 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v217 v219 v222 v224 v226 #next: v214  <|@  <|@
f <@*|@fixed>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:237) [bci: 9]
stamp: void
=== Inputs ===
stateBefore: ?24 
actionAndReason: i212 
speculation: j213 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?24 actionAndReason: i212 speculation: j213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:216) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result int[-42771|0xffffffffffff58ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: -42771
stableDimension: 0
stamp: i32 [-42771]
stampKind: i32
value: int[-42771|0xffffffffffff58ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[-24859|0xffffffffffff9ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
rawvalue: -24859
stableDimension: 0
stamp: i32 [-24859]
stampKind: i32
value: int[-24859|0xffffffffffff9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v161 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i201 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i32 [-42771 - -24859] bits:1...1xx011xx01110x101
valueDescription: i32
=== Inputs ===
merge: v197 
values: i205 i207 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v197 values: i205 i207  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v197 
values: j200 j208 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v197 values: j200 j208  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v204 v206 
=== Succesors ===
next: v203 
=== Usages ===
i201 j202 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v204 v206 #next: v203  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i201 
speculation: j202 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i201 speculation: j202  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[210, 211[[232, 234[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v10|d [0, 36[[102, 105[[210, 211[[326, 328[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 34[[208, 211[[324, 329[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[210, 211[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v26|q [0, 32[[206, 211[[322, 329[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[204, 211[[328, 329[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 38[[210, 211[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [32, 64[[404, 445[32 MustHaveRegister 42 ShouldHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [34, 198[[236, 310[[332, 403[[404, 445[34 MustHaveRegister 40 MustHaveRegister 94 MustHaveRegister 198 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [36, 162[[236, 268[[332, 403[[404, 445[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [38, 162[[236, 268[[332, 403[[404, 445[38 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [40, 158[[236, 262[40 MustHaveRegister 46 MustHaveRegister 158 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v0|q [42, 162[[236, 268[[332, 403[42 MustHaveRegister 44 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [44, 92[44 MustHaveRegister 46 ShouldHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [60, 110[60 MustHaveRegister 62 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [96, 130[96 MustHaveRegister 100 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [98, 132[98 MustHaveRegister 102 ShouldHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [100, 202[[236, 326[100 MustHaveRegister 104 ShouldHaveRegister 158 ShouldHaveRegister 202 ShouldHaveRegister 264 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v5|q [108, 232[[236, 332[108 MustHaveRegister 110 ShouldHaveRegister 128 ShouldHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [128, 200[[236, 314[128 MustHaveRegister 144 MustHaveRegister 160 MustHaveRegister 200 ShouldHaveRegister 246 MustHaveRegister 264 ShouldHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v9|d [130, 196[[236, 308[130 MustHaveRegister 196 ShouldHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v4|d [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v16|q [196, 204[196 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v1|q [198, 206[198 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [200, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v11|d [202, 208[202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v4|d [262, 266[262 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v15|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v16|q [308, 312[308 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v1|q [310, 320[310 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [312, 322[312 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [382, 398[398 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [382, 400[400 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [424, 440[440 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [424, 442[442 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[210, 211[[232, 234[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v10|d [0, 36[[102, 105[[210, 211[[326, 328[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 34[[208, 211[[324, 329[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[210, 211[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v26|q [0, 32[[206, 211[[322, 329[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[204, 211[[328, 329[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 38[[210, 211[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [32, 64[[404, 445[32 MustHaveRegister 42 ShouldHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 198[[236, 310[[332, 403[[404, 445[34 MustHaveRegister 40 MustHaveRegister 94 MustHaveRegister 198 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|d [36, 162[[236, 268[[332, 403[[404, 445[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [38, 162[[236, 268[[332, 403[[404, 445[38 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 158[[236, 262[40 MustHaveRegister 46 MustHaveRegister 158 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q v0|q [42, 162[[236, 268[[332, 403[42 MustHaveRegister 44 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d -1 [44, 92[44 MustHaveRegister 46 ShouldHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdi|q]" v7|q -1 [60, 110[60 MustHaveRegister 62 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rcx|q]" v8|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rsi|d]" v9|d -1 [96, 130[96 MustHaveRegister 100 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [98, 132[98 MustHaveRegister 102 ShouldHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [100, 202[[236, 326[100 MustHaveRegister 104 ShouldHaveRegister 158 ShouldHaveRegister 202 ShouldHaveRegister 264 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v11|d [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v12|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v5|q [108, 162[108 MustHaveRegister 110 ShouldHaveRegister 128 ShouldHaveRegister  "OneSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [128, 200[[236, 314[128 MustHaveRegister 144 MustHaveRegister 160 MustHaveRegister 200 ShouldHaveRegister 246 MustHaveRegister 264 ShouldHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v9|d [130, 196[[236, 308[130 MustHaveRegister 196 ShouldHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v4|d [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|q [196, 204[196 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdx|q]" v19|q v1|q [198, 206[198 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [200, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v11|d [202, 208[202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v4|d [262, 266[262 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v15|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v16|q [308, 312[308 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q v1|q [310, 320[310 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q -1 [312, 322[312 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rcx|q]" v27|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q v27|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q -1 [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [382, 398[398 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [382, 400[400 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [424, 440[440 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r9|q]" v34|q -1 [424, 442[442 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[vstack:0|q]" v14|q v14|q [162, 209[ "OneSpillStore"
  v36|q QWORD "[vstack:0|q]" v14|q v14|q [209, 232[[236, 332[232 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = STACKMOVE (input: v35|QWORD, ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[210, 211[[232, 234[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v10|d [0, 36[[102, 105[[210, 211[[326, 328[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 34[[208, 211[[324, 329[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[210, 211[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v26|q [0, 32[[206, 211[[322, 329[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[204, 211[[328, 329[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 38[[210, 211[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [32, 64[[404, 445[32 MustHaveRegister 42 ShouldHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 198[[236, 310[[332, 403[[404, 445[34 MustHaveRegister 40 MustHaveRegister 94 MustHaveRegister 198 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|d [36, 162[[236, 268[[332, 403[[404, 445[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [38, 162[[236, 268[[332, 403[[404, 445[38 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 158[[236, 262[40 MustHaveRegister 46 MustHaveRegister 158 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q v0|q [42, 162[[236, 268[[332, 403[42 MustHaveRegister 44 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d -1 [44, 92[44 MustHaveRegister 46 ShouldHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdi|q]" v7|q -1 [60, 110[60 MustHaveRegister 62 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rcx|q]" v8|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rsi|d]" v9|d -1 [96, 130[96 MustHaveRegister 100 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [98, 132[98 MustHaveRegister 102 ShouldHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [100, 202[[236, 326[100 MustHaveRegister 104 ShouldHaveRegister 158 ShouldHaveRegister 202 ShouldHaveRegister 264 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v11|d [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v12|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v5|q [108, 162[108 MustHaveRegister 110 ShouldHaveRegister 128 ShouldHaveRegister  "OneSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [128, 200[[236, 314[128 MustHaveRegister 144 MustHaveRegister 160 MustHaveRegister 200 ShouldHaveRegister 246 MustHaveRegister 264 ShouldHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v9|d [130, 196[[236, 308[130 MustHaveRegister 196 ShouldHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v4|d [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|q [196, 204[196 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdx|q]" v19|q v1|q [198, 206[198 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [200, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v11|d [202, 208[202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v4|d [262, 266[262 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v15|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v16|q [308, 312[308 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q v1|q [310, 320[310 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q -1 [312, 322[312 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rcx|q]" v27|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q v27|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q -1 [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [382, 398[398 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [382, 400[400 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [424, 440[440 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r9|q]" v34|q -1 [424, 442[442 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[vstack:0|q]" v14|q v14|q [162, 209[ "OneSpillStore"
  v36|q QWORD "[vstack:0|q]" v14|q v14|q [209, 232[[236, 332[232 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = STACKMOVE (input: v35|QWORD, ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [int[-44819|0xffffffffffff50ed], long[1300|0x514]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [int[-46873|0xffffffffffff48e7], long[0|0x0]] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [int[-47897|0xffffffffffff44e7], long[0|0x0]] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-48921|0xffffffffffff40e7], long[0|0x0]] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [int[-45849|0xffffffffffff4ce7], long[0|0x0]] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [int[-24859|0xffffffffffff9ee5], long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [int[-42771|0xffffffffffff58ed], long[660|0x294]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[210, 211[[232, 234[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v10|d [0, 36[[102, 105[[210, 211[[326, 328[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v21|q [0, 34[[208, 211[[324, 329[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[210, 211[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v26|q [0, 32[[206, 211[[322, 329[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[204, 211[[328, 329[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 38[[210, 211[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[210, 211[[328, 329[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[210, 211[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [32, 64[[404, 445[32 MustHaveRegister 42 ShouldHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [34, 198[[236, 310[[332, 403[[404, 445[34 MustHaveRegister 40 MustHaveRegister 94 MustHaveRegister 198 ShouldHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d rcx|d [36, 162[[236, 268[[332, 403[[404, 445[36 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [38, 162[[236, 268[[332, 403[[404, 445[38 MustHaveRegister 96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [40, 158[[236, 262[40 MustHaveRegister 46 MustHaveRegister 158 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r9|q]" v5|q v0|q [42, 162[[236, 268[[332, 403[42 MustHaveRegister 44 ShouldHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rcx|d]" v6|d -1 [44, 92[44 MustHaveRegister 46 ShouldHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdi|q]" v7|q -1 [60, 110[60 MustHaveRegister 62 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rcx|q]" v8|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rsi|d]" v9|d -1 [96, 130[96 MustHaveRegister 100 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [98, 132[98 MustHaveRegister 102 ShouldHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d -1 [100, 202[[236, 326[100 MustHaveRegister 104 ShouldHaveRegister 158 ShouldHaveRegister 202 ShouldHaveRegister 264 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v11|d [104, 106[104 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbp|q]" v13|q v12|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v5|q [108, 162[108 MustHaveRegister 110 ShouldHaveRegister 128 ShouldHaveRegister  "OneSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [128, 200[[236, 314[128 MustHaveRegister 144 MustHaveRegister 160 MustHaveRegister 200 ShouldHaveRegister 246 MustHaveRegister 264 ShouldHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v9|d [130, 196[[236, 308[130 MustHaveRegister 196 ShouldHaveRegister 308 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r11|d]" v17|d v4|d [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v16|q [196, 204[196 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdx|q]" v19|q v1|q [198, 206[198 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q -1 [200, 206[200 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v11|d [202, 208[202 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v4|d [262, 266[262 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rcx|d]" v23|d v15|d [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v16|q [308, 312[308 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q v1|q [310, 320[310 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rsi|q]" v26|q -1 [312, 322[312 MustHaveRegister 322 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rcx|q]" v27|q -1 [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q v27|q [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q -1 [318, 320[318 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rcx|q]" v30|q v29|q [320, 324[320 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [382, 398[398 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [382, 400[400 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [424, 440[440 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r9|q]" v34|q -1 [424, 442[442 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[vstack:0|q]" v14|q v14|q [162, 209[ "OneSpillStore"
  v36|q QWORD "[vstack:0|q]" v14|q v14|q [209, 232[[236, 332[232 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVE input: v14|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = STACKMOVE (input: v35|QWORD, ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: v14|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [v31|DWORD, v32|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [v33|DWORD, v34|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction v5|QWORD = DEC value: v0|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction v6|DWORD = MOV value: v5|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v7|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v0|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v8|QWORD = MOV value: v6|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [v1|QWORD[.] + v8|QWORD * 1 + 16], y: reinterpret: v2|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v9|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction v10|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v11|DWORD = MOV input: [v9|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: v10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v12|DWORD = SHR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction v13|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v14|QWORD = SUB (x: v5|QWORD, ~y: v13|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v7|QWORD, y: v14|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v15|DWORD = MOV value: v14|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: v10|DWORD, y: v10|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction v17|DWORD = SUB (x: v4|DWORD, ~y: v11|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOVE input: v14|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction v18|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction v19|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction v20|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction v21|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [v18|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [v19|QWORD[*] + v20|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = STACKMOVE (input: v35|QWORD, ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVE input: v14|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: v15|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v22|DWORD = SHR value: v4|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction v23|DWORD = ADD (x: v15|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: v23|DWORD, y: v22|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction v24|QWORD[*] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction v25|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction v26|QWORD[*] = LEA address: [v24|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction v27|QWORD = MOV value: v15|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction v28|QWORD = SHL value: v27|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction v30|QWORD[*] = ADD (x: v29|QWORD, y: v25|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: v30|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v31|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v32|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: v5|QWORD - v1|QWORD[.] v2|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v33|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v34|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: vstack:0|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   36  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   44  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   98  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  130  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  212  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: vstack:0|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  264  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  322  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction vstack:0|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: vstack:0|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction vstack:0|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [186, 382[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [186, 382[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r9|QWORD = DEC value: rsi|QWORD size: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOV value: r9|QWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction rdi|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B15" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3] <|@ <|@
      nr   92  <|@ instruction rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rdi|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  236  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction r11|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  284  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV value: rdi|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" "B15" "B10" "B7" "B12" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22]
locals: r9|QWORD - rdx|QWORD[.] r10|DWORD 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3]
locals: - - rdx|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:22, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  180  <|@ instruction r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7] <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  262  <|@ instruction r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7] <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  296  <|@ instruction r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7] <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7] <|@ <|@
      nr  152  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  446  <|@ instruction r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5] <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [rdx:0, r8:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|DWORD r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  432  <|@ instruction r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed] <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: iload_3       
     3: invokestatic  #13         // prepend:(long, byte[], char)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f850f0200009090909090909090909090909048896c2410448bd1448b5a0c4c8bce49ffc9418bc9443bd90f86a0010000909090909048bf0000000001000000483bfe0f8eba010000909090909090909090909090908bc94488540a10418b7014410fbe58108b04f50c0000008bcb8be8d3ed498bc9482bcd483bf90f8ed5000000909090909090908bf948c1e60385db0f856b0000009090909085ff0f8c1c0100009090909090442bd8413bfb0f8fd500000048890c2490909090909090909090909090909090448bd7488d7e104a8d741210488bd0e8000000009090909090909090488b0424488b6c24104883c418493ba7500400000f8727010000c5f877c348890c249090909085ff0f8c8900000090909090909041d1eb8bcf03c8413bcb0f878500000090909090909090909090909090909090909090488d76108bcf48d1e1488d49104803ca488bd18bc8e800000000eb8590909048c7c11405000041bbed50ffff9090909090909045899f8404000049898f90040000e8000000000f1f84000000000090909048c7c10000000041bbe748ffffebcc90909048c7c10000000041bbe744ffffebba90909048c7c10000000041bbe740ffffeba890909048c7c10000000041bbe74cffffeb9690909049c7c10000000041bbe59effff9090909090909045899f840400004d898f90040000e8000000000f1f84000000000090909049c7c19402000041bbed58ffffebcc48896c2410e800000000e9e2fdfffff4488d0dc5feffff49898f68040000e9b4fdfffff441c78784040000f5a4ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed54ffff49c7879004000014000000e8000000000f1f84000000000041c78784040000f58affff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 44 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD  <||@
  Comment 44 32 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 47 34 r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 47 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]   <||@
  Comment 47 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 36 r9|QWORD = DEC value: rsi|QWORD size: QWORD  <||@
  Comment 57 38 rcx|DWORD = MOV value: r9|QWORD size: DWORD  <||@
  Comment 60 40 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD  <||@
  Comment 69 block B1 null  <||@
  Comment 69 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 69 44 NOP  <||@
  Comment 70 46 NOP  <||@
  Comment 71 48 NOP  <||@
  Comment 72 50 NOP  <||@
  Comment 73 52 NOP  <||@
  Comment 74 54 rdi|QWORD = MOVE input: long[4294967296|0x100000000]  <||@
  Comment 84 56 CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD  <||@
  Comment 93 block B2 null  <||@
  Comment 93 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 60 NOP  <||@
  Comment 94 62 NOP  <||@
  Comment 95 64 NOP  <||@
  Comment 96 66 NOP  <||@
  Comment 97 68 NOP  <||@
  Comment 98 70 NOP  <||@
  Comment 99 72 NOP  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 rcx|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 108 88 MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE  <||@
  Comment 113 90 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3]  <||@
  Comment 113 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 92 rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 122 94 rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3]  <||@
  Comment 122 [rdx:0, rsi:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 129 96 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 131 98 rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 135 100 rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 135 102 rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD  <||@
  Comment 141 104 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD  <||@
  Comment 150 block B3 null  <||@
  Comment 150 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 108 NOP  <||@
  Comment 151 110 NOP  <||@
  Comment 152 112 NOP  <||@
  Comment 153 114 NOP  <||@
  Comment 154 116 NOP  <||@
  Comment 155 118 NOP  <||@
  Comment 156 120 NOP  <||@
  Comment 157 122 rdi|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 159 124 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3  <||@
  Comment 163 126 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD  <||@
  Comment 171 block B4 null  <||@
  Comment 171 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 171 130 NOP  <||@
  Comment 172 132 NOP  <||@
  Comment 173 134 NOP  <||@
  Comment 174 136 NOP  <||@
  Comment 175 138 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 183 block B6 null  <||@
  Comment 183 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 156 NOP  <||@
  Comment 184 158 NOP  <||@
  Comment 185 160 NOP  <||@
  Comment 186 162 NOP  <||@
  Comment 187 164 NOP  <||@
  Comment 188 166 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 191 168 CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 200 block B8 null  <||@
  Comment 200 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 186 stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 204 188 NOP  <||@
  Comment 205 190 NOP  <||@
  Comment 206 192 NOP  <||@
  Comment 207 194 NOP  <||@
  Comment 208 196 NOP  <||@
  Comment 209 198 NOP  <||@
  Comment 210 200 NOP  <||@
  Comment 211 202 NOP  <||@
  Comment 212 204 NOP  <||@
  Comment 213 206 NOP  <||@
  Comment 214 208 NOP  <||@
  Comment 215 210 NOP  <||@
  Comment 216 212 NOP  <||@
  Comment 217 214 NOP  <||@
  Comment 218 216 NOP  <||@
  Comment 219 218 NOP  <||@
  Comment 220 220 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 220 222 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 220 224 r10|QWORD = MOV value: rdi|DWORD size: DWORD  <||@
  Comment 223 226 rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 223 228 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 227 230 rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD  <||@
  Comment 232 232 rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 235 234 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 235 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 240 236 JUMP ~outgoingValues: [] destination: B8 -> B14  <||@
  Comment 240 block B14 null  <||@
  Comment 240 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 240 366 NOP  <||@
  Comment 241 368 NOP  <||@
  Comment 242 370 NOP  <||@
  Comment 243 372 NOP  <||@
  Comment 244 374 NOP  <||@
  Comment 245 376 NOP  <||@
  Comment 246 378 NOP  <||@
  Comment 247 380 NOP  <||@
  Comment 248 382 rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD  <||@
  Comment 252 384 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 261 POLL_RETURN_FAR  <||@
  Comment 278 block B9 null  <||@
  Comment 278 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 240 stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 282 242 NOP  <||@
  Comment 283 244 NOP  <||@
  Comment 284 246 NOP  <||@
  Comment 285 248 NOP  <||@
  Comment 286 250 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 294 block B11 null  <||@
  Comment 294 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 294 268 NOP  <||@
  Comment 295 270 NOP  <||@
  Comment 296 272 NOP  <||@
  Comment 297 274 NOP  <||@
  Comment 298 276 NOP  <||@
  Comment 299 278 NOP  <||@
  Comment 300 280 r11|DWORD = SHR value: r11|DWORD size: DWORD  <||@
  Comment 303 282 rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 307 284 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 316 block B13 null  <||@
  Comment 316 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 302 NOP  <||@
  Comment 317 304 NOP  <||@
  Comment 318 306 NOP  <||@
  Comment 319 308 NOP  <||@
  Comment 320 310 NOP  <||@
  Comment 321 312 NOP  <||@
  Comment 322 314 NOP  <||@
  Comment 323 316 NOP  <||@
  Comment 324 318 NOP  <||@
  Comment 325 320 NOP  <||@
  Comment 326 322 NOP  <||@
  Comment 327 324 NOP  <||@
  Comment 328 326 NOP  <||@
  Comment 329 328 NOP  <||@
  Comment 330 330 NOP  <||@
  Comment 331 332 NOP  <||@
  Comment 332 334 NOP  <||@
  Comment 333 336 NOP  <||@
  Comment 334 338 NOP  <||@
  Comment 335 340 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 335 342 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 335 344 rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 339 346 rcx|QWORD = MOV value: rdi|DWORD size: DWORD  <||@
  Comment 341 348 rcx|QWORD = SHL value: rcx|QWORD size: QWORD  <||@
  Comment 344 350 rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD  <||@
  Comment 348 352 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 351 354 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 351 356 rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 354 358 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 356 360 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 356 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 361 362 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 363 block B15 null  <||@
  Comment 363 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 388 NOP  <||@
  Comment 364 390 NOP  <||@
  Comment 365 392 NOP  <||@
  Comment 366 394 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 373 396 r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed]  <||@
  Comment 379 398 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 379 block B16 null  <||@
  Comment 379 400 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 379 402 NOP  <||@
  Comment 380 404 NOP  <||@
  Comment 381 406 NOP  <||@
  Comment 382 408 NOP  <||@
  Comment 383 410 NOP  <||@
  Comment 384 412 NOP  <||@
  Comment 385 414 NOP  <||@
  Comment 386 416 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 393 418 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 400 420 DEOPT info [bci:22, 3]  <||@
  Comment 400 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 405 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 413 block B7 null  <||@
  Comment 413 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 413 172 NOP  <||@
  Comment 414 174 NOP  <||@
  Comment 415 176 NOP  <||@
  Comment 416 178 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 423 180 r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7]  <||@
  Comment 429 182 JUMP ~outgoingValues: [] destination: B7 -> B16  <||@
  Comment 431 block B10 null  <||@
  Comment 431 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 431 254 NOP  <||@
  Comment 432 256 NOP  <||@
  Comment 433 258 NOP  <||@
  Comment 434 260 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 441 262 r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7]  <||@
  Comment 447 264 JUMP ~outgoingValues: [] destination: B10 -> B16  <||@
  Comment 449 block B12 null  <||@
  Comment 449 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 449 288 NOP  <||@
  Comment 450 290 NOP  <||@
  Comment 451 292 NOP  <||@
  Comment 452 294 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 459 296 r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7]  <||@
  Comment 465 298 JUMP ~outgoingValues: [] destination: B12 -> B16  <||@
  Comment 467 block B5 null  <||@
  Comment 467 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 142 NOP  <||@
  Comment 468 144 NOP  <||@
  Comment 469 146 NOP  <||@
  Comment 470 148 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 477 150 r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7]  <||@
  Comment 483 152 JUMP ~outgoingValues: [] destination: B5 -> B16  <||@
  Comment 485 block B18 null  <||@
  Comment 485 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 485 438 NOP  <||@
  Comment 486 440 NOP  <||@
  Comment 487 442 NOP  <||@
  Comment 488 444 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 495 446 r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5]  <||@
  Comment 501 448 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 501 block B19 null  <||@
  Comment 501 450 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 501 452 NOP  <||@
  Comment 502 454 NOP  <||@
  Comment 503 456 NOP  <||@
  Comment 504 458 NOP  <||@
  Comment 505 460 NOP  <||@
  Comment 506 462 NOP  <||@
  Comment 507 464 NOP  <||@
  Comment 508 466 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 515 468 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 522 470 DEOPT info [bci:0]  <||@
  Comment 522 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 527 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]   <||@
  Comment 535 block B17 null  <||@
  Comment 535 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 424 NOP  <||@
  Comment 536 426 NOP  <||@
  Comment 537 428 NOP  <||@
  Comment 538 430 r9|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 545 432 r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed]  <||@
  Comment 551 434 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 558 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 583 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 611 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 616 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]   <||@
  Comment 646 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 651 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 681 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 686 [rdx:0, rsi:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 694 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 694 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 700 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 700 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11119[java.lang.StringConcatHelper.prepend(long, byte[], char, String)]"
  method "HotSpotCompilation-11119[java.lang.StringConcatHelper.prepend(long, byte[], char, String)]"
  date 1724269767864
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af8c200 89842400c0feff4883ec189041817f20000000000f850f0200009090909090909090909090909048896c2410448bd1448b5a0c4c8bce49ffc9418bc9443bd90f86a0010000909090909048bf0000000001000000483bfe0f8eba010000909090909090909090909090908bc94488540a10418b7014410fbe58108b04f50c0000008bcb8be8d3ed498bc9482bcd483bf90f8ed5000000909090909090908bf948c1e60385db0f856b0000009090909085ff0f8c1c0100009090909090442bd8413bfb0f8fd500000048890c2490909090909090909090909090909090448bd7488d7e104a8d741210488bd0e810db7dfe9090909090909090488b0424488b6c24104883c418493ba7500400000f8727010000c5f877c348890c249090909085ff0f8c8900000090909090909041d1eb8bcf03c8413bcb0f878500000090909090909090909090909090909090909090488d76108bcf48d1e1488d49104803ca488bd18bc8e897ea94feeb8590909048c7c11405000041bbed50ffff9090909090909045899f8404000049898f90040000e8e5ed7ffe0f1f84000000000090909048c7c10000000041bbe748ffffebcc90909048c7c10000000041bbe744ffffebba90909048c7c10000000041bbe740ffffeba890909048c7c10000000041bbe74cffffeb9690909049c7c10000000041bbe59effff9090909090909045899f840400004d898f90040000e86bed7ffe0f1f84000000000090909049c7c19402000041bbed58ffffebcc48896c2410e8eded7dfee9e2fdfffff4488d0dc5feffff49898f68040000e9b4fb7ffef441c78784040000f5a4ffff49c7879004000000000000e812ed7ffe0f1f84000000000041c78784040000ed54ffff49c7879004000014000000e8efec7ffe0f1f84000000000041c78784040000f58affff49c7879004000000000000e8ccec7ffe0f1f840000000000e8458e93fef4e85fea7ffef4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD, rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 44 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3da880b3 slotKind: QWORD  <||@
  Comment 44 32 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 47 34 r11|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 47 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]   <||@
  Comment 47 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 36 r9|QWORD = DEC value: rsi|QWORD size: QWORD  <||@
  Comment 57 38 rcx|DWORD = MOV value: r9|QWORD size: DWORD  <||@
  Comment 60 40 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B18 size: DWORD  <||@
  Comment 69 block B1 null  <||@
  Comment 69 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 69 44 NOP  <||@
  Comment 70 46 NOP  <||@
  Comment 71 48 NOP  <||@
  Comment 72 50 NOP  <||@
  Comment 73 52 NOP  <||@
  Comment 74 54 rdi|QWORD = MOVE input: long[4294967296|0x100000000]  <||@
  Comment 84 56 CMPBRANCH (x: rdi|QWORD, y: rsi|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B17 size: QWORD  <||@
  Comment 93 block B2 null  <||@
  Comment 93 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 60 NOP  <||@
  Comment 94 62 NOP  <||@
  Comment 95 64 NOP  <||@
  Comment 96 66 NOP  <||@
  Comment 97 68 NOP  <||@
  Comment 98 70 NOP  <||@
  Comment 99 72 NOP  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 rcx|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 108 88 MOVB (x: [rdx|QWORD[.] + rcx|QWORD * 1 + 16], y: r10|BYTE(DWORD)) size: BYTE  <||@
  Comment 113 90 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD state [bci:22, 3]  <||@
  Comment 113 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 92 rbx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 122 94 rax|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:22, 3]  <||@
  Comment 122 [rdx:0, rsi:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 122 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 129 96 rcx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 131 98 rbp|DWORD = SHR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 135 100 rbp|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 135 102 rcx|QWORD = SUB (x: r9|QWORD, ~y: rbp|QWORD) size: QWORD  <||@
  Comment 141 104 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B15 size: QWORD  <||@
  Comment 150 block B3 null  <||@
  Comment 150 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 108 NOP  <||@
  Comment 151 110 NOP  <||@
  Comment 152 112 NOP  <||@
  Comment 153 114 NOP  <||@
  Comment 154 116 NOP  <||@
  Comment 155 118 NOP  <||@
  Comment 156 120 NOP  <||@
  Comment 157 122 rdi|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 159 124 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6adc25c9 encoding: base: 0 shift: 3  <||@
  Comment 163 126 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD  <||@
  Comment 171 block B4 null  <||@
  Comment 171 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 171 130 NOP  <||@
  Comment 172 132 NOP  <||@
  Comment 173 134 NOP  <||@
  Comment 174 136 NOP  <||@
  Comment 175 138 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 183 block B6 null  <||@
  Comment 183 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 183 156 NOP  <||@
  Comment 184 158 NOP  <||@
  Comment 185 160 NOP  <||@
  Comment 186 162 NOP  <||@
  Comment 187 164 NOP  <||@
  Comment 188 166 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 191 168 CMPBRANCH (x: rdi|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 200 block B8 null  <||@
  Comment 200 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 200 186 stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 204 188 NOP  <||@
  Comment 205 190 NOP  <||@
  Comment 206 192 NOP  <||@
  Comment 207 194 NOP  <||@
  Comment 208 196 NOP  <||@
  Comment 209 198 NOP  <||@
  Comment 210 200 NOP  <||@
  Comment 211 202 NOP  <||@
  Comment 212 204 NOP  <||@
  Comment 213 206 NOP  <||@
  Comment 214 208 NOP  <||@
  Comment 215 210 NOP  <||@
  Comment 216 212 NOP  <||@
  Comment 217 214 NOP  <||@
  Comment 218 216 NOP  <||@
  Comment 219 218 NOP  <||@
  Comment 220 220 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 220 222 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 220 224 r10|QWORD = MOV value: rdi|DWORD size: DWORD  <||@
  Comment 223 226 rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 223 228 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 227 230 rsi|QWORD = LEA address: [rdx|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD  <||@
  Comment 232 232 rdx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 235 234 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 235 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 240 236 JUMP ~outgoingValues: [] destination: B8 -> B14  <||@
  Comment 240 block B14 null  <||@
  Comment 240 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 240 366 NOP  <||@
  Comment 241 368 NOP  <||@
  Comment 242 370 NOP  <||@
  Comment 243 372 NOP  <||@
  Comment 244 374 NOP  <||@
  Comment 245 376 NOP  <||@
  Comment 246 378 NOP  <||@
  Comment 247 380 NOP  <||@
  Comment 248 382 rax|QWORD = MOVE input: stack:32|QWORD moveKind: QWORD  <||@
  Comment 252 384 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 261 POLL_RETURN_FAR  <||@
  Comment 278 block B9 null  <||@
  Comment 278 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 240 stack:32|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 282 242 NOP  <||@
  Comment 283 244 NOP  <||@
  Comment 284 246 NOP  <||@
  Comment 285 248 NOP  <||@
  Comment 286 250 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 294 block B11 null  <||@
  Comment 294 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 294 268 NOP  <||@
  Comment 295 270 NOP  <||@
  Comment 296 272 NOP  <||@
  Comment 297 274 NOP  <||@
  Comment 298 276 NOP  <||@
  Comment 299 278 NOP  <||@
  Comment 300 280 r11|DWORD = SHR value: r11|DWORD size: DWORD  <||@
  Comment 303 282 rcx|DWORD = ADD (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 307 284 CMPBRANCH (x: rcx|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 316 block B13 null  <||@
  Comment 316 300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 302 NOP  <||@
  Comment 317 304 NOP  <||@
  Comment 318 306 NOP  <||@
  Comment 319 308 NOP  <||@
  Comment 320 310 NOP  <||@
  Comment 321 312 NOP  <||@
  Comment 322 314 NOP  <||@
  Comment 323 316 NOP  <||@
  Comment 324 318 NOP  <||@
  Comment 325 320 NOP  <||@
  Comment 326 322 NOP  <||@
  Comment 327 324 NOP  <||@
  Comment 328 326 NOP  <||@
  Comment 329 328 NOP  <||@
  Comment 330 330 NOP  <||@
  Comment 331 332 NOP  <||@
  Comment 332 334 NOP  <||@
  Comment 333 336 NOP  <||@
  Comment 334 338 NOP  <||@
  Comment 335 340 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 335 342 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 335 344 rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 339 346 rcx|QWORD = MOV value: rdi|DWORD size: DWORD  <||@
  Comment 341 348 rcx|QWORD = SHL value: rcx|QWORD size: QWORD  <||@
  Comment 344 350 rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD  <||@
  Comment 348 352 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 351 354 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 351 356 rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 354 358 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 356 360 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 356 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 361 362 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 363 block B15 null  <||@
  Comment 363 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 388 NOP  <||@
  Comment 364 390 NOP  <||@
  Comment 365 392 NOP  <||@
  Comment 366 394 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 373 396 r11|DWORD = MOVE input: int[-44819|0xffffffffffff50ed]  <||@
  Comment 379 398 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 379 block B16 null  <||@
  Comment 379 400 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 379 402 NOP  <||@
  Comment 380 404 NOP  <||@
  Comment 381 406 NOP  <||@
  Comment 382 408 NOP  <||@
  Comment 383 410 NOP  <||@
  Comment 384 412 NOP  <||@
  Comment 385 414 NOP  <||@
  Comment 386 416 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 393 418 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 400 420 DEOPT info [bci:22, 3]  <||@
  Comment 400 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 405 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 413 block B7 null  <||@
  Comment 413 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 413 172 NOP  <||@
  Comment 414 174 NOP  <||@
  Comment 415 176 NOP  <||@
  Comment 416 178 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 423 180 r11|DWORD = MOVE input: int[-46873|0xffffffffffff48e7]  <||@
  Comment 429 182 JUMP ~outgoingValues: [] destination: B7 -> B16  <||@
  Comment 431 block B10 null  <||@
  Comment 431 252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 431 254 NOP  <||@
  Comment 432 256 NOP  <||@
  Comment 433 258 NOP  <||@
  Comment 434 260 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 441 262 r11|DWORD = MOVE input: int[-47897|0xffffffffffff44e7]  <||@
  Comment 447 264 JUMP ~outgoingValues: [] destination: B10 -> B16  <||@
  Comment 449 block B12 null  <||@
  Comment 449 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 449 288 NOP  <||@
  Comment 450 290 NOP  <||@
  Comment 451 292 NOP  <||@
  Comment 452 294 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 459 296 r11|DWORD = MOVE input: int[-48921|0xffffffffffff40e7]  <||@
  Comment 465 298 JUMP ~outgoingValues: [] destination: B12 -> B16  <||@
  Comment 467 block B5 null  <||@
  Comment 467 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 142 NOP  <||@
  Comment 468 144 NOP  <||@
  Comment 469 146 NOP  <||@
  Comment 470 148 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 477 150 r11|DWORD = MOVE input: int[-45849|0xffffffffffff4ce7]  <||@
  Comment 483 152 JUMP ~outgoingValues: [] destination: B5 -> B16  <||@
  Comment 485 block B18 null  <||@
  Comment 485 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 485 438 NOP  <||@
  Comment 486 440 NOP  <||@
  Comment 487 442 NOP  <||@
  Comment 488 444 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 495 446 r11|DWORD = MOVE input: int[-24859|0xffffffffffff9ee5]  <||@
  Comment 501 448 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 501 block B19 null  <||@
  Comment 501 450 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 501 452 NOP  <||@
  Comment 502 454 NOP  <||@
  Comment 503 456 NOP  <||@
  Comment 504 458 NOP  <||@
  Comment 505 460 NOP  <||@
  Comment 506 462 NOP  <||@
  Comment 507 464 NOP  <||@
  Comment 508 466 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 515 468 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 522 470 DEOPT info [bci:0]  <||@
  Comment 522 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 527 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]   <||@
  Comment 535 block B17 null  <||@
  Comment 535 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 424 NOP  <||@
  Comment 536 426 NOP  <||@
  Comment 537 428 NOP  <||@
  Comment 538 430 r9|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 545 432 r11|DWORD = MOVE input: int[-42771|0xffffffffffff58ed]  <||@
  Comment 551 434 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 558 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 583 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 611 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 616 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3          |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD  |r8|QWORD[.]   <||@
  Comment 646 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 651 [rdx:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 681 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 686 [rdx:0, rsi:0, r8:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:217) [bci: 22, duringCall: false, rethrow: false]
              |0         |1  |2             |3         
     locals:  |r9|QWORD  |-  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:236) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2             |3  |4           
     locals:  |-  |-  |rdx|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 694 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 694 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 700 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 700 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
